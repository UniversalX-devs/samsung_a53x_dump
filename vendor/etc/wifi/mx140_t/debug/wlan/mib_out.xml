<?xml version="1.0" encoding="UTF-8"?>
<metadata_list xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="HydraMeta.xsd">
    <metadata version="498228756" subsystem_name="wlan" subsystem_layer="fw" subsystem_id="2">
        <source_control id="$Id$" time="$DateTime$" change="$Change$" author="$Author$" />
        <enum_def enum_name="unifiCSROnlyMIBShield">
            <enum_entry enum_label="open" enum_value="1" />
            <enum_entry enum_label="warn" enum_value="2" />
            <enum_entry enum_label="guard" enum_value="3" />
            <enum_entry enum_label="alarm" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiExternalFastClockRequest">
            <enum_entry enum_label="no_clock_request" enum_value="0" />
            <enum_entry enum_label="totem_pole" enum_value="1" />
            <enum_entry enum_label="inverted_totem_pole" enum_value="2" />
            <enum_entry enum_label="open_drain" enum_value="3" />
            <enum_entry enum_label="open_source" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiMLMEFaultReportLevel">
            <enum_entry enum_label="none" enum_value="0" />
            <enum_entry enum_label="detailed" enum_value="1" />
        </enum_def>
        <enum_def enum_name="unifiPioHostWakeMode">
            <enum_entry enum_label="wake_none" enum_value="1" />
            <enum_entry enum_label="wake_pulse" enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiPioHostWakePolarity">
            <enum_entry enum_label="positive" enum_value="0" />
            <enum_entry enum_label="negative" enum_value="1" />
        </enum_def>
        <enum_def enum_name="unifiPioHostWakeZeal">
            <enum_entry enum_label="wake_normal" enum_value="0" />
            <enum_entry enum_label="wake_always" enum_value="1" />
        </enum_def>
        <enum_def enum_name="unifiUartPios">
            <enum_entry enum_label="no_pios" enum_value="1" />
            <enum_entry enum_label="tx_rx_only" enum_value="2" />
            <enum_entry enum_label="tx_rx_rts_cts" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiRateStatsIndex">
            <enum_entry enum_label="rate_1m" enum_value="1" />
            <enum_entry enum_label="rate_2m" enum_value="2" />
            <enum_entry enum_label="rate_5m5" enum_value="3" />
            <enum_entry enum_label="rate_6m" enum_value="4" />
            <enum_entry enum_label="rate_9m" enum_value="5" />
            <enum_entry enum_label="rate_11m" enum_value="6" />
            <enum_entry enum_label="rate_12m" enum_value="7" />
            <enum_entry enum_label="rate_18m" enum_value="8" />
            <enum_entry enum_label="rate_24m" enum_value="9" />
            <enum_entry enum_label="rate_36m" enum_value="10" />
            <enum_entry enum_label="rate_48m" enum_value="11" />
            <enum_entry enum_label="rate_54m" enum_value="12" />
        </enum_def>
        <enum_def enum_name="unifiThroughputDebugIndex">
            <enum_entry enum_label="mac_no_ack_count"  enum_value="1" />
            <enum_entry enum_label="mac_good_fcs_count"  enum_value="2" />
            <enum_entry enum_label="mac_bad_fcs_count" enum_value="3" />
            <enum_entry enum_label="dplp_missed_ba_count"  enum_value="4" />
            <enum_entry enum_label="dplp_missed_ack_count"  enum_value="5" />
            <enum_entry enum_label="dplp_ba_agg_below_quarter"  enum_value="6" />
            <enum_entry enum_label="dplp_ba_agg_above_quarter" enum_value="7" />
            <enum_entry enum_label="dplp_mpdus_total_transmitted_on_air" enum_value="8" />
            <enum_entry enum_label="dplp_mpdus_successfully_transmitted" enum_value="9" />
            <enum_entry enum_label="dplp_mpdus_failed_transmit" enum_value="10" />
            <enum_entry enum_label="dplp_laa_rate_decrease_counter" enum_value="11" />
            <enum_entry enum_label="dplp_laa_rate_increase_counter" enum_value="12" />
            <enum_entry enum_label="dplp_paused_counter" enum_value="13" />
            <enum_entry enum_label="dplp_resumed_counter" enum_value="14" />
            <enum_entry enum_label="rice_rf_on_counter"  enum_value="15" />
            <enum_entry enum_label="rice_rf_off_counter"  enum_value="16" />
            <enum_entry enum_label="dplp_free_resources_cb_counter" enum_value="17" />
            <enum_entry enum_label="hostio_lowest_fh_resources" enum_value="18" />
            <enum_entry enum_label="hostio_highest_th_resources" enum_value="19" />
            <enum_entry enum_label="hostio_scan_started_counter" enum_value="20" />
            <enum_entry enum_label="hostio_outstanding_fh_mbulk" enum_value="21" />
            <enum_entry enum_label="hostio_outstanding_th_mbulk" enum_value="22" />
            <enum_entry enum_label="fos_cpu_usage" enum_value="23" />
            <enum_entry enum_label="dplp_coex_collisions" enum_value="24" />
            <enum_entry enum_label="mac_bad_sig_count" enum_value="25" />
            <enum_entry enum_label="dplp_tx_under_flow" enum_value="26" />
            <enum_entry enum_label="dplp_change_power_req_count" enum_value="27" />
            <enum_entry enum_label="mac_rx_mpdus_in_ampdus" enum_value="28" />
            <enum_entry enum_label="dplp_rx_mpdus" enum_value="29" />
            <enum_entry enum_label="mac_rx_error_count" enum_value="30" />
            <enum_entry enum_label="mac_rx_ampdus" enum_value="31" />
            <enum_entry enum_label="dplp_protection_error_count" enum_value="32" />
            <enum_entry enum_label="dplp_ba_missed_cts_count" enum_value="33" />
            <enum_entry enum_label="dplp_ppdu_tx" enum_value="34" />
            <enum_entry enum_label="dplp_ba_received" enum_value="35" />
            <enum_entry enum_label="dplp_ba_timeout" enum_value="36" />
            <enum_entry enum_label="dplp_ba_aggregation_below_bursting" enum_value="37" />
            <enum_entry enum_label="dplp_ba_aggregation_above_bursting" enum_value="38" />
            <enum_entry enum_label="dplp_ba_aggregation_cannot_burst" enum_value="39" />
            <enum_entry enum_label="dplp_ba_aggregation_can_burst" enum_value="40" />
            <enum_entry enum_label="rice_nanny_retrim_request_count" enum_value="41" />
            <enum_entry enum_label="dplp_rx_ppdus_mu" enum_value="42" />
            <enum_entry enum_label="dplp_rx_ppdus_su" enum_value="43" />
            <enum_entry enum_label="dplp_ba_received_prot" enum_value="44" />
            <enum_entry enum_label="dplp_ba_received_noprot" enum_value="45" />
            <enum_entry enum_label="dplp_ba_missing_prot" enum_value="46" />
            <enum_entry enum_label="dplp_ba_missing_noprot" enum_value="47" />
            <enum_entry enum_label="dplp_mpdu_succ_prot" enum_value="48" />
            <enum_entry enum_label="dplp_mpdu_succ_noprot" enum_value="49" />
            <enum_entry enum_label="dplp_mpdu_fail_prot" enum_value="50" />
            <enum_entry enum_label="dplp_mpdu_fail_noprot" enum_value="51" />
            <enum_entry enum_label="dplp_mpdus_in_ampdus" enum_value="52" />
            <enum_entry enum_label="mac_tx_under_count" enum_value="53" />
            <enum_entry enum_label="mac_rx_octets_in_ampdus" enum_value="54" />
            <enum_entry enum_label="mac_rx_ampdu_delim_crc_err_count" enum_value="55" />
            <enum_entry enum_label="mac_rx_ampdu_delim_len_err_count" enum_value="56" />
            <enum_entry enum_label="mac_rx_ampdu_delim_spacing_err_count" enum_value="57" />
            <enum_entry enum_label="mac_rx_ampdu_delim_single_err_count" enum_value="58" />
            <enum_entry enum_label="mac_acc_off" enum_value="59" />
            <enum_entry enum_label="mac_acc_dynamic_restart" enum_value="60" />
            <enum_entry enum_label="fos_interrupt_cpu_usage" enum_value="61" />
            <!-- No longer available - start. -->
            <!--<enum_entry enum_label="mac_ht_sig_count" enum_value="62" />
            <enum_entry enum_label="mac_ht_sig_crc_fail_count" enum_value="63" />
            <enum_entry enum_label="mac_vht_sig_count" enum_value="64" />
            <enum_entry enum_label="mac_vht_sig_crc_fail_count" enum_value="65" />
            <enum_entry enum_label="mac_he_sig_count" enum_value="66" />
            <enum_entry enum_label="mac_he_sig_crc_fail_count" enum_value="67" />
            <enum_entry enum_label="mac_he_su_ppdu_sig_count" enum_value="68" />
            <enum_entry enum_label="mac_he_su_ppdu_sig_crc_fail_count" enum_value="69" />
            <enum_entry enum_label="mac_he_mu_ppdu_sig_count" enum_value="70" />
            <enum_entry enum_label="mac_he_mu_ppdu_sig_crc_fail_count" enum_value="71" /> -->
            <!-- No longer available - end. -->
            <enum_entry enum_label="mac_he_tb_ppdu_sig_count" enum_value="72" />
            <!-- No longer available - start. -->
            <!-- <enum_entry enum_label="mac_he_tb_ppdu_sig_crc_fail_count" enum_value="73" />
            <enum_entry enum_label="mac_bss_color_abort_count" enum_value="74" /> -->
            <!-- No longer available - end. -->
            <enum_entry enum_label="mac_rx_phy_error_count" enum_value="75" />
            <enum_entry enum_label="mac_phy_fsm_error_count" enum_value="76" />
            <enum_entry enum_label="mac_phy_unsupported_rx_rate" enum_value="77" />
            <enum_entry enum_label="mac_phy_fsm_state_bad" enum_value="78" />
            <!-- Counter below no longer available. -->
            <!--<enum_entry enum_label="mac_tx_success_count" enum_value="79" /> -->
            <enum_entry enum_label="mac_tx_abort_count" enum_value="80" />
            <enum_entry enum_label="mac_tx_stop_error_count" enum_value="81" />
            <enum_entry enum_label="mac_tx_starvation_count" enum_value="82" />
            <enum_entry enum_label="mac_tx_phy_error_count" enum_value="83" />
            <enum_entry enum_label="mac_tx_coex_no_antennas" enum_value="84" />
            <enum_entry enum_label="mac_tx_vector2_late" enum_value="85" />
            <enum_entry enum_label="mac_tx_htsig_late" enum_value="86" />
            <enum_entry enum_label="mac_tx_vector_unsupported" enum_value="87" />
            <enum_entry enum_label="mac_tx_watchdog_count" enum_value="88" />
            <!-- Counter below no longer available. -->
            <!-- <enum_entry enum_label="mac_tx_watchdog_consecutive_count" enum_value="89" /> -->
            <enum_entry enum_label="mac_tx_response_slot_timer_watchdog" enum_value="90" />
            <enum_entry enum_label="mac_tx_ack_response_count" enum_value="91" />
            <enum_entry enum_label="mac_tx_cts_response_count" enum_value="92" />
            <enum_entry enum_label="mac_tx_tb_response_count" enum_value="93" />
            <enum_entry enum_label="mac_he_trigger_received_count" enum_value="94" />
            <enum_entry enum_label="mac_tx_tb_success_count" enum_value="95" />
            <!-- Counter below no longer available. -->
            <!-- <enum_entry enum_label="mac_tx_cbr_count" enum_value="96" /> -->
            <!-- Counter below no longer available. -->
            <!-- <enum_entry enum_label="mac_tx_cf_end_count" enum_value="97" /> -->
            <enum_entry enum_label="mac_tx_rts_count" enum_value="98" />
            <!-- No longer available - start. -->
            <!-- <enum_entry enum_label="mac_enc_dma_tx_copy" enum_value="99" />
            <enum_entry enum_label="mac_enc_dma_tx_encrypt" enum_value="100" />
            <enum_entry enum_label="mac_enc_dma_rx_copy" enum_value="101" />
            <enum_entry enum_label="mac_enc_dma_rx_decrypt_ok" enum_value="102" />
            <enum_entry enum_label="mac_enc_dma_rx_decrypt_fail" enum_value="103" />
            <enum_entry enum_label="mac_mpdus_passed_up" enum_value="104" /> -->
            <!-- No longer available - end. -->
            <enum_entry enum_label="mac_delimiter_error_count" enum_value="105" />
            <enum_entry enum_label="mac_frame_too_long_count" enum_value="106" />
            <!-- Counter below no longer available. -->
            <!-- <enum_entry enum_label="mac_cck_sync_fail_count" enum_value="107" /> -->
            <enum_entry enum_label="mac_ofdm_sync_fail_count" enum_value="108" />
            <enum_entry enum_label="mac_rx_abort_ppdu_early_count" enum_value="109" />
            <enum_entry enum_label="mac_rx_abort_nav_rewind_count" enum_value="110" />
            <enum_entry enum_label="mac_early_response_count" enum_value="111" />
            <enum_entry enum_label="mac_rx_overflow_count" enum_value="112" />
            <!-- throughput_debug_index_last SHOULD be the last, and have same value as the last one above. -->
            <enum_entry enum_label="throughput_debug_index_last" enum_value="112" />
        </enum_def>

        <enum_def enum_name="unifiReadHardwareCounterIndex">
            <enum_entry enum_label="MAC_DOT11_FCS_ERROR_COUNT" enum_value="1" />
            <enum_entry enum_label="MAC_DOT11_FCS_GOOD_COUNT" enum_value="2" />
            <enum_entry enum_label="MAC_BAD_SIG_COUNT" enum_value="3" />
            <enum_entry enum_label="MAC_TX_UNDER_COUNT" enum_value="4" />
            <enum_entry enum_label="MAC_NO_ACK_COUNT" enum_value="5" />
            <enum_entry enum_label="MAC_DOT11_RX_OCTETS_IN_AMPDUS" enum_value="6" />
            <enum_entry enum_label="MAC_DOT11_RX_AMPDUS_COUNT" enum_value="7" />
            <enum_entry enum_label="MAC_DOT11_RX_MPDUS_IN_AMPDUS_COUNT" enum_value="8" />
            <!-- MAC_DOT11_RX_AMPDU_DELIM_CRC_ERR_COUNT exists only on Night and Sockeye. -->
            <enum_entry enum_label="MAC_DOT11_RX_AMPDU_DELIM_CRC_ERR_COUNT" enum_value="9" />
            <!-- MAC_DOT11_ERROR_COUNT exists only on Sockeye and Rock. -->
            <enum_entry enum_label="MAC_DOT11_ERROR_COUNT" enum_value="10" />
            <!-- MAC_DOT11_RX_AMPDU_DELIM_LEN_ERR_COUNT, MAC_DOT11_RX_AMPDU_DELIM_SPACING_ERR_COUNT
            and MAC_DOT11_RX_AMPDU_DELIM_SINGLE_ERR_COUNT exist only on Rock. -->
            <enum_entry enum_label="MAC_DOT11_RX_AMPDU_DELIM_LEN_ERR_COUNT" enum_value="11" />
            <enum_entry enum_label="MAC_DOT11_RX_AMPDU_DELIM_SPACING_ERR_COUNT" enum_value="12" />
            <enum_entry enum_label="MAC_DOT11_RX_AMPDU_DELIM_SINGLE_ERR_COUNT" enum_value="13" />
            <enum_entry enum_label="LMIF_dphp_mac_acc_off" enum_value="14" />
            <enum_entry enum_label="LMIF_dphp_dynamic_restart" enum_value="15" />
            <!-- lower_mac_index_last SHOULD be the last, and have same value as the last one above. -->
            <enum_entry enum_label="lower_mac_index_last" enum_value="15" />
        </enum_def>
        <enum_def enum_name="unifiRadioTXSettingsIndex">
            <enum_entry enum_label="OFDM0_PRE_GAIN" enum_value="1" />
            <enum_entry enum_label="OFDM1_PRE_GAIN" enum_value="2" />
            <enum_entry enum_label="CCK_PRE_GAIN" enum_value="3" />
            <enum_entry enum_label="TR_PRE_GAIN" enum_value="4" />
            <enum_entry enum_label="OFDM0_FIR_GAIN" enum_value="5" />
            <enum_entry enum_label="OFDM1_FIR_GAIN" enum_value="6" />
            <enum_entry enum_label="CCK_FIR_GAIN" enum_value="7" />
            <enum_entry enum_label="OFDM0_FW_BK_DELAY" enum_value="8" />
            <enum_entry enum_label="OFDM0_RX_BB1" enum_value="9" />
            <enum_entry enum_label="OFDM0_RX_BB2" enum_value="10" />
            <enum_entry enum_label="LOOPBACK_ATTEN" enum_value="11" />
            <enum_entry enum_label="OFDM0_FIR_COEFF" enum_value="12" />
            <enum_entry enum_label="DRV_BIAS" enum_value="13" />
            <enum_entry enum_label="PA_BIAS" enum_value="14" />
            <enum_entry enum_label="CCK_V2I_GAIN" enum_value="15" />
            <enum_entry enum_label="CCK_DRV_GAIN" enum_value="16" />
            <enum_entry enum_label="CCK_MIX_GAIN" enum_value="17" />
            <enum_entry enum_label="CCK_PA_GAIN" enum_value="18" />
            <enum_entry enum_label="OFDM0_V2I_GAIN" enum_value="19" />
            <enum_entry enum_label="OFDM0_DRV_GAIN" enum_value="20" />
            <enum_entry enum_label="OFDM0_MIX_GAIN" enum_value="21" />
            <enum_entry enum_label="OFDM0_PA_GAIN" enum_value="22" />
            <enum_entry enum_label="OFDM1_V2I_GAIN" enum_value="23" />
            <enum_entry enum_label="OFDM1_DRV_GAIN" enum_value="24" />
            <enum_entry enum_label="OFDM1_MIX_GAIN" enum_value="25" />
            <enum_entry enum_label="OFDM1_PA_GAIN" enum_value="26" />
            <enum_entry enum_label="MIX_FTRIM" enum_value="29" />
            <enum_entry enum_label="DRV_FTRIM" enum_value="30" />
            <enum_entry enum_label="PA_FTRIM" enum_value="31" />
            <enum_entry enum_label="CCK_V2I_DCTRIM_I" enum_value="32" />
            <enum_entry enum_label="CCK_V2I_DCTRIM_Q" enum_value="33" />
            <enum_entry enum_label="OFDM0_V2I_DCTRIM_I" enum_value="34" />
            <enum_entry enum_label="OFDM0_V2I_DCTRIM_Q" enum_value="35" />
            <enum_entry enum_label="OFDM1_V2I_DCTRIM_I" enum_value="36" />
            <enum_entry enum_label="OFDM1_V2I_DCTRIM_Q" enum_value="37" />
            <enum_entry enum_label="MIX_DCTRIM_I" enum_value="38" />
            <enum_entry enum_label="MIX_DCTRIM_Q" enum_value="39" />
            <enum_entry enum_label="IMAGE_SCALE_I" enum_value="40" />
            <enum_entry enum_label="IMAGE_SCALE_Q" enum_value="41" />
            <enum_entry enum_label="IMAGE_PHASE_COMP" enum_value="42" />
            <enum_entry enum_label="FREQ" enum_value="43" />
            <enum_entry enum_label="BW" enum_value="44" />
            <enum_entry enum_label="MODE" enum_value="45" />
            <enum_entry enum_label="IS_SCAN" enum_value="46" />
            <enum_entry enum_label="OFDM1_V2I_CARRIER_LEAKAGE_SA" enum_value="47" />
            <enum_entry enum_label="OFDM0_ADAPT_QUALITY" enum_value="48" />
            <enum_entry enum_label="OFDM1_ADAPT_QUALITY" enum_value="49" />
            <enum_entry enum_label="CCK_ADAPT_QUALITY" enum_value="50" />
            <!--><enum_entry enum_label="TR_ADAPT_QUALITY" enum_value="51" /><-->
            <enum_entry enum_label="IMAGE_SCALE_SA" enum_value="52" />
            <enum_entry enum_label="OFDM1_RX_BB1" enum_value="53" />
            <enum_entry enum_label="OFDM1_RX_BB2" enum_value="54" />
            <enum_entry enum_label="CCK_RX_BB1" enum_value="55" />
            <enum_entry enum_label="CCK_RX_BB2" enum_value="56" />
            <enum_entry enum_label="OFDM1_FW_BK_DELAY" enum_value="57" />
            <enum_entry enum_label="CCK_FW_BK_DELAY" enum_value="58" />
            <enum_entry enum_label="OFDM1_FIR_COEFF" enum_value="59" />
            <enum_entry enum_label="CCK_FIR_COEFF" enum_value="60" />
            <enum_entry enum_label="OFDM0_LOOPBACK_PHASE" enum_value="61" />
            <enum_entry enum_label="OFDM1_LOOPBACK_PHASE" enum_value="62" />
            <enum_entry enum_label="CCK_LOOPBACK_PHASE" enum_value="63" />
            <enum_entry enum_label="TX_IQ_DELAY" enum_value="64" />
            <enum_entry enum_label="CCK_IMAGE_SCALE" enum_value="65" />
            <enum_entry enum_label="CCK_IMAGE_ANGLE" enum_value="66" />
            <enum_entry enum_label="OFDM0_IMAGE_SCALE" enum_value="67" />
            <enum_entry enum_label="OFDM0_IMAGE_ANGLE" enum_value="68" />
            <enum_entry enum_label="OFDM1_IMAGE_SCALE" enum_value="69" />
            <enum_entry enum_label="OFDM1_IMAGE_ANGLE" enum_value="70" />
            <enum_entry enum_label="CCK_DIG_DCTRIM_I" enum_value="71" />
            <enum_entry enum_label="CCK_DIG_DCTRIM_Q" enum_value="72" />
            <enum_entry enum_label="OFDM0_DIG_DCTRIM_I" enum_value="73" />
            <enum_entry enum_label="OFDM0_DIG_DCTRIM_Q" enum_value="74" />
            <enum_entry enum_label="OFDM1_DIG_DCTRIM_I" enum_value="75" />
            <enum_entry enum_label="OFDM1_DIG_DCTRIM_Q" enum_value="76" />
            <enum_entry enum_label="FREQ_OFFSET_PPM" enum_value="80" />
            <enum_entry enum_label="MIX_DCO_FOR_PCAL_I" enum_value="81" />
            <enum_entry enum_label="MIX_DCO_FOR_PCAL_Q" enum_value="82" />
            <enum_entry enum_label="OFDM0_V2I_DCO_FOR_PCAL_I" enum_value="83" />
            <enum_entry enum_label="OFDM0_V2I_DCO_FOR_PCAL_Q" enum_value="84" />
            <enum_entry enum_label="OFDM1_V2I_DCO_FOR_PCAL_I" enum_value="85" />
            <enum_entry enum_label="OFDM1_V2I_DCO_FOR_PCAL_Q" enum_value="86" />
            <enum_entry enum_label="CCK_V2I_DCO_FOR_PCAL_I" enum_value="87" />
            <enum_entry enum_label="CCK_V2I_DCO_FOR_PCAL_Q" enum_value="88" />
            <enum_entry enum_label="OFDM0_PAPR_EN" enum_value="89" />
            <enum_entry enum_label="OFDM0_PAPR_THRESHOLD" enum_value="90" />
            <enum_entry enum_label="OFDM1_PAPR_EN" enum_value="91" />
            <enum_entry enum_label="OFDM1_PAPR_THRESHOLD" enum_value="92" />
            <enum_entry enum_label="OFDM0_SWED_EN" enum_value="93" />
            <enum_entry enum_label="OFDM0_SWED_THRESHOLD" enum_value="94" />
            <enum_entry enum_label="OFDM1_SWED_EN" enum_value="95" />
            <enum_entry enum_label="OFDM1_SWED_THRESHOLD" enum_value="96" />
        </enum_def>
        <enum_def enum_name="unifiRadioTXSettingsIndexV2">
            <enum_entry enum_label="TX_SETTINGS_READ2_ROW" enum_value="1" />
            <enum_entry enum_label="TX_SETTINGS_READ2_POWER_QDB" enum_value="2" />
            <enum_entry enum_label="TX_SETTINGS_READ2_FREQ" enum_value="3" />
            <enum_entry enum_label="TX_SETTINGS_READ2_BW" enum_value="4" />
            <enum_entry enum_label="TX_SETTINGS_READ2_MODE" enum_value="5" />
            <enum_entry enum_label="TX_SETTINGS_READ2_IS_SCAN" enum_value="6" />
            <enum_entry enum_label="TX_SETTINGS_READ2_DIG_GAIN" enum_value="7" />
            <enum_entry enum_label="TX_SETTINGS_READ2_MIX_BIAS" enum_value="8" />
            <enum_entry enum_label="TX_SETTINGS_READ2_DRV_BIAS" enum_value="9" />
            <enum_entry enum_label="TX_SETTINGS_READ2_PA_BIAS" enum_value="10" />
            <enum_entry enum_label="TX_SETTINGS_READ2_V2I_GAIN" enum_value="11" />
            <enum_entry enum_label="TX_SETTINGS_READ2_MIX_GAIN" enum_value="12" />
            <enum_entry enum_label="TX_SETTINGS_READ2_DRV_GAIN" enum_value="13" />
            <enum_entry enum_label="TX_SETTINGS_READ2_PA_GAIN" enum_value="14" />
            <enum_entry enum_label="TX_SETTINGS_READ2_MIX_FTRIM" enum_value="17" />
            <enum_entry enum_label="TX_SETTINGS_READ2_DRV_FTRIM" enum_value="18" />
            <enum_entry enum_label="TX_SETTINGS_READ2_PA_FTRIM" enum_value="19" />
            <enum_entry enum_label="TX_SETTINGS_READ2_V2I_DCTRIM_I" enum_value="20" />
            <enum_entry enum_label="TX_SETTINGS_READ2_V2I_DCTRIM_Q" enum_value="21" />
            <enum_entry enum_label="TX_SETTINGS_READ2_MIX_DCTRIM_I" enum_value="22" />
            <enum_entry enum_label="TX_SETTINGS_READ2_MIX_DCTRIM_Q" enum_value="23" />
            <enum_entry enum_label="TX_SETTINGS_READ2_IMAGE_SCALE" enum_value="24" />
            <enum_entry enum_label="TX_SETTINGS_READ2_IMAGE_ANGLE" enum_value="25" />
            <enum_entry enum_label="TX_SETTINGS_READ2_IMAGE_SCALE_SA" enum_value="26" />
            <enum_entry enum_label="TX_SETTINGS_READ2_V2I_CARRIER_LEAKAGE_SA" enum_value="27" />
            <enum_entry enum_label="TX_SETTINGS_READ2_TX_IQ_DELAY" enum_value="28" />
            <enum_entry enum_label="TX_SETTINGS_READ2_FIR_GAIN" enum_value="29" />
            <enum_entry enum_label="TX_SETTINGS_READ2_FW_BK_DELAY" enum_value="30" />
            <enum_entry enum_label="TX_SETTINGS_READ2_LOOPBACK_ATTEN" enum_value="31" />
            <enum_entry enum_label="TX_SETTINGS_READ2_FIR_COEFF" enum_value="32" />
            <enum_entry enum_label="TX_SETTINGS_READ2_ADAPT_QUALITY" enum_value="33" />
            <enum_entry enum_label="TX_SETTINGS_READ2_LOOPBACK_PHASE" enum_value="34" />
            <!-- RX_BUF_GAIN is relevant to dpd, in general don't add any rx settings -->
            <enum_entry enum_label="TX_SETTINGS_READ2_RX_BUF_GAIN" enum_value="35" />
            <enum_entry enum_label="TX_SETTINGS_READ2_DIG_DCTRIM_I" enum_value="36" />
            <enum_entry enum_label="TX_SETTINGS_READ2_DIG_DCTRIM_Q" enum_value="37" />
            <enum_entry enum_label="TX_SETTINGS_READ2_BIST_1V_REF" enum_value="38" />
            <enum_entry enum_label="TX_SETTINGS_READ2_BIST_EFEM" enum_value="39" />
            <enum_entry enum_label="TX_SETTINGS_READ2_BIST_EFEM_RAW" enum_value="40" />
            <enum_entry enum_label="TX_SETTINGS_READ2_POWER_TRIM_SIGANAL_REF" enum_value="41" />
            <enum_entry enum_label="TX_SETTINGS_READ2_FREQ_OFFSET_PPM" enum_value="45" />
            <enum_entry enum_label="TX_SETTINGS_READ2_POWER_TRIM_SIGANA_PER_GAIN_STEP" enum_value="46" />
            <enum_entry enum_label="TX_SETTINGS_READ2_MIX_DCO_FOR_PCAL_I" enum_value="47"/>
            <enum_entry enum_label="TX_SETTINGS_READ2_MIX_DCO_FOR_PCAL_Q" enum_value="48"/>
            <enum_entry enum_label="TX_SETTINGS_READ2_V2I_DCO_FOR_PCAL_I" enum_value="49"/>
            <enum_entry enum_label="TX_SETTINGS_READ2_V2I_DCO_FOR_PCAL_Q" enum_value="50"/>
            <enum_entry enum_label="TX_SETTINGS_READ2_PAPR_EN_OFDM0" enum_value="51" />
            <enum_entry enum_label="TX_SETTINGS_READ2_PAPR_THRESHOLD_OFDM0" enum_value="52" />
            <enum_entry enum_label="TX_SETTINGS_READ2_PAPR_EN_OFDM1" enum_value="53" />
            <enum_entry enum_label="TX_SETTINGS_READ2_PAPR_THRESHOLD_OFDM1" enum_value="54" />
            <enum_entry enum_label="TX_SETTINGS_READ2_SWED_EN_OFDM0" enum_value="55" />
            <enum_entry enum_label="TX_SETTINGS_READ2_SWED_THRESHOLD_OFDM0" enum_value="56" />
            <enum_entry enum_label="TX_SETTINGS_READ2_SWED_EN_OFDM1" enum_value="57" />
            <enum_entry enum_label="TX_SETTINGS_READ2_SWED_THRESHOLD_OFDM1" enum_value="58" />
            <enum_entry enum_label="TX_SETTINGS_READ2_NUM_TX_FDIQ_TAP_COEFF" enum_value="59" />
            <enum_entry enum_label="TX_SETTINGS_READ2_TX_FDIQ_TAP_COEFF_I" enum_value="60" />
            <enum_entry enum_label="TX_SETTINGS_READ2_TX_FDIQ_TAP_COEFF_Q" enum_value="61" />
            <!-- add new entries here -->
            <!-- special values -->
            <enum_entry enum_label="TX_SETTINGS_READ2_LAST_USED_ROW_INDEX" enum_value="254" />
            <enum_entry enum_label="TX_SETTINGS_READ2_NUM_ROWS" enum_value="255" />
        </enum_def>
        <enum_def enum_name="unifiRadioRXSettingsIndex">
            <enum_entry enum_label="WL_RADIO_CHANNEL_STATUS" enum_value="1" />
            <enum_entry enum_label="RX_DC_ADJUST" enum_value="2" />
            <enum_entry enum_label="FD_RX_COMP" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiRadioCCADebugTableIndex">
            <enum_entry enum_label="GAIN_THRESH_NORMAL_POWER_EXT_LNA_DISABLED"  enum_value="1" />
            <enum_entry enum_label="RSSI_THRESH_NORMAL_POWER_EXT_LNA_DISABLED"  enum_value="2" />
            <enum_entry enum_label="GAIN_THRESH_LOW_POWER_EXT_LNA_DISABLED"     enum_value="3" />
            <enum_entry enum_label="RSSI_THRESH_LOW_POWER_EXT_LNA_DISABLED"     enum_value="4" />
            <enum_entry enum_label="GAIN_THRESH_NORMAL_POWER_EXT_LNA_ENABLED"   enum_value="5" />
            <enum_entry enum_label="RSSI_THRESH_NORMAL_POWER_EXT_LNA_ENABLED"   enum_value="6" />
            <enum_entry enum_label="GAIN_THRESH_LOW_POWER_EXT_LNA_ENABLED"      enum_value="7" />
            <enum_entry enum_label="RSSI_THRESH_LOW_POWER_EXT_LNA_ENABLED"      enum_value="8" />
        </enum_def>
        <enum_def enum_name="unifiNarrowbandCCADebugTableIndex">
            <enum_entry enum_label="CS_MODE"                                  enum_value="1" />
            <enum_entry enum_label="PRI_THRESH_NORMAL_POWER_EXT_LNA_DISABLED" enum_value="2" />
            <enum_entry enum_label="SEC_THRESH_NORMAL_POWER_EXT_LNA_DISABLED" enum_value="3" />
            <enum_entry enum_label="PRI_THRESH_LOW_POWER_EXT_LNA_DISABLED"    enum_value="4" />
            <enum_entry enum_label="SEC_THRESH_LOW_POWER_EXT_LNA_DISABLED"    enum_value="5" />
            <enum_entry enum_label="PRI_THRESH_NORMAL_POWER_EXT_LNA_ENABLED"  enum_value="6" />
            <enum_entry enum_label="SEC_THRESH_NORMAL_POWER_EXT_LNA_ENABLED"  enum_value="7" />
            <enum_entry enum_label="PRI_THRESH_LOW_POWER_EXT_LNA_ENABLED"     enum_value="8" />
            <enum_entry enum_label="SEC_THRESH_LOW_POWER_EXT_LNA_ENABLED"     enum_value="9" />
        </enum_def>
        <enum_def enum_name="unifiEnabledTrims">
            <!--<enum_entry enum_label=""           enum_value="0x000000001" / -->
            <!--<enum_entry enum_label=""           enum_value="0x000000002" /-->
            <!--<enum_entry enum_label=""           enum_value="0x000000004" /-->
            <!--<enum_entry enum_label=""        enum_value="0x000000008" /-->
            <enum_entry enum_label="TRIM_RX_DC_QUICK"      enum_value="0x000000010" />
            <enum_entry enum_label="TRIM_RX_DC"            enum_value="0x000000020" />
            <enum_entry enum_label="TRIM_TX_DCO_PCAL"      enum_value="0x000000040" />
            <enum_entry enum_label="TRIM_TX_POWER"         enum_value="0x000000080" />
            <enum_entry enum_label="TRIM_TX_CARRIER_IMG"   enum_value="0x000000100" />
            <!--enum_entry enum_label=""         enum_value="0x000000200" /-->
            <!--enum_entry enum_label=""         enum_value="0x000000400" /-->
            <enum_entry enum_label="TRIM_TX_DPD"           enum_value="0x000000800" />
            <enum_entry enum_label="TRIM_RX_IQ_COMP"       enum_value="0x000001000" /> <!-- Leman + S620 D01 onwards -->
            <!--<enum_entry enum_label=""      enum_value="0x000002000" />-->
            <enum_entry enum_label="TRIM_RCCAL"            enum_value="0x000004000" /> <!-- S620 onwards -->
            <enum_entry enum_label="TRIM_LO_TDC"           enum_value="0x000008000" /> <!-- S620, S630 -->
            <enum_entry enum_label="TRIM_RX_IIP2"          enum_value="0x000010000" /> <!-- S630 -->
        </enum_def>
        <enum_def enum_name="unifiAccessClassIndex">
            <enum_entry enum_label="AC_BK" enum_value="1" />
            <enum_entry enum_label="AC_BE" enum_value="2" />
            <enum_entry enum_label="AC_VI" enum_value="3" />
            <enum_entry enum_label="AC_VO" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiHardwarePlatform">
            <enum_entry enum_label="PLATFORM_NOT_SET" enum_value ="0" />
            <enum_entry enum_label="T20" enum_value="2" />
            <enum_entry enum_label="LASSEN_SMDK" enum_value="17" />
            <enum_entry enum_label="LEMAN_S620_SMDK" enum_value="18" />
            <enum_entry enum_label="LASSEN_UNIV" enum_value="19" />
            <enum_entry enum_label="LEMAN_S612_SMDK" enum_value="21" />
            <enum_entry enum_label="LASSEN_A5_REV02_2017_07" enum_value="23" />
            <enum_entry enum_label="LASSEN_A7_REV01_2017_07" enum_value="24" />
            <enum_entry enum_label="LASSEN_J3NEO_2017_08" enum_value="25" />
            <enum_entry enum_label="LASSEN_J3TOP" enum_value="26" />
            <enum_entry enum_label="LASSEN_J7TOP" enum_value="27" />
            <enum_entry enum_label="LEMAN_S620_MAESTRO" enum_value="28" />
            <enum_entry enum_label="LEMAN_S620_UNIV" enum_value="31" />
            <enum_entry enum_label="LASSEN_A530D" enum_value="33" />
            <enum_entry enum_label="LEMAN_S620_WING_DUALFEM" enum_value="35" />
            <enum_entry enum_label="LASSEN_A6_SMA600_2018_04" enum_value="36" />
            <enum_entry enum_label="LEMAN_S620_MAESTRO_SISO" enum_value="39" />
            <enum_entry enum_label="LEMAN_S620_ROBUSTA2_DUALFEM" enum_value="40" />
            <enum_entry enum_label="LEMAN_S620_ROBUSTA2_NOFEM" enum_value="41" />
            <enum_entry enum_label="LEMAN_S620_A50" enum_value="43" />
            <enum_entry enum_label="LEMAN_S620_A50_DUALFEM" enum_value="44" />
            <enum_entry enum_label="LEMAN_S620_TROIKA_DUALFEM" enum_value="45" />
            <enum_entry enum_label="LEMAN_S620_A50_MIMO" enum_value="46" />
            <enum_entry enum_label="NACHO_S612_SMDK" enum_value="47" />
            <enum_entry enum_label="NEUS_S620_SMDK" enum_value="48" />
            <enum_entry enum_label="NEUS_S621_SMDK" enum_value="49" />
            <enum_entry enum_label="LEMAN_S620_MAESTRO_VOLCANO" enum_value="50" />
            <enum_entry enum_label="LEMAN_S620_A505Y" enum_value="51" />
            <enum_entry enum_label="LEMAN_S620_A505N_DUALFEM" enum_value="52" />
            <enum_entry enum_label="LEMAN_S620_FLEXI" enum_value="53" />
            <enum_entry enum_label="LEMAN_S620_M307F" enum_value="55" />
            <enum_entry enum_label="LEMAN_S620_V_TD1904_DUALFEM" enum_value="56" />
            <enum_entry enum_label="NEUS_S620_ERD" enum_value="57" />
            <enum_entry enum_label="NEUS_S620_V_TD1905_DUALFEM" enum_value="58" />
            <enum_entry enum_label="LEMAN_S620_A507FN_DUALFEM" enum_value="59" />
            <enum_entry enum_label="NEUS_S620_L_RACER_DUALFEM" enum_value="61" />
            <enum_entry enum_label="NEUS_S620_ERD_REV0" enum_value="62" />
            <enum_entry enum_label="LEMAN_S620_A515FM" enum_value="63" />
            <enum_entry enum_label="NACHO_S612_ERD" enum_value="64" />
            <enum_entry enum_label="NEUS_S620_A71" enum_value="65" />
            <enum_entry enum_label="NEUS_S620_ERD_VOLCANO" enum_value="66" />
            <enum_entry enum_label="NEUS_S620_V_TD1905_DUALFEMSKY" enum_value="67" />
            <enum_entry enum_label="NEUS_S620_A71_PRE" enum_value="68" />
            <enum_entry enum_label="NACHO_S612_A31_UNIV" enum_value="69" />
            <enum_entry enum_label="NACHO_S612_A31" enum_value="70" />
            <enum_entry enum_label="LASSEN_A305FN_GLOBAL" enum_value="71" />
            <enum_entry enum_label="NEUS_S620_ERD_VOLCANO_SISO" enum_value="72" />
            <enum_entry enum_label="NEUS_S620_V_PD1938_DUALFEM" enum_value="73" />
            <enum_entry enum_label="NEUS_S620_V_PD1949_DUALFEM" enum_value="74" />
            <enum_entry enum_label="LASSEN_TAB_A4_S_2019_09" enum_value="75" />
            <enum_entry enum_label="NEUS_S621_ERD_DUALFEM" enum_value="76" />
            <enum_entry enum_label="NEUS_S621_ERD_DUALSWITCH" enum_value="77" />
            <enum_entry enum_label="LEMAN_S620_G715FN_DUALFEM" enum_value="78" />
            <enum_entry enum_label="LEMAN_S620_A515U_DUALFEM" enum_value="79" />
            <enum_entry enum_label="LEMAN_S620_P615_MIMO" enum_value="80" />
            <enum_entry enum_label="NEUS_S620_A716U_DUALFEM" enum_value="81" />
            <enum_entry enum_label="LEMAN_S620_G715U_DUALFEM" enum_value="82" />
            <enum_entry enum_label="NEUS_S620_ERD_A71" enum_value="83" />
            <enum_entry enum_label="NACHO_S612_A21" enum_value="84" />
            <enum_entry enum_label="LEMAN_S620_M315F" enum_value="85" />
            <enum_entry enum_label="NEUS_S620_V_PD1962_DUALFEM" enum_value="86" />
            <enum_entry enum_label="NEUS_S620_V_PD1938_DUALFEM2" enum_value="87" />
            <enum_entry enum_label="NEUS_S620_A516N" enum_value="88" />
            <enum_entry enum_label="LEMAN_S620_M215F" enum_value="89" />
            <enum_entry enum_label="NEUS_S621_ERD_REV10_DUALSWITCH" enum_value="90" />
            <enum_entry enum_label="NEUS_S621_ERD_REV11_DUALFEM" enum_value="91" />
            <enum_entry enum_label="NEUS_S620_A7160B" enum_value="92" />
            <enum_entry enum_label="NEUS_S621_V_ETD_5GFEM" enum_value="93" />
            <enum_entry enum_label="LEMAN_S620_P610_MIMO" enum_value="94" />
            <enum_entry enum_label="NEUS_S620_V_PD2002_DUALFEM" enum_value="95" />
            <enum_entry enum_label="NACHO_S612_A21_REV01" enum_value="96" />
            <enum_entry enum_label="NEUS_S620_A516U_DUALFEM" enum_value="97" />
            <enum_entry enum_label="NEUS_S621_V_ETD2006_DUALFEM" enum_value="98" />
            <enum_entry enum_label="LEMAN_S620_M317F" enum_value="99" />
            <enum_entry enum_label="NACHO_S612_A217N" enum_value="100" />
            <enum_entry enum_label="NEUS_S620_V_PD2002_DUALFEM2" enum_value="101" />
            <enum_entry enum_label="NEUS_S620_ERD_SISO" enum_value="102" />
            <enum_entry enum_label="LASSEN_A102DU_JPN" enum_value="103" />
            <enum_entry enum_label="NEUS_S621_ERD_REV11_DUALFEM_DEV" enum_value="104" />
            <enum_entry enum_label="ORANGE_S620_SMDK" enum_value="105" />
            <enum_entry enum_label="ORANGE_S621_SMDK" enum_value="106" />
            <enum_entry enum_label="ORANGE_S621_ERD_DUALFEM" enum_value="107" />
            <enum_entry enum_label="ORANGE_S621_V_TD2006_DUALFEM" enum_value="108" />
            <enum_entry enum_label="NEUS_S620_V_PD2002_DUALFEM3" enum_value="109" />
            <enum_entry enum_label="ORANGE_S621_ERD_V_TD2006_DUALFEM" enum_value="110" />
            <enum_entry enum_label="LEMAN_S620_M415F" enum_value="111" />
            <enum_entry enum_label="NACHO_S612_M12S" enum_value="112" />
            <enum_entry enum_label="ORANGE_S621_V_PD2046_DUALFEM" enum_value="113" />
            <enum_entry enum_label="ORANGE_S621_ERD_V_TD2006_DUALFEM_SISO" enum_value="114" />
            <enum_entry enum_label="NACHO_S612_XCOVER5" enum_value="115" />
            <enum_entry enum_label="ORANGE_S621_V_PD2047_DUALFEM" enum_value="116" />
            <enum_entry enum_label="ORANGE_S621_V_TD2006_DUALFEM_SISO" enum_value="117" />
            <enum_entry enum_label="ORANGE_S621_V_PD2046_DUALFEM_CERT" enum_value="118" />
            <enum_entry enum_label="ORANGE_S621_ERD_V_TD2006_DUALFEM_CERT" enum_value="119" />
            <enum_entry enum_label="ORANGE_S621_ERD_R01_DUALFEM" enum_value="120" />
            <enum_entry enum_label="ORANGE_S621_G_ERD_R00_DUALFEM" enum_value="121" />
            <enum_entry enum_label="ORANGE_S621_ERD_R01_V_TD2006_DUALFEM" enum_value="122" />
            <enum_entry enum_label="ORANGE_S621_G_ERD_R01_DUALFEM" enum_value="123" />
            <enum_entry enum_label="ORANGE_S621_V_PD2046_DUALFEM2" enum_value="124" />
            <enum_entry enum_label="ORANGE_S621_V_PD2046_DUALFEM2_2G_SKY" enum_value="125" />
            <enum_entry enum_label="ORANGE_S621_V_PD2047_DUALFEM2_2G_SKY" enum_value="126" />
            <enum_entry enum_label="MORION2_S620_ERD_REV00" enum_value="127" />
            <enum_entry enum_label="ORANGE_S621_ERD_DUALFEM_SISO" enum_value="128" />
            <enum_entry enum_label="ORANGE_S621_ERD_DUALSWITCH" enum_value="129" />
            <enum_entry enum_label="ORANGE_S621_V_PD2134_DUALFEM" enum_value="130" />
            <enum_entry enum_label="ORANGE_S621_V_PD2132_DUALFEM" enum_value="131" />
            <enum_entry enum_label="ORANGE_S621P_ERD_DUALSWITCH" enum_value="132" />
            <enum_entry enum_label="PAPAYA_S620_SMDK" enum_value="133" />
            <enum_entry enum_label="PAPAYA_S621_SMDK" enum_value="134" />
            <enum_entry enum_label="PAPAYA_S620_ERD" enum_value="135" />
            <enum_entry enum_label="PRINGLE_S621_EMU" enum_value="136" />
            <enum_entry enum_label="PAEAN_S630_SMDK" enum_value="137" />
            <enum_entry enum_label="PAEAN_S621_M2" enum_value="138" />
            <enum_entry enum_label="ORANGE_S621_V_PD2132_DUALFEM_QM45878" enum_value="139" />
            <enum_entry enum_label="ORANGE_S621_V_PD2134_DUALFEM_SKY85321" enum_value="140" />
            <enum_entry enum_label="PAPAYA_S620_A53_5G_DUALFEM" enum_value="141" />
            <enum_entry enum_label="PAEAN_S630_M2_DUALSWITCH_B" enum_value="142" />
            <enum_entry enum_label="PAPAYA_S620_ERD_REV01" enum_value="143" />
            <enum_entry enum_label="PAPAYA_S620_ERD_MIMO" enum_value="144" />
            <enum_entry enum_label="PAPAYA_S620_ERD_REV01_MIMO" enum_value="145" />
            <enum_entry enum_label="PAEAN_S630_M2_DUALFEM_A" enum_value="146" />
            <enum_entry enum_label="PAEAN_S630_ERD_DUALFEM" enum_value="147" />
            <enum_entry enum_label="PAPAYA_S621P_SMDK" enum_value="148" />
            <enum_entry enum_label="PAPAYA_S620_A53_5G_2G4FEM" enum_value="149" />
            <enum_entry enum_label="PAPAYA_S620_A33_5G_2G4FEM" enum_value="150" />
            <enum_entry enum_label="PAPAYA_S620_M33_5G" enum_value="151" />
            <enum_entry enum_label="PAPAYA_S620_TAB_S8_LITE_MIMO_DUALFEM" enum_value="152" />
            <enum_entry enum_label="PAPAYA_S620_M33_5G_REV01" enum_value="153" />
            <enum_entry enum_label="PAPAYA_S621P_ERD_DUALSWITCH" enum_value="154" />
            <enum_entry enum_label="PAPAYA_S620_A53_5G_JPN_2G4FEM" enum_value="157" />
            <enum_entry enum_label="PAPAYA_S620_AVL" enum_value="158" />
        </enum_def>
        <enum_def enum_name="unifiDebugModulesIndex">
        <!-- MODULE_IDS_RESERVED is used to tell apart compressed debug words. -->
            <enum_entry enum_label="MODULE_IDS_COMPRESSED_DEBUG" enum_value="0" />
            <enum_entry enum_label="MODULE_IDS_MLME_SCAN" enum_value="1" />
            <enum_entry enum_label="MODULE_IDS_FAULTS" enum_value="2" />
            <enum_entry enum_label="MODULE_IDS_MLME_CME" enum_value="3" />
            <enum_entry enum_label="MODULE_IDS_MLME_CONMGR" enum_value="4" />
            <enum_entry enum_label="MODULE_IDS_MLME_MIB" enum_value="5" />
            <enum_entry enum_label="MODULE_IDS_MLME_MPDU_ROUTER" enum_value="6" />
            <enum_entry enum_label="MODULE_IDS_MLME_REQUESTS" enum_value="7" />
            <enum_entry enum_label="MODULE_IDS_MLME_VIFCTRL" enum_value="8" />
            <enum_entry enum_label="MODULE_IDS_MLME_CONNECT" enum_value="9" />
            <enum_entry enum_label="MODULE_IDS_MLME_DEVICE" enum_value="10" />
            <enum_entry enum_label="MODULE_IDS_RICE" enum_value="11" />
            <enum_entry enum_label="MODULE_IDS_RICE_SAP" enum_value="12" />
            <enum_entry enum_label="MODULE_IDS_WLANLITE" enum_value="13" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_SCHDL" enum_value="14" />
            <enum_entry enum_label="MODULE_IDS_PMALLOC" enum_value="15" />
            <enum_entry enum_label="MODULE_IDS_CME_MGMT" enum_value="16" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_API_DPLANE" enum_value="17" />
            <enum_entry enum_label="MODULE_IDS_MLME_BA" enum_value="18" />
            <enum_entry enum_label="MODULE_IDS_MLME_DEPRECATED" enum_value="19" />
            <enum_entry enum_label="MODULE_IDS_MLME_AP" enum_value="20" />
            <enum_entry enum_label="MODULE_IDS_MLME_REGULATORY" enum_value="21" />
            <enum_entry enum_label="MODULE_IDS_MLME_NAN" enum_value="22" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO" enum_value="23" />
            <enum_entry enum_label="MODULE_IDS_MLME_ROAMING" enum_value="24" />
            <enum_entry enum_label="MODULE_IDS_DATAPLANE" enum_value="25" />
            <enum_entry enum_label="MODULE_IDS_VACANT1" enum_value="26" />
            <enum_entry enum_label="MODULE_IDS_VACANT2" enum_value="27" />
            <enum_entry enum_label="MODULE_IDS_CRYPTO" enum_value="28" />
            <!-- COEX Note: DEBUG_COEX level should NOT exceed level 3 COEX task deinit has debugs defined at lvl4 which is aimed for Software testing (SWAT) only  -->
            <enum_entry enum_label="MODULE_IDS_COEX" enum_value="29" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_PS" enum_value="30" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_BLACKOUT" enum_value="31" />
            <enum_entry enum_label="MODULE_IDS_MLME_SA_QUERY" enum_value="32" />
            <enum_entry enum_label="MODULE_IDS_MLME_OFFCHANNEL" enum_value="33" />
            <enum_entry enum_label="MODULE_IDS_MLME_MEASUREMENTS" enum_value="34" />
            <enum_entry enum_label="MODULE_IDS_MLME_TDLS" enum_value="35" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_BEACON" enum_value="36" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_VIF" enum_value="37" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_OXYGEN" enum_value="38" /> <!-- DEPRECATED -->
            <enum_entry enum_label="MODULE_IDS_MACRAME_CALIBRATION" enum_value="39" />
            <enum_entry enum_label="MODULE_IDS_MACRAME" enum_value="40" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_TX" enum_value="41" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_API_COEX" enum_value="42" />
            <enum_entry enum_label="MODULE_IDS_MLME" enum_value="43" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_RADIO" enum_value="44" />
            <enum_entry enum_label="MODULE_IDS_MIB" enum_value="45" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_FILTER" enum_value="46" />
            <enum_entry enum_label="MODULE_IDS_HALMAC" enum_value="47" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO_CORE" enum_value="48" />
            <enum_entry enum_label="MODULE_IDS_RSSI" enum_value="49" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_API_MLME" enum_value="50" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_IDLE_AP" enum_value="51" />
            <enum_entry enum_label="MODULE_IDS_MLME_API_MACRAME" enum_value="52" />
            <enum_entry enum_label="MODULE_IDS_MLME_SECURITY" enum_value="53" />
            <enum_entry enum_label="MODULE_IDS_MLME_TXPOWER" enum_value="54" />
            <enum_entry enum_label="MODULE_IDS_PACKET_FILTER" enum_value="55" />
            <enum_entry enum_label="MODULE_IDS_MLME_WIFI_LOGGER" enum_value="56" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_STATION" enum_value="57" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO_TX_DPD" enum_value="58" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO_TX_POW" enum_value="59" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO_TX_IQ" enum_value="60" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO_RX" enum_value="61" />
            <enum_entry enum_label="MODULE_IDS_BIST" enum_value="62" />
            <enum_entry enum_label="MODULE_IDS_MLME_FRAME" enum_value="63" />
            <enum_entry enum_label="MODULE_IDS_MLME_IE" enum_value="64" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO_COEX_FEM" enum_value="65" />
            <enum_entry enum_label="MODULE_IDS_MLME_FTM" enum_value="66" />
            <enum_entry enum_label="MODULE_IDS_SMAPPER" enum_value="67" />
            <enum_entry enum_label="MODULE_IDS_MLME_API_DPLANE" enum_value="68" />
            <enum_entry enum_label="MODULE_IDS_MLME_FTM_RESP" enum_value="69" />
            <enum_entry enum_label="MODULE_IDS_MLME_SCAN_CHANNEL" enum_value="70" />
            <enum_entry enum_label="MODULE_IDS_LMIF" enum_value="71" />
            <enum_entry enum_label="MODULE_IDS_MLME_BASF" enum_value="72" />
            <enum_entry enum_label="MODULE_IDS_APF" enum_value="73" />
            <enum_entry enum_label="MODULE_IDS_MLME_NDM" enum_value="74" />
            <enum_entry enum_label="MODULE_IDS_MLME_NAM" enum_value="75" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_IDLE_STA" enum_value="76" />
            <enum_entry enum_label="MODULE_IDS_DEBUG" enum_value="77" />
            <enum_entry enum_label="MODULE_IDS_MLME_TWT" enum_value="78" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_TWT" enum_value="79" />
            <enum_entry enum_label="MODULE_IDS_MLME_HELPERS" enum_value="80" />
            <enum_entry enum_label="MODULE_IDS_WPALC" enum_value="81" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_RAMLOG_DEBUG" enum_value="82" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_MIFLESS_STA" enum_value="83" />
            <enum_entry enum_label="MODULE_IDS_COEX_FLEXIMAC" enum_value="84" />
            <enum_entry enum_label="MODULE_IDS_SFSM" enum_value="85" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_MIFLESS_AP" enum_value="86" />
            <enum_entry enum_label="MODULE_LAST_ID" enum_value="87" />
        </enum_def>
        <enum_def enum_name="unifiSubSystemsIndex">
            <enum_entry enum_label="SUBSYSTEM_IDS_COEX" enum_value="1" />
            <enum_entry enum_label="SUBSYSTEM_IDS_COMMON" enum_value="2" />
            <enum_entry enum_label="SUBSYSTEM_IDS_DPLANE" enum_value="3" />
            <enum_entry enum_label="SUBSYSTEM_IDS_MACRAME" enum_value="4" />
            <enum_entry enum_label="SUBSYSTEM_IDS_MLME" enum_value="5" />
            <enum_entry enum_label="SUBSYSTEM_IDS_RADIO" enum_value="6" />
            <enum_entry enum_label="SUBSYSTEM_IDS_COEX_FLEXIMAC" enum_value="7" />
             <enum_entry enum_label="SUBSYSTEM_LAST_ID" enum_value="8" />
        </enum_def>
        <enum_def enum_name="unifiBandTableIndex">
            <enum_entry enum_label="BAND_2G" enum_value="1" />
            <enum_entry enum_label="BAND_5G" enum_value="2" />
            <enum_entry enum_label="BAND_MAX" enum_value="2" />
      </enum_def>
        <enum_def enum_name="unifiBandCombinationTableIndex">
            <enum_entry enum_label="BAND_2G_ONLY"   enum_value="1" />
            <enum_entry enum_label="BAND_5G_ONLY"   enum_value="2" />
            <enum_entry enum_label="BAND_2G_AND_5G" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiBWTableIndex">
            <enum_entry enum_label="BW20_5g" enum_value="1" />
            <enum_entry enum_label="BW40_5g" enum_value="2" />
            <enum_entry enum_label="BW80_5g" enum_value="3" />
            <enum_entry enum_label="BW20_2g" enum_value="4" />
            <enum_entry enum_label="BW40_2g" enum_value="5" />
            <enum_entry enum_label="BW20_5g_chan_est" enum_value="6" />
            <enum_entry enum_label="BW40_5g_chan_est" enum_value="7" />
            <enum_entry enum_label="BW80_5g_chan_est" enum_value="8" />
            <enum_entry enum_label="BW20_2g_chan_est" enum_value="9" />
            <enum_entry enum_label="BW40_2g_chan_est" enum_value="10" />
        </enum_def>
        <enum_def enum_name="unifiSisoMimoTableIndex">
            <enum_entry enum_label="SINGLE_RADIO" enum_value="1" />
            <enum_entry enum_label="MIMO"         enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiDpdDebugTableIndex">
            <enum_entry enum_label="LUT_QUALITY_THRESHOLD" enum_value="1" />
            <enum_entry enum_label="LUT_RETRIM_LIMIT"     enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiMacBusyTimeTableIndex">
            <enum_entry enum_label="PRI20" enum_value="1" />
            <enum_entry enum_label="SEC20" enum_value="2" />
            <enum_entry enum_label="SEC40" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiRoamRssiFactorTableIndex">
            <enum_entry enum_label="RSSI_NEG_55" enum_value="1" />
            <enum_entry enum_label="RSSI_NEG_60" enum_value="2" />
            <enum_entry enum_label="RSSI_NEG_70" enum_value="3" />
            <enum_entry enum_label="RSSI_NEG_80" enum_value="4" />
            <enum_entry enum_label="RSSI_NEG_90" enum_value="5" />
            <enum_entry enum_label="RSSI_NEG_127" enum_value="6" />
        </enum_def>
        <enum_def enum_name="unifiRoamCUFactorTableIndex">
            <enum_entry enum_label="CU_LOW" enum_value="1" />
            <enum_entry enum_label="CU_MID" enum_value="2" />
            <enum_entry enum_label="CU_HIGH" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiWifiLogger">
            <enum_entry enum_label="Disabled" enum_value="0" />
            <enum_entry enum_label="Partial" enum_value="1" />
            <enum_entry enum_label="Full" enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiAntennaMode">
            <enum_entry enum_label="SISO" enum_value="0" />
            <enum_entry enum_label="MIMO_2x2" enum_value="1" />
            <enum_entry enum_label="MIMO_3x3" enum_value="2" />
            <enum_entry enum_label="MIMO_4x4" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiRoamingAKM">
            <enum_entry enum_label="AKM_None" enum_value="0" />
            <enum_entry enum_label="AKM_OKC" enum_value="1" />
            <enum_entry enum_label="AKM_FT_1X" enum_value="2" />
            <enum_entry enum_label="AKM_PSK" enum_value="3" />
            <enum_entry enum_label="AKM_FT_PSK" enum_value="4" />
            <enum_entry enum_label="AKM_PMKSA_Caching" enum_value="5" />
            <enum_entry enum_label="AKM_SAE" enum_value="6" />
            <enum_entry enum_label="AKM_FT_SAE" enum_value="7" />
        </enum_def>
        <enum_def enum_name="unifiOperatingClassTableIndex">
            <enum_entry enum_label="Operating_Class_Global" enum_value="1" />
            <enum_entry enum_label="Operating_Class_Europe" enum_value="2" />
            <enum_entry enum_label="Operating_Class_US" enum_value="3" />
            <enum_entry enum_label="Operating_Class_Japan" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiTestTxPowerBitfield">
            <enum_entry enum_label="TXPOWER_REGULATORY"        enum_value="0x0001" />
            <enum_entry enum_label="TXPOWER_USER"              enum_value="0x0002" />
            <enum_entry enum_label="TXPOWER_NETWORK"           enum_value="0x0004" />
            <enum_entry enum_label="TXPOWER_SAR"               enum_value="0x0008" />
            <enum_entry enum_label="TXPOWER_NOCELL"            enum_value="0x0010" />
            <enum_entry enum_label="TXPOWER_GRIP"              enum_value="0x0020" />
            <enum_entry enum_label="TXPOWER_TPC"               enum_value="0x0040" />
            <enum_entry enum_label="TXPOWER_LTE_COEX"          enum_value="0x0080" />
            <enum_entry enum_label="TXPOWER_RICE_MIN_POWER"    enum_value="0x0100" />
            <enum_entry enum_label="TXPOWER_RICE_MAX_POWER"    enum_value="0x0200" />
        </enum_def>
        <enum_def enum_name="unifiLteSignalsBitField">
            <enum_entry enum_label="MWS_STATUS"             enum_value="0x00001" />
            <enum_entry enum_label="MWS_FRAME_SYNC"         enum_value="0x00002" />
            <enum_entry enum_label="MWS_TX"                 enum_value="0x00004" />
            <enum_entry enum_label="MWS_DRX"                enum_value="0x00008" />
            <enum_entry enum_label="MWS_TX_LEVEL"           enum_value="0x00010" />
            <enum_entry enum_label="MWS_RX_LEVEL"           enum_value="0x00020" />
            <enum_entry enum_label="MWS_MEASUREMENT_GAP"    enum_value="0x00040" />
        </enum_def>
        <enum_def enum_name="unifiFrameTXCountersTableIndexEnum">
            <!-- Index = 1  Tx Good Count - shall be incremented for each data and management packet successfully transmitted. -->
            <!-- Index = 2  Tx Bad Count - shall be incremented for each data and management  packet that fails due to either
            Tx_lifetime, max_retry or unspecified failure -->
            <!-- Index = 3  Tx Retry Count - shall be incremented for each data and management packet that is transmitted
            successfully but retried at least once -->
            <!-- Index = 4  Tx Retry times count - shall be accumulated with number of times packet is retransmitted on air,
                 count (nRetries) added - whenever Tx Retry Count is incremented -->
            <enum_entry enum_label="tx_good" enum_value="1" />
            <enum_entry enum_label="tx_bad" enum_value="2" />
            <enum_entry enum_label="tx_retry" enum_value="3" />
            <enum_entry enum_label="tx_retry_times" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiFrameRXCountersTableIndexEnum">
            <!-- Index = 1  Rx Good Count - shall be incremented for each data and management packet successfully received -->
            <enum_entry enum_label="rx_good" enum_value="1" />
        </enum_def>
        <enum_def enum_name="unifiModuleMemoryManagerFieldIndexEnum">
            <enum_entry enum_label="priority" enum_value="1" />
            <enum_entry enum_label="size"     enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiScanFlags">
            <enum_entry enum_label="SCAN_FLAG_ENABLE_EARLY_CHANNEL_EXIT" 	 enum_value="0x0001" />
            <enum_entry enum_label="SCAN_FLAG_DISABLE_SCAN"              	 enum_value="0x0002" />
            <enum_entry enum_label="SCAN_FLAG_ENABLE_NCHO"               	 enum_value="0x0004" />
            <enum_entry enum_label="SCAN_FLAG_ENABLE_MAC_RANDOMIZATION"  	 enum_value="0x0008" />
            <enum_entry enum_label="SCAN_FLAG_DISABLE_PERIODIC_REPORT_CACHE" enum_value="0x0010" />
        </enum_def>
        <enum_def enum_name="unifiScanGroups">
            <enum_entry enum_label="SCAN_GROUP_ROMING"                   enum_value="0x0001" />
            <enum_entry enum_label="SCAN_GRPUP_ROAMING_ON_KNOWN_CHANNEL" enum_value="0x0002" />
            <enum_entry enum_label="SCAN_GROUP_P2P"                      enum_value="0x0004" />
            <enum_entry enum_label="SCAN_GROUP_WIFISHARING_ALLOWED"      enum_value="0x0008" />
            <enum_entry enum_label="SCAN_GROUP_NAN"                      enum_value="0x0010" />
        </enum_def>
        <enum_def enum_name="uunifiNANDefaultScheduleTableIndex">
            <enum_entry enum_label="NAN_SCHEDULE_FAW"          enum_value="1" />
            <enum_entry enum_label="NAN_SCHEDULE_NDC"          enum_value="2" />
            <enum_entry enum_label="NAN_SCHEDULE_DW"           enum_value="3" />
            <enum_entry enum_label="NAN_SCHEDULE_RANGING_FAW"  enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiBOForceTxOnlyType">
            <enum_entry enum_label="BO_FORCE_TX_ONLY_NONE"        enum_value="0" />
            <enum_entry enum_label="BO_FORCE_TX_ONLY_SINGLE_SHOT" enum_value="1" />
            <enum_entry enum_label="BO_FORCE_TX_ONLY_PERIODIC"    enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiRSSIAvgType">
            <enum_entry enum_label="RSSI_AVG_TYPE_ALL_FRAMES"     enum_value="0" />
            <enum_entry enum_label="RSSI_AVG_TYPE_MAX_VALUE"      enum_value="1" />
            <enum_entry enum_label="RSSI_AVG_TYPE_BEACONS_ONLY"   enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiAntennaSelection">
            <enum_entry enum_label="ANTENNA0_2G4"                 enum_value="0" />
            <enum_entry enum_label="ANTENNA1_2G4"                 enum_value="1" />
            <enum_entry enum_label="ANTENNA_PREFER_STRONGER"      enum_value="2" />
            <enum_entry enum_label="ANTENNA_MAX_OPT_COUNT"        enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiDesenseSelection">
            <enum_entry enum_label="DESENSE_ENABLE_CCK"                 enum_value="0x0001" />
            <enum_entry enum_label="DESENSE_ENABLE_2G4_OFDM"            enum_value="0x0002" />
            <enum_entry enum_label="DESENSE_ENABLE_5G_OFDM"             enum_value="0x0004" />
            <enum_entry enum_label="JD_SETTINGS_ADJUST_FOR_C1"          enum_value="0x0008" />
            <enum_entry enum_label="DESENSE_SUPPRESS_DURING_CONNECT"    enum_value="0x0010" />
            <enum_entry enum_label="DESENSE_ENABLE_6G_OFDM"             enum_value="0x0020" />
        </enum_def>
        <enum_def enum_name="unifiLnaControlRssiThresholdTableIndexEnum">
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_DEFAULT"         enum_value="1" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11N_20MHZ"       enum_value="2" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11N_40MHZ"       enum_value="3" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11AC_20MHZ"      enum_value="4" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11AC_40MHZ"      enum_value="5" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11AC_80MHZ"      enum_value="6" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11AC_160MHZ"     enum_value="7" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11AX_20MHZ"      enum_value="8" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11AX_40MHZ"      enum_value="9" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11AX_80MHZ"      enum_value="10" />
            <enum_entry enum_label="LNA_CTRL_RSSI_THRESH_11AX_160MHZ"     enum_value="11" />
        </enum_def>
        <enum_def enum_name="unifiLeakyAPConfigurationType">
            <enum_entry enum_label="LEAKY_CONFIG_DISABLE_NULL_WITH_CTS2SELF"             enum_value="0x0001" />
            <enum_entry enum_label="LEAKY_CONFIG_ALWAYS_HAVE_BAD_PEER"                   enum_value="0x0002" />
            <enum_entry enum_label="LEAKY_CONFIG_ENABLE_RETRAINING"                      enum_value="0x0004" />
            <enum_entry enum_label="LEAKY_CONFIG_ENABLE_GOOD_THRESHOLD_ADJ"              enum_value="0x0008" />
        </enum_def>
        <config_element name="unifiRssiThresholdForBBBSync" psid="2172">
            <description_user>Below this (dBm) threshold, a different set of bbb_sync_ratio and bbb_num_syms values are used for modem desense
            by default it is disabled by keeping a very high value of 128dbm</description_user>
            <type>int16</type>
            <default>128</default>
        </config_element>
        <config_element name="unifiConnectionTypeTableIndex" psid="0">
            <description_user>Index by modulation, 11b, 11g, 11n, 11ac</description_user>
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="unifiDefaultCountryIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>1</range_max>
            <description_user>table index - To Be Removed when unifiDefaultCountry is split into two MIBs. </description_user>
        </config_element>
        <config_element name="unifiQueueStatsIndex" psid="0">
            <type>integer</type>
            <range_min>0</range_min><range_max>15</range_max>
            <description_user>Index for unifiQueueStatsIdTable</description_user>
        </config_element>
        <config_element name="unifiBeamformingPhaseSTS" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiPrivateOnlyPatchIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRateStatsIndex" psid="0">
            <type>unifiRateStatsIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiThroughputDebugIndex" psid="0">
            <type>unifiThroughputDebugIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiPeerIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>10</range_max>
            <description_user>Index for unifiPeerIdTable</description_user>
        </config_element>
        <config_element name="unifiReadHardwareCounterIndex" psid="0">
            <type>unifiReadHardwareCounterIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioTXSettingsIndex" psid="0">
            <type>unifiRadioTXSettingsIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioTXSettingsIndexV2" psid="0">
            <type>unifiRadioTXSettingsIndexV2</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioRXSettingsIndex" psid="0">
            <type>unifiRadioRXSettingsIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioCCADebugTableIndex" psid="0">
            <type>unifiRadioCCADebugTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiNarrowbandCCADebugTableIndex" psid="0">
            <type>unifiNarrowbandCCADebugTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiReadRegIndex" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiMacInstanceIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>8</range_max>
            <description_user>mac instance index.  Note that there is an offset of 1 so that mac_instance == 0 matches unifiMacInstanceIndex == 1</description_user>
        </config_element>
        <config_element name="unifiRadioInstanceIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>8</range_max>
            <description_user>Radio instance index.  Note that there is an offset of 1 so that radio_instance == 0 matches unifiRadioInstanceIndex == 1</description_user>
        </config_element>
        <config_element name="unifiLoadDpdLutRadioIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>2</range_max>
            <description_user>radio id</description_user>
        </config_element>
        <config_element name="unifiLoadDpdLutGroupIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
            <description_user>group index</description_user>
        </config_element>
        <config_element name="unifiLoadDpdLutTemperatureIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
            <description_user>temperature index</description_user>
        </config_element>
        <config_element name="unifiRadioCCAThresholdsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioTxIqDelayTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiAgcThresholdsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxSettingsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxGainSettingsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioTXPowerOverrideTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>2</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxPowerDetectorResponseTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxDetectorTemperatureCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxDetectorFrequencyCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxOpenLoopTemperatureCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxOpenLoopFrequencyCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxPaGainDpdTemperatureCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxPaGainDpdFrequencyCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxFtrimSettingsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxDigGainTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiStaticDpdGainTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxGainStepSettingsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiDpdPredistortGainsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxPowerTrimConfigTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxAntennaConnectionLossTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>32</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxAntennaMaxGainTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>32</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRxExternalGainTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>32</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRxRssiNbHwGainTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRxRssiNbFmOffsetTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRxRssiBandCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiDebugControlTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>32</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxOOBConstraintTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>Index for unifiTxOOBConstraintTable</description_user>
        </config_element>
        <config_element name="unifiRadioFecConfigTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>Index for unifiRadioFecConfigTable</description_user>
        </config_element>
        <config_element name="unifiRadioMiscPerBandTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>Index for unifiRadioMiscPerBandTable</description_user>
        </config_element>
        <config_element name="unifiTxPowerAdjustTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioTxSettingsRowIndex" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
            <range_min>1</range_min><range_max>255</range_max>
        </config_element>
        <config_element name="unifiRegulatoryTableIndex" psid="0">
            <description_user>Index for unifiRegulatoryTable</description_user>
            <type>integer</type>
            <range_min>1</range_min><range_max>500</range_max>
        </config_element>
        <config_element name="unifiPeerid" psid="0">
            <description_user>table index</description_user>
            <type>integer</type>
            <range_min>1</range_min><range_max>500</range_max>
        </config_element>
        <config_element name="unifiOperatingClassIndex" psid="0">
            <description_user>table index</description_user>
            <type>integer</type>
            <range_min>1</range_min><range_max>500</range_max>
        </config_element>
        <config_element name="unifiScanParametersIndex" psid="0">
            <description_user>table index</description_user>
            <type>integer</type>
            <range_min>1</range_min><range_max>500</range_max>
        </config_element>
        <config_element name="unifiAccessClassIndex" psid="0">
            <type>unifiAccessClassIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiSisoMimoTableIndex" psid="0">
            <type>unifiSisoMimoTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiDpdDebugTableIndex" psid="0">
            <type>unifiDpdDebugTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioIndex" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiBandTableIndex" psid="0">
            <type>unifiBandTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiBandCombinationTableIndex" psid="0">
            <type>unifiBandCombinationTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiBWTableIndex" psid="0">
            <type>unifiBWTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiMacBusyTimeTableIndex" psid="0">
            <type>unifiMacBusyTimeTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiDebugModulesIndex" psid="0">
            <type>unifiDebugModulesIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRoamRssiFactorTableIndex" psid="0">
            <type>unifiRoamRssiFactorTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRoamCUFactorTableIndex" psid="0">
            <type>unifiRoamCUFactorTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiSarModeTableIndex" psid="0">
            <description_user>table index</description_user>
            <type>int16</type>
            <range_min>1</range_min><range_max>36</range_max>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFrameTXCountersTableIndex" psid="0">
            <description_user>table index</description_user>
            <type>unifiFrameTXCountersTableIndexEnum</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFrameRXCountersTableIndex" psid="0">
            <description_user>table index</description_user>
            <type>unifiFrameRXCountersTableIndexEnum</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLnaControlRssiThresholdTableIndex" psid="0">
            <description_user>table index</description_user>
            <type>int16</type>
            <range_min>1</range_min><range_max>18</range_max>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11MinPowerCapabilityOverride" psid="113">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Override for the advertised power in an Association Request.</description_user>
            <type>int16</type>
            <range_min>-127</range_min><range_max>127</range_max>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="dot11MaxNetworkPowerCapabilityOverride" psid="114">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Override for the regulatory domain max power used in calculating network power cap.</description_user>
            <type>int16</type>
            <range_min>-127</range_min><range_max>127</range_max>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="dot11ACKFailureCount" psid="148">
            <description_user>This counter shall increment when an ACK is not received when expected.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11FCSErrorCount" psid="151">
            <description_user>This counter shall increment when an FCS error is detected in a received MPDU.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_max>4294967295</range_max>
            <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11FragmentationThreshold" psid="124">
            <description_user>Current maximum size, in octets, of the MPDU that may be delivered to the security encapsulation. This maximum size does not apply when an MSDU is transmitted using an HT-immediate or HTdelayed Block Ack agreement, or when an MSDU or MMPDU is carried in an AMPDU that does not contain a VHT single MPDU. Fields added to the frame by security encapsulation are not counted against the limit specified. Except as described above, an MSDU or MMPDU is fragmented when the resulting frame has an individual address in the Address1 field, and the length of the frame is larger than this threshold, excluding security encapsulation fields. The default value is the lesser of 11500 or the aMPDUMaxLength or the aPSDUMaxLength of the attached PHY and the value never exceeds the lesser of 11500 or the aMPDUMaxLength or the aPSDUMaxLength of the attached PHY.</description_user>
            <type>uint16</type>
            <range_min>256</range_min><range_max>11500</range_max><default>3000</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>dplane</module>
        </config_element>
        <config_element name="dot11LongRetryLimit" psid="123">
            <description_user>Maximum number of transmission attempts of a frame, the length of which is greater than dot11RTSThreshold, that shall be made before a failure condition is indicated.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>255</range_max><default>4</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>dplane</module>
        </config_element>
        <config_element name="dot11MulticastReceivedFrameCount" psid="150">
            <description_user>This counter shall increment when a MSDU is received with the multicast bit set in the destination MAC address.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RTSSuccessCount" psid="146">
            <description_user>This counter shall increment when a CTS is received in response to an RTS.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RTSThreshold" psid="121">
            <description_user>Size of an MPDU, below which an RTS/CTS handshake shall not be performed, except as RTS/CTS is used as a cross modulation protection mechanism as defined in 9.10. An RTS/CTS handshake shall be performed at the beginning of any frame exchange sequence where the MPDU is of type Data or Management, the MPDU has an individual address in the Address1 field, and the length of the MPDU is greater than this threshold. (For additional details, refer to Table 21 in 9.7.) Setting larger than the maximum MSDU size shall have the effect of turning off the RTS/CTS handshake for frames of Data or Management type transmitted by this STA. Setting to zero shall have the effect of turning on the RTS/CTS handshake for all frames of Data or Management type transmitted by this STA.</description_user>
            <type>uint32</type>
            <units>octet</units>
            <range_min>0</range_min><range_max>65536</range_max><default>65536</default>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>dplane</module>
        </config_element>
        <config_element name="dot11TXOPDurationRTSThreshold" psid="125">
            <description_user>In an HE BSS, the use of RTS/CTS can be TXOP duration-based.Any Data PPDU transmitted from the STA whose TXOP duration is greater or equal to the duration calculated above should pre-pend with RTS. Value is in units of 32us</description_user>
            <type>uint16</type>
            <units>octet</units>
            <range_min>0</range_min><range_max>1023</range_max><default>1023</default>
        </config_element>
        <config_element name="dot11ShortRetryLimit" psid="122">
            <description_user>Maximum number of transmission attempts of a frame, the length of which is less than or equal to dot11RTSThreshold, that shall be made before a failure condition is indicated.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>255</range_max><default>32</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>dplane</module>
        </config_element>
        <config_element name="dot11manufacturerProductVersion" psid="183">
            <description_user>Printable string used to identify the manufacturer&apos;s product version of the resource.</description_user>
            <description_internal>This string is generated automatically by the build process. It contains the time and date that the build was made, the release configuration used (which itself incorporates the target chip family and variant, whether it is a flash or RAM build, and the host interface), the unique build number, and details of the user account and machine used to produce the build.</description_internal>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>300</range_max>
            <function type="get" function_name="mibgetfirmwareproductversion"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiAPSDServicePeriodTimeout" psid="2515">
            <description_user>During Unscheduled Automated Power Save Delivery (U-APSD), UniFi may trigger a service period in order to fetch data from the access point. The service period is normally terminated by a frame from the access point with the EOSP (End Of Service Period) flag set, at which point UniFi returns to sleep. However, if the access point is temporarily inaccessible, UniFi would stay awake indefinitely. Specifies a timeout starting from the point where the trigger frame has been sent. If the timeout expires and no data has been received from the access point, UniFi will behave as if the service period had been ended normally and return to sleep. This timeout takes precedence over unifiPowerSaveExtraListenTime if both would otherwise be applicable.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>20000</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiLegacyPsPollTimeout" psid="2520">
            <description_user>Time we try to stay awake after sending a PS-POLL to receive data.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>15000</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiBasicCapabilities" psid="2030">
            <description_user>The 16-bit field follows the coding of IEEE 802.11 Capability Information.</description_user>
            <type>uint16</type>
            <default>0x1730</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="dot11AssociationSAQueryMaximumTimeout" psid="100">
            <description_user>Timeout (in TUs) before giving up on a Peer that has not responded to a SA Query frame.</description_user>
            <type>uint32</type>
            <range_min>0</range_min><range_max>4294967295</range_max><default>1000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRfTestModeActivated" psid="5054">
            <description_user>Test only: Set to true when running in RF Test mode. Setting this MIB key to true prevents setting mandatory HT MCS Rates.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="dot11AssociationSAQueryRetryTimeout" psid="101">
            <description_user>Timeout (in TUs) before trying a Query Request frame.</description_user>
            <type>uint32</type>
            <range_max>4294967295</range_max><default>201</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- Tx Power Control -->
        <config_element name="unifiTestTxPowerEnable" psid="6032">
            <description_user>Test only: Bitfield to enable Control Plane Tx Power processing. </description_user>
            <type>uint16</type>
            <default>0x03DD</default>
            <function_list>
                <function type="set" function_name="mlmetesttxpowerenable"></function>
            </function_list>
            <nature>hardware</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiUserSetTxpowerLevel" psid="6021">
            <description_user>Test only: Maximum User Set Tx Power (quarter dBm). Enable it in unifiTestTxPowerEnable.</description_user>
            <type>int16</type>
            <default>127</default>
            <function_list>
                <function type="set" function_name="mlmeusersettxpowerlevel"></function>
            </function_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiNoCellMaxPower" psid="8017">
            <description_user>Max power values for included channels (quarter dBm).</description_user>
            <type>int16</type>
            <table_name>unifiNoCellTable</table_name>
            <default_list>
                <default index1="1"> 28 </default> <!-- 802.11b  -->
                <default index1="2"> 28 </default> <!-- 802.11g  -->
                <default index1="3"> 20 </default> <!-- 802.11n  -->
                <default index1="4"> 20 </default> <!-- 802.11ac -->
                <default index1="5"> 20 </default> <!-- 802.11ax -->
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiNoCellIncludedChannels" psid="8018">
            <description_user>Channels applicable. Defined in a uint64 represented by the octet string.
            First byte of the octet string maps to LSB. Bit 0 maps to channel 1. Mapping defined in ChannelisationRules.</description_user>
            <type>octet_string</type>
            <range_min>8</range_min><range_max>8</range_max><default>{ 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiSarBackoff" psid="6026">
            <description_user>Max power values per band per index(quarter dBm).</description_user>
            <type>int16</type>
            <table_name>unifiSarBackoffTable</table_name>
            <default_list>
                <default index1="1" index2="1">60</default>
                <default index1="2" index2="1">59</default>
                <default index1="3" index2="1">58</default>
                <default index1="4" index2="1">57</default>
                <default index1="5" index2="1">56</default>
                <default index1="6" index2="1">55</default>
                <default index1="7" index2="1">54</default>
                <default index1="8" index2="1">53</default>
                <default index1="9" index2="1">52</default>
                <default index1="10" index2="1">51</default>
                <default index1="11" index2="1">51</default>
                <default index1="12" index2="1">51</default>
                <default index1="13" index2="1">51</default>
                <default index1="14" index2="1">51</default>
                <default index1="15" index2="1">51</default>
                <default index1="16" index2="1">51</default>
                <default index1="17" index2="1">51</default>
                <default index1="18" index2="1">51</default>
                <default index1="19" index2="1">51</default>
                <default index1="20" index2="1">51</default>
                <default index1="21" index2="1">51</default>
                <default index1="22" index2="1">51</default>
                <default index1="23" index2="1">51</default>
                <default index1="24" index2="1">51</default>
                <default index1="25" index2="1">51</default>
                <default index1="26" index2="1">51</default>
                <default index1="27" index2="1">51</default>
                <default index1="28" index2="1">51</default>
                <default index1="29" index2="1">51</default>
                <default index1="30" index2="1">51</default>
                <default index1="31" index2="1">51</default>
                <default index1="32" index2="1">51</default>
                <default index1="33" index2="1">51</default>
                <default index1="34" index2="1">51</default>
                <default index1="35" index2="1">51</default>
                <default index1="36" index2="1">51</default>
                <default index1="37" index2="1">51</default>
                <default index1="38" index2="1">51</default>
                <default index1="39" index2="1">51</default>
                <default index1="40" index2="1">51</default>
                <default index1="41" index2="1">51</default>
                <default index1="42" index2="1">51</default>
                <default index1="43" index2="1">51</default>
                <default index1="1" index2="2">52</default>
                <default index1="2" index2="2">51</default>
                <default index1="3" index2="2">50</default>
                <default index1="4" index2="2">49</default>
                <default index1="5" index2="2">48</default>
                <default index1="6" index2="2">47</default>
                <default index1="7" index2="2">46</default>
                <default index1="8" index2="2">45</default>
                <default index1="9" index2="2">44</default>
                <default index1="10" index2="2">43</default>
                <default index1="11" index2="2">43</default>
                <default index1="12" index2="2">43</default>
                <default index1="13" index2="2">43</default>
                <default index1="14" index2="2">43</default>
                <default index1="15" index2="2">43</default>
                <default index1="16" index2="2">43</default>
                <default index1="17" index2="2">43</default>
                <default index1="18" index2="2">43</default>
                <default index1="19" index2="2">43</default>
                <default index1="20" index2="2">43</default>
                <default index1="21" index2="2">43</default>
                <default index1="22" index2="2">43</default>
                <default index1="23" index2="2">43</default>
                <default index1="24" index2="2">43</default>
                <default index1="25" index2="2">43</default>
                <default index1="26" index2="2">43</default>
                <default index1="27" index2="2">43</default>
                <default index1="28" index2="2">43</default>
                <default index1="29" index2="2">43</default>
                <default index1="30" index2="2">43</default>
                <default index1="31" index2="2">43</default>
                <default index1="32" index2="2">43</default>
                <default index1="33" index2="2">43</default>
                <default index1="34" index2="2">43</default>
                <default index1="35" index2="2">43</default>
                <default index1="36" index2="2">43</default>
                <default index1="37" index2="2">51</default>
                <default index1="38" index2="2">51</default>
                <default index1="39" index2="2">51</default>
                <default index1="40" index2="2">51</default>
                <default index1="41" index2="2">51</default>
                <default index1="42" index2="2">51</default>
                <default index1="43" index2="2">51</default>
                <default index1="1" index2="3">52</default>
                <default index1="2" index2="3">51</default>
                <default index1="3" index2="3">50</default>
                <default index1="4" index2="3">49</default>
                <default index1="5" index2="3">48</default>
                <default index1="6" index2="3">47</default>
                <default index1="7" index2="3">46</default>
                <default index1="8" index2="3">45</default>
                <default index1="9" index2="3">44</default>
                <default index1="10" index2="3">43</default>
                <default index1="11" index2="3">43</default>
                <default index1="12" index2="3">43</default>
                <default index1="13" index2="3">43</default>
                <default index1="14" index2="3">43</default>
                <default index1="15" index2="3">43</default>
                <default index1="16" index2="3">43</default>
                <default index1="17" index2="3">43</default>
                <default index1="18" index2="3">43</default>
                <default index1="19" index2="3">43</default>
                <default index1="20" index2="3">43</default>
                <default index1="21" index2="3">43</default>
                <default index1="22" index2="3">43</default>
                <default index1="23" index2="3">43</default>
                <default index1="24" index2="3">43</default>
                <default index1="25" index2="3">43</default>
                <default index1="26" index2="3">43</default>
                <default index1="27" index2="3">43</default>
                <default index1="28" index2="3">43</default>
                <default index1="29" index2="3">43</default>
                <default index1="30" index2="3">43</default>
                <default index1="31" index2="3">43</default>
                <default index1="32" index2="3">43</default>
                <default index1="33" index2="3">43</default>
                <default index1="34" index2="3">43</default>
                <default index1="35" index2="3">43</default>
                <default index1="36" index2="3">43</default>
                <default index1="37" index2="3">51</default>
                <default index1="38" index2="3">51</default>
                <default index1="39" index2="3">51</default>
                <default index1="40" index2="3">51</default>
                <default index1="41" index2="3">51</default>
                <default index1="42" index2="3">51</default>
                <default index1="43" index2="3">51</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPowerIsGrip" psid="6016">
            <description_user>Is using Grip power cap instead of SAR cap.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTPCMaxPowerRSSIThreshold" psid="6022">
            <description_user>Below the (dBm) threshold, switch to the max power allowed by regulatory, if it has been previously reduced due to unifiTPCMinPowerRSSIThreshold.
            This value is read only once when an interface is added.</description_user>
            <type>int16</type>
            <default>-55</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTPCMinPowerRSSIThreshold" psid="6023">
            <description_user>Above the (dBm) threshold, limit the transmit power by unifiTPCMaxPower2G/unifiTPCMaxPower5G. A Zero value reverts the power to a default state.
            This value is read only once when an interface is added.</description_user>
            <type>int16</type>
            <default>-45</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTPCMaxPower2G" psid="6024">
            <description_user>Maximum power for 2.4GHz SISO interface when RSSI is above unifiTPCMinPowerRSSIThreshold (quarter dbm). Should be greater than dot11PowerCapabilityMinImplemented.
            This value is read only once when an interface is added.</description_user>
            <type>int16</type>
            <default>52</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTPCMaxPower2GMIMO" psid="6011">
            <description_user>Maximum power for 2.4GHz MIMO interface when RSSI is above unifiTPCMinPowerRSSIThreshold (quarter dbm). Should be greater than dot11PowerCapabilityMinImplemented.
            This value is read only once when an interface is added.</description_user>
            <type>int16</type>
            <default>52</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTPCMaxPower5G" psid="6025">
            <description_user>Maximum power for 5 GHz SISO interface when RSSI is above unifiTPCMinPowerRSSIThreshold (quarter dbm). Should be greater than dot11PowerCapabilityMinImplemented.
            This value is read only once when an interface is added.</description_user>
            <type>int16</type>
            <default>40</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTPCMaxPower5GMIMO" psid="6012">
            <description_user>Maximum power for 5 GHz MIMO interface when RSSI is above unifiTPCMinPowerRSSIThreshold (quarter dbm). Should be greater than dot11PowerCapabilityMinImplemented.
            This value is read only once when an interface is added.</description_user>
            <type>int16</type>
            <default>52</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTPCUseAfterConnectRsp" psid="6027">
            <description_user>Use TPC only after MlmeConnect_Rsp has been received from the Host i.e. not during initial connection exchanges (EAPOL/DHCP operation) as
            RSSI readings might be inaccurate. This value is read only once when an interface is added.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiLteCoexMaxPowerRSSIThreshold" psid="6033">
            <description_user>Below this (dBm) threshold, switch to max power allowed by regulatory, if it has been previously reduced due to unifiTPCMinPowerRSSIThreshold.
            This value is read only once when an interface is added.</description_user>
            <type>int16</type>
            <default>-55</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiLteCoexMinPowerRSSIThreshold" psid="6034">
            <description_user>Above this(dBm) threshold, switch to minimum hardware supported - capped by unifiTPCMaxPower2G/unifiTPCMaxPower5G. Zero reverts the power to its default state.
            This value is read only once when an interface is added.</description_user>
            <type>int16</type>
            <default>-45</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiLteCoexPowerReduction" psid="6035">
            <description_user>When LTE Coex Power Reduction provisions are met, impose a power cap of the regulatory domain less the amount specified by this MIB (quarter dB).
            This value is read only once when an interface is added.</description_user>
            <range_min>0</range_min><range_max>127</range_max><default>24</default>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPrivateBbbTxFilterConfig" psid="4071">
            <description_user>entry is written directly to the BBB_TX_FILTER_CONFIG register. Only the lower eight bits of this register are implemented . Bits 0-3 are the &apos;Tx Gain&apos;, bits 6-8 are the &apos;Tx Delay&apos;. This register should only be changed by an expert.</description_user>
            <is_internal>true</is_internal>
            <type>uint16</type>
            <default>0x17</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDeactivateInessentialDebug" psid="4140">
            <description_user> Allow Deactivate Inessential debug in high TRx throughput condition - default value is false.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiThroughputLow" psid="4150">
            <description_user> Lower threshold for number of bytes received in a second - default value based on 300Mbps </description_user>
            <is_internal>true</is_internal>
            <type>uint32</type>
            <default>37500000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiThroughputHigh" psid="4151">
            <description_user> Upper threshold for number of bytes received in a second - default value based on 400Mbps </description_user>
            <is_internal>true</is_internal>
            <type>uint32</type>
            <default>50000000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="deprecated_unifiWapiQosMask" psid="4130">
            <description_user>Forces the WAPI encryption hardware use the QoS mask specified.</description_user>
            <is_internal>true</is_internal>
            <type>uint16</type>
            <default>15</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiCSROnlyMIBShield" psid="4001">
            <description_user>Each element of the MIB has a set of read/write access constraints that may be applied when the element is accessed by the host. For most elements the constants are derived from their MAX-ACCESS clauses. unifiCSROnlyMIBShield controls the access mechanism. If this entry is set to &apos;warn&apos;, when the host makes an inappropriate access to a MIB variable (e.g., writing to a &apos;read-only&apos; entry) then the firmware attempts to send a warning message to the host, but access is allowed to the MIB variable. If this entry is set to &apos;guard&apos; then inappropriate accesses from the host are prevented. If this entry is set to &apos;alarm&apos; then inappropriate accesses from the host are prevented and the firmware attempts to send warning messages to the host. If this entry is set to &apos;open&apos; then no access constraints are applied and now warnings issued. Note that certain MIB entries have further protection schemes. In particular, the
                MIB prevents the host from reading some security keys (WEP keys, etc.).</description_user>
            <is_internal>true</is_internal>
            <access_rights>not_accessible</access_rights>
            <type>unifiCSROnlyMIBShield</type>
            <default>2</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPsPollThreshold" psid="4179">
            <type>uint16</type>
            <description_user>PS Poll threshold. When Unifi chip is configured for normal power save mode and when access point does not respond to PS-Poll requests, then a fault will be generated on non-zero PS Poll threshold indicating mode has been switched from power save to fast power save. Ignored PS Poll count is given as the fault argument.</description_user>
            <default>30</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiPostEBRTWindow" psid="4173">
            <description_user>Minimum time after the expected normal mode beacon reception time that UniFi will continue to listen for the beacon in an infrastructure BSS before timing out. Reducing this value can reduce UniFi power consumption when using low power modes, however a value which is too small may cause beacons to be missed, requiring the radio to remain on for longer periods to ensure reception of the subsequent beacon.</description_user>
            <is_internal>true</is_internal>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>5000</default>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiPostEBRTWindowIdle" psid="4180">
            <description_user>Minimum time after the expected idle mode beacon reception time that UniFi will continue to listen for the beacon in an infrastructure BSS before timing out. Reducing this value can reduce UniFi power consumption when using low power modes, however a value which is too small may cause beacons to be missed, requiring the radio to remain on for longer periods to ensure reception of the subsequent beacon.</description_user>
            <is_internal>true</is_internal>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>2000</default>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>

        <config_element name="unifiCSROnlyPowerCalDelay" psid="4078">
            <description_user>Delay applied at each step of the power calibration routine used with an external PA.</description_user>
            <is_internal>true</is_internal>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPreEBRTWindow" psid="4171">
            <description_user>Latest time before the expected beacon reception time that UniFi will turn on its radio in order to receive the beacon. Reducing this value can reduce UniFi power consumption when using low power modes, however a value which is too small may cause beacons to be missed, requiring the radio to remain on for longer periods to ensure reception of the subsequent beacon.</description_user>
            <is_internal>true</is_internal>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>100</default>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiPreEBRTWindowIdle" psid="4181">
            <description_user>Latest time before the expected idle mode beacon reception time that UniFi will turn on its radio in order to receive the beacon. Reducing this value can reduce UniFi power consumption when using low power modes, however a value which is too small may cause beacons to be missed, requiring the radio to remain on for longer periods to ensure reception of the subsequent beacon.</description_user>
            <is_internal>true</is_internal>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>100</default>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>

        <config_element name="unifiPrivateSWAGCExtThresh" psid="4077">
            <description_user>Signal level at which external LNA will be used for AGC purposes.</description_user>
            <is_internal>true</is_internal>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max><default>-25</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPrivateSWAGCFrontEndGain" psid="4075">
            <description_user>Gain of the path between chip and antenna when LNA is on.</description_user>
            <is_internal>true</is_internal>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max><default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPrivateSWAGCFrontEndLoss" psid="4076">
            <description_user>Loss of the path between chip and antenna when LNA is off.</description_user>
            <is_internal>true</is_internal>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max><default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiChipVersion" psid="2022">
            <description_user>Numeric identifier for the UniFi silicon revision (as returned by the GBL_CHIP_VERSION hardware register). Other than being different for each design variant (but not for alternative packaging options), the particular values returned do not have any significance.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCrystalFrequencyTrim" psid="2141">
            <description_user>The IEEE 802.11 standard requires a frequency accuracy of either +/- 20 ppm or +/- 25 ppm depending on the physical layer being used. If UniFi&apos;s frequency reference is a crystal then this attribute should be used to tweak the oscillating frequency to compensate for design- or device-specific variations. Each step change trims the frequency by approximately 2 ppm.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_max>63</range_max><default>31</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDTIMWaitTimeout" psid="2529">
            <description_user>If UniFi is in power save and receives a Traffic Indication Map from its associated access point with a DTIM indication, it will wait a maximum time given by this attribute for succeeding broadcast or multicast traffic, or until it receives such traffic with the &apos;more data&apos; flag clear. Any reception of broadcast or multicast traffic with the &apos;more data&apos; flag set, or any reception of unicast data, resets the timeout. The timeout can be turned off by setting the value to zero; in that case UniFi will remain awake indefinitely waiting for broadcast or multicast data. Otherwise, the value should be larger than that of unifiPowerSaveExtraListenTime.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>50000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiOutputRadioInfoToKernelLog" psid="2239">
            <description_user>Print messages about the radio status to the Android Kernel Log. See document SC-508266-TC.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiDebugKeepRadioOn" psid="2545">
            <description_user>Keep the radio on. For debug purposes only. Setting the value to FALSE means radio on/off functionality will behave normally. Note that setting this value to TRUE will automatically disable dorm. The intention is *not* for this value to be changed at runtime.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiForceFixedDurationSchedule" psid="2546">
            <description_user>For schedules with fixed duration e.g. scan, unsync VIF, the schedule will be forced after this time to avoid VIF starving </description_user>
            <units>TU</units>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiAntennaSelectionOption" psid="2459">
            <description_user>Select how antennas will be allocated for SISO/RSDB/RSTB scenarios. Only valid for multi-radio platforms. WARNING: Changing this value after system start-up will have no effect.
            If the value is set to 0, antenna0 is used for 2G4 and antenna1 is used for 5G or 6G.
            If the value is set to 1, antenna1 is used for 2G4 and antenna0 is used for 5G or 6G.
            If the value is set to 2, the antenna with the strongest RSSI average will be preferred over the other antenna.
            Also see unifiAntennaSelection.</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiSTAUsesOneAntennaWhenIdle" psid="2274">
            <description_user>Allow the platform to downgrade antenna usage for STA VIFs to 1 if the VIF is idle. Only valid for multi-radio platforms.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiSTAUsesMultiAntennasDuringConnect" psid="2275">
            <description_user>Allow the platform to use multiple antennas for STA VIFs during the connect phase. Only valid for multi-radio platforms.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiAPUsesOneAntennaWhenPeersIdle" psid="2276">
            <description_user>Allow the platform to downgrade antenna usage for AP VIFs when all connected peers are idle. Only valid for multi-radio platforms.</description_user>
            <type>boolean</type>
            <default>false</default>
           <function_list>
               <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
           </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="deprecated_unifiUpdateAntennaCapabilitiesWhenScanning" psid="2277">
            <description_user>Specify whether antenna scan activities will be allowed to cause an update of VIF capability. Only valid for multi-radio platforms. WARNING: Changing this value after system start-up will have no effect.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiPreferredAntennaBitmap" psid="2278">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Specify the preferred antenna(s) to use. A value of 0 means that the FW will decide on the antenna(s) to use. Only valid for multi-radio platforms.
            S630:
             - bit0 : RADIO_0_A (5G/6G) or RADIO_0_B(2G)
             - bit1 : RADIO_1_A(5G/6G) or RADIO_1_B(2G)
            S62x or earlier than S630:
             - bit0 : RADIO_0_A
             - bit1 : RADIO_1_A
            </description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>3</range_max>
            <default>0</default>
           <function_list>
               <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
           </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiMaxConcurrentMACs" psid="2279">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Specify the maximum number of MACs that may be used for the platform. For multi-MAC platforms that value *could* be greater than 1. WARNING: Changing this value after system start-up will have no effect.</description_user>
            <type>uint16</type>
            <default>2</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiMaxNumAntennaToUse" psid="2025">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Specify the maximum number of antenna that will be used for each band. Lower 8 bits = 2GHz, Mid 8 bits = 5Ghz, Higher 8 bits = 6Ghz. Limited by maximum supported by underlying hardware. WARNING: Changing this value after system start-up will have no effect.</description_user>
            <type>uint32</type>
            <default>0x0202</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiEnableTwoSimultaneousPassiveScansSameBand" psid="2047">
            <description_user>Enable two passive scans to be simultaneously scheduled on two distinct channels at the same.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiSISOSwitchWaitTime" psid="2466">
            <description_user>The amount of time in beacon intervals to evaluate whether an AP has responded correctly to a STA VIF attempting to switch from SISO to MIMO based on a host request. Only used if unifiHostNumAntennaControlActivated is set to true.</description_user>
            <type>uint16</type>
            <default>20</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiEnableFlexiMacWatchdog" psid="5200">
            <description_user>OBSOLETE. Bitmap controlling watchdog configuration for fleximac. Setting bit to 1 will enable watchdog for MAC represented by  bit position </description_user>
            <type>uint16</type>
            <default>0x0000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiEnableDorm" psid="2142">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Enable Dorm (deep sleep). When disabled, WLAN will not switch the radio power domain on/off *and* it will always veto deep sleep. Setting the value to TRUE means dorm functionality will behave normally. The intention is *not* for this value to be changed at runtime.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTogglePowerDomain" psid="2522">
            <description_user>Toggle WLAN power domain when entering dorm mode (deep sleep). When entering deep sleep and this value it true, then the WLAN power domain is disabled for the deep sleep duration. When false, the power domain is left turned on. This is to work around issues with WLAN rx, and is considered temporary until the root cause is found and fixed.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDiscardedFrameCount" psid="2214">
            <description_user>This is a counter that indicates the number of data and management frames that have been processed by the UniFi hardware but were discarded before being processed by the firmware. It does not include frames not processed by the hardware because they were not addressed to the local device, nor does it include frames discarded by the firmware in the course of normal MAC processing (which include, for example, frames in an appropriate encryption state and multicast frames not requested by the host). Typically this counter indicates lost data frames for which there was no buffer space; however, other cases may cause the counter to increment, such as receiving a retransmitted frame that was already successfully processed. Hence this counter should not be treated as a reliable guide to lost frames. The counter wraps to 0 after 65535.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCurrentTSFTime" psid="2218">
            <description_user>Get TSF time (last 32 bits) for the specified VIF. VIF index can't be 0 as that is treated as global VIF For station VIF - Correct BSS TSF wil only be reported after MLME-CONNECT.indication(success) indication to host. Note that if MAC Hardware is switched off then TSF returned is estimated value</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <function_list>
                <function type="get" function_name="mibtsftime" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiOffchannelProcedureTimeout" psid="2079">
            <description_user>Maximum timeout in ms the Offchannel FSM will wait until the procedure is completed</description_user>
            <type>uint16</type>
            <default>1000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiExtendedCapabilitiesSoftAp" psid="2024">
            <description_user>Extended capabilities for SoftAp. Bit field definition and coding follows IEEE 802.11 Extended Capability Information Element, with spare subfields for capabilities that are independent from chip/firmware implementation.</description_user>
            <type>octet_string</type>
            <range_min>10</range_min><range_max>10</range_max><default>{ 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00 }</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiExtendedCapabilities" psid="2031">
            <description_user>Extended capabilities. Bit field definition and coding follows IEEE 802.11 Extended Capability Information Element, with spare subfields for capabilities that are independent from chip/firmware implementation.</description_user>
            <type>octet_string</type>
            <range_min>10</range_min><range_max>10</range_max><default>{ 0x05, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x20}</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiExtendedCapabilitiesDisabled" psid="2036">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Suppress extended capabilities IE being sent in the association request. Please note that this may fix IOP issues with Aruba APs in WMMAC. Singed Decimal</description_user>
            <type>boolean</type><format>signed_decimal</format><default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiExternalClockDetect" psid="2146">
            <description_user>If UniFi is running with an external fast clock source, i.e. unifiExternalFastClockRequest is set, it is common for this clock to be shared with other devices. Setting to true causes UniFi to detect when the clock is present (presumably in response to a request from another device), and to perform any pending activities at that time rather than requesting the clock again some time later. This is likely to reduce overall system power consumption by reducing the total time that the clock needs to be active.</description_user>
            <access_rights>read_only</access_rights>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiExternalFastClockRequest" psid="2149">
            <description_user>It is possible to supply UniFi with an external fast reference clock, as an alternative to using a crystal. If such a clock is used then it is only required when UniFi is active. A signal can be output on PIO[2] or if the version of UniFi in use is the UF602x or later, any PIO may be used (see unifiExternalFastClockRequestPIO) to indicate when UniFi requires a fast clock. Setting makes this signal become active and determines the type of signal output. 0 - No clock request. 1 - Non inverted, totem pole. 2 - Inverted, totem pole. 3 - Open drain. 4 - Open source.</description_user>
            <access_rights>read_only</access_rights>
            <type>unifiExternalFastClockRequest</type>
            <default>1</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiExternalFastClockRequestPIO" psid="2158">
            <description_user>If an external fast reference clock is being supplied to UniFi as an alternative to a crystal (see unifiExternalFastClockRequest) and the version of UniFi in use is the UF602x or later, any PIO may be used as the external fast clock request output from UniFi. key determines the PIO to use.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_max>15</range_max><default>9</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDplaneTXAmsduHWCapability" psid="2223">
            <description_user>Returns 0 if A-MSDU size limited to 4K. Returns 1 is A-MSDU size is limited to 8K. This value is chip specific and limited by HW. </description_user>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDplaneTXAmsduSubframeCountMax" psid="2224">
            <description_user>Defines the maximum number of A-MSDU sub-frames per A-MSDU.  A value of 1 indicates A-MSDU aggregation has been disabled</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>3</default>
            <range_min>1</range_min>
            <range_max>4</range_max>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiAmsduSubframeRealtekOverrideActivated" psid="2615">
            <description_user>When connected to Realtek chipset AP, inform Dataplane that actions need to be taken.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module><!-- sta -->
        </config_element>
        <config_element name="unifiHE40in5GRalinkOverrideEnable" psid="2620">
            <description_user>When connected to Ralink chipset AP, inform MLME to override support of 40Mhz in 5G of HE phy capabilities when connected on 2.4G.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
            <module>mlme</module><!-- sta -->
        </config_element>
        <config_element name="unifiDplaneTest1" psid="4154">
            <description_user>Dplane test mib to read and write uint32</description_user>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDplaneTest2" psid="4155">
            <description_user>Dplane test mib to read and write uint32</description_user>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDplaneTest3" psid="4156">
            <description_user>Dplane test mib to read and write uint32</description_user>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDplaneTest4" psid="4157">
            <description_user>Dplane test mib to read and write uint32</description_user>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiEnableCopyPhyLogToDram" psid="4158">
            <description_user>Enable or disable copying phy event logs in SRAM to DRAM</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
       <config_element name="unifiDplaneDeafDetection" psid="4160">
            <description_user> Configuration for Deaf detection algorithm.
                This feature only becomes enabled when it is FlexiMac and FM_DEAF_DETECTION flag is set.
                Usage:
                   octet 0 - the number of consecutive cts without data frames to detect as deafness
                   octet 1 - the number of consecutive rts without cts to detect as deafness
                   octet 2 and 3 are not used
                0 means disabling it.
            </description_user>
            <type>uint32</type>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLiveRestartRssiThreshold" psid="4174">
            <description_user>Minimum rssi threshold (dBm) to trigger live-restart
                If the RSSI is lower(poor) than this value, even if live-restart is requested by
                unifiDplaneDeafDetection, do not execute live-restart to avoid false alarm from environmental cause.
                This feature is disabled if set to 0 and only valid for STA VIFs. </description_user>
            <type>int16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiLiveRestartMinInterval" psid="4175">
            <description_user>Minimum duration(ms) to execute live-restart from the previous restart.
                If elapsed time from previous live-restart is smaller than this value, even if live-restart is requested by
                unifiDplaneDeafDetection, do not execute live-restart to avoid redundant chatty alarm.
                This feature is disabled if set to 0. </description_user>
            <units>ms</units>
            <type>uint32</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiPhyEventLogEnable" psid="2238">
            <description_user> Enable or Disable PHY Event Log - Disable: zero, Enable: None zero </description_user>
            <type>uint16</type>
            <default>1</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPhyEventToUDIConfig" psid="4168">
            <description_user> Configure events that trigger sending PHY Event logs to UDI
                This feature is enabled when 1 is defined.
                Bitmap for configuring the trigger condition:
                0x0000 : disabled
                0x0001 : periodically
                0x0002 : tx_failure
                0x0004 : ba_missed
                0x0008 : live_restart
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>0x000E</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPhyEventToUDIInterval" psid="4169">
            <description_user> Interval (milliseconds) to send PHY Event Logs to UDI
                Trigger condition is controlled by unifiPhyEventToUDIControl
                This feature is enabled when 1 is defined.
            </description_user>
            <type>uint16</type>
            <units>milliseconds</units>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>1000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPhyEventToUdiMinInterval" psid="4166">
            <description_user> Minimal gap in msec from the last PHY Event Logs to UDI.
                PHY logs are generated only when the gap from the last logging is larger
                than MIB value.
            </description_user>
            <type>uint16</type>
            <units>milliseconds</units>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>5</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPhyEventToUdiMinBeaconMissInRow" psid="4167">
            <description_user> Minimal beacon misses in a row to start PHY logging on beacon misses.
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>5</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMonitorStaAddress" psid="4170">
            <description_user>MAC address of a target station to be captured in monitor (sniffer) mode.
                Monitor mode captures all received frames on a best-effort basis but there are certain frames which require pre-configuration before capturing.
                This feature will allow to capture HE-MU OFDMA frame by setting corresponding AID to the target station.
                Monitor vif uses this target station address to retrieve AID from AID-contained-frames automatically, e.g. assoc resp and NDPA.
            </description_user>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>6</range_max><default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <function_list>
                <function type="set" function_name="mibmonitorstaaddrset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFastPowerSaveTimeout" psid="2500">
            <description_user>Golden Certification MIB don't delete, change PSID or name: UniFi implements a proprietary power management mode called Fast Power Save that balances network performance against power consumption. In this mode UniFi delays entering power save mode until it detects that there has been no exchange of data for the duration of time specified.</description_user>
            <units>&#x00b5;s</units>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false" ></function>
            </function_list>
            <range_max>2147483647</range_max><default>400000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiFastPowerSaveTimeOutSmall" psid="2501">
            <description_user>UniFi implements a proprietary power management mode called Fast Power Save that balances network performance against power consumption. In this mode UniFi delays entering power save mode until it detects that there has been no exchange of data for the duration of time specified. The unifiFastPowerSaveTimeOutSmall aims to improve the power consumption by setting a lower bound for the Fast Power Save Timeout. If set with a value above unifiFastPowerSaveTimeOut it will default to unifiFastPowerSaveTimeOut.</description_user>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>50000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiFastPowerSaveTimeOutAggressive" psid="2494">
            <description_user>UniFi implements a proprietary power management mode called Fast Power Save that balances network performance against power consumption. In this mode UniFi delays entering power save mode until it detects that there has been no exchange of data for the duration of time specified. The unifiFastPowerSaveTimeOutAggressive aims to improve the power consumption by setting a aggressive time when channel is not busy for the Fast Power Save Timeout. If set with a value above unifiFastPowerSaveTimeOut it will default to unifiFastPowerSaveTimeOut. Setting it to zero disables the feature</description_user>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>20000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiDynamicITOEnable" psid="2175">
            <description_user>Enables Dynamic ITO update feature</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiDynamicITOControl" psid="2478">
            <description_user>Control DynamicITO algorithm with bit flags.
            1 defines enabled,with 0 showing the case disabled.
            bit 0:  Dynamic ITO based on Beacon RX missed condition or struggling to receive beacons
            bit 1:  Dynamic ITO based on Traffic condition (continuous or occasional)
            bit 2:  Dynamic ITO based on Channel condition (Free/busy)
            bit 3:  Dynamic ITO based on how fast AP responding to data
            </description_user>
            <range_min>0</range_min><range_max>65536</range_max><default>0x000E</default>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRameDplaneOperationTimeout" psid="2544">
            <description_user>Timeout for requests sent from MACRAME to Data Plane. Any value below 1000ms will be capped at 1000ms.</description_user>
            <units>milliseconds</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <default>1000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiVifIdleMonitorTime" psid="2509">
            <description_user>In Fast Power Save mode, the STA will decide whether it is idle based on monitoring its traffic class. If the traffic class is continuously "occasional" for equal or longer than the specified value (in seconds), then the VIF is marked as idle. Traffic class monitoring is based on the interval specified in the "unifiTrafficAnalysisPeriod" MIB</description_user>
            <units>second</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>1800</range_max><default>1</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiFirmwareBuildID" psid="2021">
            <description_user>Numeric build identifier for this firmware build. This should normally be displayed in decimal. The textual build identifier is available via the standard dot11manufacturerProductVersion MIB attribute.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function type="get" function_name="mibgetfirmwarebuildid"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFirmwarePatchBuildID" psid="2023">
            <description_user>Numeric build identifier for the patch set that has been applied to this firmware image. This should normally be displayed in decimal. For a patched ROM build there will be two build identifiers, the first will correspond to the base ROM image, the second will correspond to the patch set that has been applied.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function type="get" function_name="mibgetfirmwarebuildid"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDisallowSchedRelinquish" psid="2543">
            <description_user>When enabled the VIFs will not relinquish their assigned schedules when they have nothing left to do.</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
         <config_element name="unifiUspboTxAggregateBufferSize" psid="2266">
            <description_user>Control BA TX agreements and Restrict the Tx BA Buffer size during non-LTE USPBO.
            0 = Tx BA agreements will be suppressed during USPBO.
            1 - 256 = Tx BA agreements will be preserved during USPBO, buffer size limited to this value.
            0xffff = Tx BA agreements will be preserved during USPBO, buffer size limited to default value.
            </description_user>
            <type>uint16</type>
            <default>8</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiMLMESTAKeepAliveFailure" psid="2842">
            <description_user>Link lost by keep alive failure. 0 = Disabled. This is required by MCD. This value is read only once when an interface is added.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRestrictScoTxopSize" psid="2265">
            <description_user>If non 0 value, during an SCO/ESCO USBPO, restrict the TXOP Limit to value (in steps of 32us). 0 = Do not restrict.</description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiMLMESTAKeepAliveTimeout" psid="2502">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Timeout before disconnecting in seconds. 0 = Disabled. Capped to greater than 6 seconds.
            This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <range_max>2147</range_max><default>30</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMEAPKeepAliveTimeout" psid="2503">
            <description_user>Timeout before disconnecting in seconds. 0 = Disabled. Capped to greater than 6 seconds. This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <range_max>2147</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMEGOKeepAliveTimeout" psid="2504">
            <description_user>Timeout before disconnecting in seconds. 0 = Disabled. Capped to greater than 6 seconds. This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <range_max>2147</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMESTAKeepAliveTimeoutCheck" psid="2485">
            <description_user>DO NOT SET TO A VALUE HIGHER THAN THE TIMEOUT. How long before keepalive timeout to start polling, in seconds. This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <range_max>100</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMEAPKeepAliveTimeoutCheck" psid="2486">
            <description_user>DO NOT SET TO A VALUE HIGHER THAN THE TIMEOUT. How long before keepalive timeout to start polling, in seconds. This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <range_max>100</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMEGOKeepAliveTimeoutCheck" psid="2487">
            <description_user>DO NOT SET TO A VALUE HIGHER THAN THE TIMEOUT. How long before keepalive timeout to start polling, in seconds. This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <range_max>100</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- End of Keep Alive MIBs -->
        <config_element name="unifiMLMESTAPktLifetime" psid="2602">
            <description_user>MLME STA packet lifetime in seconds. Maximum time in seconds for a frame to be queued before sent out. This value is read only once when an interface is added. Used along with MlmeSendFrameRequest.</description_user>
            <type>uint16</type>
            <range_max>10</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiSTARouterAdvertisementMinimumIntervalToForward" psid="2505">
            <description_user>STA Mode: Minimum interval to forward Router Advertisement frames to Host. Minimum value = 60 secs.</description_user>
            <type>uint32</type>
            <range_min>60</range_min><range_max>4294967285</range_max><default>60</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- End of Router Advertisement Rate Reduction MIBs -->
        <config_element name="unifiFragmentationDuration" psid="2524">
            <description_user>A limit on transmission time for a data frame. If the data payload would take longer than unifiFragmentationDuration to transmit, UniFi will attempt to fragment the frame to ensure that the data portion of each fragment is within the limit. The limit imposed by the fragmentation threshold is also respected, and no more than 16 fragments may be generated. If the value is zero no limit is imposed. The value may be changed dynamically during connections. Note that the limit is a guideline and may not always be respected. In particular, the data rate is finalised after fragmentation in order to ensure responsiveness to conditions, the calculation is not performed to high accuracy, and octets added during encryption are not included in the duration calculation.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>dplane</module>
        </config_element>
        <config_element name="unifiMLMEScanMaxAerials" psid="2607">
            <description_user>Golden Certification MIB don't delete, change PSID or name. Limit the number of Aerials that Scan will use.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><default>1</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanChannelRule" psid="2003">
            <description_user>Rules for channel scanners.</description_user>
            <type>octet_string</type>
            <range_min>4</range_min><range_max>4</range_max><default>{ 0x00, 0x01, 0x00, 0x01 }</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanChannelMaxScanTime" psid="2001">
            <description_user>Test only: overrides max_scan_time. 0 indicates not used.</description_user>
            <type>octet_string</type>
            <range_min>14</range_min><range_max>14</range_max><default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanChannelProbeInterval" psid="2002">
            <description_user>Test only: overrides probe interval. 0 indicates not used.</description_user>
            <type>octet_string</type>
            <range_min>14</range_min><range_max>14</range_max><default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanDeltaRSSIThreshold" psid="2010">
            <description_user>Magnitude of the change in RSSI for which a scan result will be issued. In dB.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>255</range_max><default>20</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanHighRSSIThreshold" psid="2008">
            <description_user>Minimum RSSI, in dB, for a scan indication to be kept.</description_user>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max><default>-90</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanMaximumResults" psid="2015">
            <description_user>Max number of scan results, per sps, which will be stored before the oldest result is discarded, irrespective of its age. The value 0 specifies no maximum.</description_user>
            <type>uint16</type>
            <default>100</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanDefaultShortFullScanTime" psid="5406">
            <description_user>Scan channel duration when in short full scan mode.</description_user>
            <type>uint16</type>
            <range_min>20</range_min><range_max>30</range_max>
            <units>TU</units>
            <default>25</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanShortFullScanNumOfProbes" psid="5407">
            <description_user>Number of probes for short full scan.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>3</range_max>
            <default>2</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanContinueIfMoreThanXAps" psid="5410">
            <description_user>Part of Scan Algorithm: Keep scanning on a channel with lots of APs.</description_user>
            <type>uint16</type>
            <default>10</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanStopIfLessThanXNewAps" psid="5411">
            <description_user>Part of Scan Algorithm: Stop scanning on a channel if less than X NEW APs are seen.</description_user>
            <type>uint16</type>
            <default>4</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiScanMultiVifActivated" psid="5412">
            <description_user>Part of Scan Algorithm: Activate support for Multi Vif channel times.</description_user>
            <type>boolean</type>
            <default>1</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiScanNewAlgorithmActivated" psid="5413">
            <description_user>Part of Scan Algorithm: Activate support for the new algorithm. </description_user>
            <type>boolean</type>
            <default>1</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiScanRegisteredVIFInfrastructureSTA" psid="5414">
            <description_user>Part of Scan Algorithm: Consider only Infrastructure STA vif as registered vif to choose VIF >= 1 scan parameters.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiMLMEScanStopIfLessThanXFrames" psid="2088">
            <description_user>Stop scanning on a channel if less than X Beacons or Probe Responses are received.</description_user>
            <type>uint16</type>
            <default>4</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiLowLatencyScanNProbe" psid="2288">
            <description_user>Low Latency Scan: The number of ProbeRequest frames per channel.  </description_user>
            <type>uint16</type><default>2</default><range_min>1</range_min>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiAPAssociationTimeout" psid="2089">
            <description_user>SoftAP: Permitted time for a station to complete associatation with FW acting as AP in milliseconds.</description_user>
            <type>uint16</type>
            <default>2000</default>
            <nature>software</nature><module>mlme</module><!-- ap -->
        </config_element>
        <config_element name="unifiBSSMaxIdlePeriodActivated" psid="2508">
            <description_user>If set STA will configure keep-alive with options specified in a received BSS max idle period IE</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBSSMaxIdlePeriod" psid="2488">
            <description_user>BSS Idle MAX Period. Used to cap the value coming from BSS Max Idle Period IE, in seconds</description_user>
            <type>uint16</type>
            <units>second</units>
            <range_max>300</range_max><default>300</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiDmsActivated" psid="2513">
            <description_user>Activate Directed Multicast Service (DMS)</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMEInactivityNewAlgorithmActivated" psid="2105">
            <description_user>If enabled, the new algorithm which uses the timestamp of Sync frames (Beacon and Probe Response) would be used in logic to evaluate inactivity.
            If disabled, the old inactivity mechanism of any RX/TX timestamp and transmission of Null/QoS Null frame would be used in inactivity logic.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMEStationInactivityTimeOut" psid="2098">
            <description_user>Timeout, in seconds, for instigating ConnectonFailure procedures. Setting it to less than 3 seconds may result in frequent disconnection or roaming with the AP.
            Disable with Zero. Values lower than INACTIVITY_MINIMUM_TIMEOUT becomes INACTIVITY_MINIMUM_TIMEOUT. This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <default>6</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMECliInactivityTimeOut" psid="2099">
            <description_user>Timeout, in seconds, for instigating ConnectonFailure procedures. Zero value disables the feature. Any value written lower than INACTIVITY_MINIMUM_TIMEOUT
            becomes INACTIVITY_MINIMUM_TIMEOUT. This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMEStationInitialKickTimeOut" psid="2100">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Timeout, in milliseconds, for sending the AP a NULL frame to kick off the EAPOL exchange.
            This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <default>50</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMLMEDataReferenceTimeout" psid="2005">
            <description_user>Maximum time, in TU, allowed for the data in data references corresponding to MLME primitives to be made available to the firmware. The special value 0 specifies an infinite timeout.</description_user>
            <description_internal>Note that the default has to be sufficient to allow for any MLME-SET.request used to set a different value! The value 65535 is reserved for future internal expansion (infinite timeout).</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_max>65534</range_max><default>0</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiPowerManagementDelayTimeout" psid="2514">
            <description_user>When UniFi enters power save mode it signals the new state by setting the power management bit in the frame control field of a NULL frame. It then remains active for the period since the previous unicast reception, or since the transmission of the NULL frame, whichever is later. This entry controls the maximum time during which UniFi will continue to listen for data. This allows any buffered data on a remote device to be cleared. Specifies an upper limit on the timeout. UniFi internally implements a proprietary algorithm to adapt the timeout depending upon the situation.This is used by firmware when current station VIF is only station VIF which can be scheduled</description_user>
            <units>&#x00b5;s</units>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>20000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiConcurrentPowerManagementDelayTimeout" psid="2516">
            <description_user>When UniFi enters power save mode it signals the new state by setting the power management bit in the frame control field of a NULL frame. It then remains active for the period since the previous unicast reception, or since the transmission of the NULL frame, whichever is later. This entry controls the maximum time during which UniFi will continue to listen for data. This allows any buffered data on a remote device to be cleared. This is same as unifiPowerManagementDelayTimeout but this value is considered only when we are doing multivif operations and other VIFs are waiting to be scheduled.Note that firmware automatically chooses one of unifiPowerManagementDelayTimeout and unifiConcurrentPowerManagementDelayTimeout depending upon the current situation.It is sensible to set unifiPowerManagementDelayTimeout to be always more thanunifiConcurrentPowerManagementDelayTimeout.</description_user>
            <units>&#x00b5;s</units>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>10000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiDisableLegacyPowerSave" psid="2510">
            <description_user>Golden Certification MIB don't delete, change PSID or name: This affects Station VIF power save behaviour.
            Setting it to true will disable legacy power save (i.e. we wil use fast power save to retrieve data)
            Note that actually disables full power save mode (i.e sending trigger to retrieve frames which will be PS-POLL for legacy and QOS-NULL for UAPSD)</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiDebugForceActive" psid="2511">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Force station power save mode to be active (when scheduled).
            VIF scheduling, coex and other non-VIF specific reasons could still force power save on the VIF.
            Applies to all VIFs of type station (includes P2P client).
            Changes to the mib will only get applied after next host/mlme power management request.</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiSupportMaxRequiredAntenna" psid="2460">
            <description_user>Setting this MIB key to 'false' will use the number of antennas based on the peer device's advertised Nss.
            Setting this MIB key to 'true' will use the number of antennas based on the peers's max required antennas. An example where
            this is useful is when a peer advertises support for 1ss and STBC, thus 2 antennas must be used.
            For multi-antenna platforms only.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiMIFOffAllowed" psid="2271">
            <description_user> Allow MIF to be turned off. If set to TRUE, it will prevent MIF to be turned off while WLAN is running.
            Disabling the mib will prevent to enter idle mode lite or idle mode medium </description_user>
            <type>boolean</type>
            <default>true</default>
        </config_element>
        <config_element name="unifiMiflessStaEnable" psid="2273">
            <description_user>This is flag for checking if MIFLESS for station vif is enabled or not. True means enabled. And false means disabled. This would be mainly depended on RF chip.</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        <module>macrame</module>
        </config_element>
        <config_element name="unifiMiflessAPBitmap" psid="2458">
            <description_user>This is bitmap for checking if AP IDLE is MIFLESS of not
                BIT 0: Set means beacon is transmitted with MIF turned off.
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        <module>macrame</module>
        </config_element>
        <config_element name="unifiMiflessAPMinAwakeInterval" psid="2467">
            <description_user>For Mifless AP low power mode this is the minimum time period in milliseconds
             before VIF re-enters low power mode after exiting due to DPHP RX
            </description_user>
            <units>ms</units>
            <type>uint32</type>
            <default>100</default>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        <module>macrame</module>
        </config_element>
        <config_element name="unifiAPIdleModeEnabled" psid="2497">
            <description_user>Enables AP Idle mode if softAP is active, and there has been no activity for a time
                if unifiMiflessAPBitmap bit 0 is not set SOFTAP beacons will be transmitted with MIF turned on when IDLE otherwise beacon will be transmited in MIFLESS mode</description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiIdleModeLiteEnabled" psid="2526">
            <description_user>DEPRECATED</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiSTAIdleModeEnabled" psid="2493">
            <description_user>Enables STA Idle mode, if single vif station is active and there has been no activity for a time.</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiDualSTAIdleModeEnabled" psid="2490">
            <description_user>Enables Dual STA Idle mode, if dual vif stations are active and both vifs are idle.</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiSTAIdleModeControl" psid="2491">
            <description_user>Control STA idle mode behaviour within firmware with bit flags.
            1 defines enabled, 0 defines disabled.
            bit 0:  STA idle mode with LCD on
            </description_user>
            <range_min>0</range_min><range_max>65535</range_max><default>0x0000</default>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiMacrameDebugStats" psid="2215">
            <description_user>MACRAME debug stats readout key. Use set to write a debug readout, then read the same key to get the actual readout.</description_user>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="false"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiSISOOnSingleNSSActivated" psid="2381">
            <description_user>When activated, avoid MIMO+OMN and connect as SISO.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiARPDetectActivated" psid="2246">
            <description_user>Activate feature support for Enhanced ARP Detect. This is required by Volcano.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiArpOutstandingMax" psid="2590">
            <description_user>Maximum number of outstanding ARP frame transmissions in the firmware.</description_user>
            <type>uint16</type>
            <default>32</default>
            <nature>software</nature><module>host</module>
        </config_element>
       <config_element name="unifiRttCapabilities" psid="5300">
           <description_user>RTT capabilities of the chip. see SC-506960-SW.</description_user>
           <type>octet_string</type>
           <range_min>8</range_min><range_max>8</range_max>
           <default>{ 0x01, 0x01, 0x01, 0x01, 0x00, 0x07, 0x1c, 0x32 }</default>
           <nature>software</nature>
       </config_element>
       <config_element name="unifiFtmMinDeltaFrames" psid="5301">
            <description_user>Default minimum time between consecutive FTM frames in units of 100 us. </description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>255</range_max><default>20</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmPerBurst" psid="5302">
            <description_user>Requested FTM frames per burst. </description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>31</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmBurstDuration" psid="5303">
            <description_user>indicates the duration of a burst instance, values 0, 1, 12-14 are reserved,
                              [2..11], the burst duration is defined as (250 x 2)^(N-2), and 15 means "no preference". </description_user>
            <type>uint16</type>
            <range_min>2</range_min><range_max>11</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmNumOfBurstsExponent" psid="5304">
            <description_user>The number of burst instances is 2^(Number of Bursts Exponent), value 15 means "no preference". </description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>14</range_max><default>0</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmASAPModeActivated" psid="5305">
            <description_user>Activate support for ASAP mode in FTM</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmResponderActivated" psid="5306">
            <description_user>Activate support for FTM Responder</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmDefaultSessionEstablishmentTimeout" psid="5307">
            <description_user>Default timeout for session estabishmant in units of ms. </description_user>
            <type>uint16</type><range_min>10</range_min><range_max>100</range_max>
            <default>50</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmDefaultGapBetweenBursts" psid="5309">
            <description_user>Interval between consecutive Bursts. In units of ms. </description_user>
            <type>uint16</type><range_min>5</range_min><range_max>50</range_max>
            <default>10</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmDefaultTriggerDelay" psid="5310">
            <description_user>Delay to account for differences in time between Initiator and Responder at start of the Burst. In units of ms. </description_user>
            <type>uint16</type><range_min>0</range_min><range_max>100</range_max>
            <default>1</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmDefaultEndBurstDelay" psid="5311">
            <description_user>Delay to account for differences in time between Initiator and Responder at the end of the Burst. In units of ms. </description_user>
            <type>uint16</type><range_min>0</range_min><range_max>100</range_max>
            <default>10</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmRequestValidationEnabled" psid="5312">
            <description_user>Enable Validation for FTM Add Range request RTT_Configs</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmResponseValidationEnabled" psid="5313">
            <description_user>Enable Validation for FTM Response</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmUseResponseParameters" psid="5314">
            <description_user>Use Response burst parameters for burst</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmInitialResponseTimeout" psid="5315">
            <description_user>Default timeout for FtmInitialResponse in units of ms. </description_user>
            <type>uint16</type><range_min>10</range_min><range_max>100</range_max>
            <default>50</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmMacAddressRandomisation" psid="5316">
            <description_user>Enable mac address randomisation for FTM initiator</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtmUseRequestParameters" psid="5321">
            <description_user>Use certain burst params from user while sending FTM req </description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
       <config_element name="unifiFtmMeanAroundCluster" psid="5322">
            <description_user>Whether to get simple mean or mean around cluster</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtm11azI2RLmrFeedback" psid="5323">
            <description_user>I2R LMR Feedback ranging parameter in 11az IFTM request frame</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtm11azSupport" psid="5324">
            <description_user>Whether IEEE 802.11az FTM is supported</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtm11azMinTimeBetweenMeasurements" psid="5325">
            <description_user>This is a field in IEEE 802.11az FTM Ranging Non-TB specific sub element. In units of 100usec</description_user>
            <type>uint32</type>
            <default>3000</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtm11azMaxTimeBetweenMeasurements" psid="5326">
            <description_user>This is a field in IEEE 802.11az FTM Ranging Non-TB specific sub element. In units of 10msec</description_user>
            <type>uint32</type>
            <default>500</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtm11azTerminateSession" psid="5327">
            <description_user>Whether IEEE 802.11az FTM Session has to be terminated or not</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtm11azFormatBwRanging" psid="5328">
            <description_user>802.11az format bw and ranging parameter</description_user>
            <type>uint16</type>
            <default>1</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiFtm11azImmediateR2I" psid="5329">
            <description_user>802.11az Immediate R2I parameter</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANAllowCipherSuiteDowngrade" psid="6076">
            <description_user>PRI-12398: Workaround for Framework not selecting correct Cipher Suite ID.
                              FW would use Cipher Suite ID '1' if peer is using it even if Framework requested ID '2'.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxQueuedFollowups" psid="6077">
            <description_user>Maximum number of NAN Followup instances which can be queued in FW.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>8</range_max><default>4</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxSDATxRetryCount" psid="6078">
            <description_user>Maximum number of reties to send SDA to a peer.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><default>3</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxRangingRetryCount" psid="6159">
            <description_user>Maximum number of retries FW does to perform a ranging (FTM burst sessions) and fails before terminating the ranging session.
                              i.e. value of 4 will result in termination of ranging session after 5 consecutive ranging failure. </description_user>
            <type>uint16</type>
            <range_min>1</range_min><default>4</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANSupportedCipherSuites" psid="6079">
            <description_user>Set of supported cipher suites. NanCipherSuiteType bit field format.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>3</range_max><default>1</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANActivated" psid="6080">
            <description_user>Activate Neighbour Aware Networking (NAN)</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANRangingActivated" psid="6155">
            <description_user>Activate Ranging Support.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANHeActivated" psid="6074">
            <description_user>Enable HE mode for NAN.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANBeaconCapabilities" psid="6081">
            <description_user>The 16-bit field follows the coding of IEEE 802.11 Capability Information.</description_user>
            <type>uint16</type>
            <default>0x0620</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxConcurrentClusters" psid="6082">
            <description_user>Maximum number of concurrent NAN clusters supported.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>1</range_max><default>1</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNanSkipNanChannelsIfNdlExists" psid="6125">
            <description_user>Disable Nan Scan if an NDL exists.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxConcurrentPublishes" psid="6083">
            <description_user>Maximum number of concurrent NAN Publish instances supported.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>8</range_max><default>8</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxConcurrentSubscribes" psid="6084">
            <description_user>Maximum number of concurrent NAN Subscribe instances supported.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>8</range_max><default>8</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxConcurrentRangingAsInitiator" psid="6156">
            <description_user>Maximum number of concurrent NAN Ranging Sessions supported as initiator.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>8</range_max><default>4</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxConcurrentRangingAsResponder" psid="6157">
            <description_user>Maximum number of concurrent NAN Ranging Sessions supported as responder.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>8</range_max><default>4</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxServiceNameLength" psid="6085">
            <description_user>Not used by FW. Maximum Service Name Length.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2048</range_max><default>255</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMaxMatchFilterLength" psid="6086">
            <description_user>Not used by FW. Maximum Match Filter Length.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>255</range_max><default>255</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMaxTotalMatchFilterLength" psid="6087">
            <description_user>Not used by FW. Maximum Total Match Filter Length.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2048</range_max><default>512</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMaxServiceSpecificInfoLength" psid="6088">
            <description_user>Not used by FW. Maximum Service Specific Info Length.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>255</range_max><default>255</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMaxExtendedServiceSpecificInfoLen" psid="6089">
            <description_user>Not used by FW. Maximum Extended Service Specific Info Length.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2048</range_max><default>2048</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMaxSubscribeInterfaceAddresses" psid="6090">
            <description_user>Not used by FW. Maximum number interface addresses in subscribe filter list.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>256</range_max><default>8</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMaxNDIInterfaces" psid="6091">
            <description_user>Not used by FW. Maximum NDI Interfaces. Note: This does not affect number of NDL Vifs supported by FW as they are hard coded.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>8</range_max><default>4</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMaxNDPSessions" psid="6092">
            <description_user>Not used by FW. Maximum NDP Sessions. Note: This does not affect number of NDP sessions supported by FW as they are hard coded.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>16</range_max><default>4</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMaxAppInfoLength" psid="6093">
            <description_user>Not used by FW. Maximum App Info Length.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2048</range_max><default>2048</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMatchExpirationTime" psid="6094">
            <description_user>Time limit in which Mlme will expire a match for discovered service. DW0 interval is 8s and all NAN devices shall be awake in DW0.</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>0</range_min><range_max>2147</range_max><default>8</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANPermittedChannels" psid="6095">
          <description_user>Applicable Primary Channels mask. Defined in a uint64 represented by the octet string.
                            Mapping defined in ChannelisationRules; i.e. Bit 14 maps to channel 36.</description_user>
          <type>octet_string</type>
          <range_min>8</range_min><range_max>8</range_max><default>{ 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00 }</default>
          <nature>software</nature><module>mlme</module>
        </config_element>
       <config_element name="unifiNANDefaultScanPeriod" psid="6096">
            <description_user>The default value of scan period in seconds.</description_user>
            <units>seconds</units>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2147</range_max><default>20</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxChannelSwitchTime" psid="6097">
            <description_user>Maximum Channel Switch Time.</description_user>
            <type>uint16</type>
            <access_rights>read_only</access_rights>
            <default>7000</default>
            <units>microseconds</units>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANMacRandomisationActivated" psid="6098">
            <description_user>Enabling Mac Address Randomisation for NMI address.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="uunifiNANDefaultScheduleTableIndex" psid="0">
            <type>uunifiNANDefaultScheduleTableIndex</type>
            <description_user>NAN Schedule types.</description_user>
        </config_element>
       <config_element name="unifiNANSchedulePreferenceIndex" psid="0">
            <type>integer</type><range_min>1</range_min><range_max>30</range_max>
            <description_user>NAN Schedule Preference.</description_user>
        </config_element>
       <config_element name="unifiNANDefaultSchedule" psid="6099">
            <description_user>Default Schedule to be proposed for NDL. FW will remove impossible / overlapping slots from proposal.
            Values must match with NAN Spec Time BitMap Control field values.
            Octet 0 ~ 1  : Ordered ChannelList[2] from most to least prefered channel, stated as channel number. Zero means not in used.
            Octet 2      : Bit Duration in TUs.
            Octet 3 ~ 4  : Period in TUs.
            Octet 5 ~ 6  : Start Offset in TUs.
            Octet 7 ~ 10 : TimeBitMap[4]
            </description_user>
            <type>octet_string</type>
            <range_min>11</range_min><range_max>11</range_max>
            <table_name>unifiNANDefaultScheduleTable</table_name>
            <default_list>
                <!-- FAW, First Preference:           5G BAND CH149 CH44  16TUs  512TUs     0TUs       All Slots. -->
                <default index1="1" index2="1">             { 0x95, 0x2C, 0x10,  0x00,0x02, 0x00,0x00, 0xFF, 0xFF, 0xFF, 0xFF } </default>

                <!-- FAW, Second Preference:          2G BAND CH6   N/A   16TUs  512TUs     0TUs       All Slots. -->
                <default index1="1" index2="2">             { 0x06, 0x00, 0x10,  0x00,0x02, 0x00,0x00, 0xFF, 0xFF, 0xFF, 0xFF } </default>

                <!-- NDC, First Preference:           5G BAND CH149 CH44  16TUs  512TUs     0TUs       One Slot after 5G DW. WFA Default. -->
                <default index1="2" index2="1">             { 0x95, 0x2C, 0x10,  0x00,0x02, 0x00,0x00, 0x00, 0x02, 0x00, 0x00 } </default>

                <!-- NDC, Second Preference:          2G BAND CH6   N/A   16TUs  512TUs     0TUs       One Slot after 2G DW. WFA Default. -->
                <default index1="2" index2="2">             { 0x06, 0x00, 0x10,  0x00,0x02, 0x00,0x00, 0x02, 0x00, 0x00, 0x00 } </default>

                <!-- Ranging FAW, First Preference:   5G BAND CH149 CH44  16TUs  512TUs     0TUs       Four Slot after 5G DW. -->
                <default index1="4" index2="1">             { 0x95, 0x2C, 0x10,  0x00,0x02, 0x00,0x00, 0x00, 0x1e, 0x00, 0x00 } </default>

                <!-- Ranging FAW, Second Preference:  2G BAND CH6   N/A   16TUs  512TUs     0TUs       Four Slot after 2G DW. -->
                <default index1="4" index2="2">             { 0x06, 0x00, 0x10,  0x00,0x02, 0x00,0x00, 0x1e, 0x00, 0x00, 0x00 } </default>

            </default_list>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANKeepAliveTimeout" psid="6140">
            <description_user>Golden Certification MIB don't delete, change PSID or name. Timeout before terminating in seconds. 0 = Disabled. Capped to greater than 6 seconds. This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>0</range_min><range_max>2147</range_max><default>14</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANKeepAliveTimeoutCheck" psid="6141">
            <description_user>DO NOT SET TO A VALUE HIGHER THAN THE TIMEOUT. How long before keepalive timeout to start polling, in seconds.
            This value is read only once when an interface is added.</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>1</range_min><range_max>100</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANDataPathTrafficTimeout" psid="6142">
            <description_user>Golden Certification MIB don't delete, change PSID or name. Timeout before terminating NDP for no data traffic in seconds. 0 = Disabled.</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>0</range_min><range_max>2147</range_max><default>60</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANDataPathSetupTimeout" psid="6143">
            <description_user>Timeout for a NDP setup.</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>0</range_min><range_max>20</range_max><default>8</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANRangingSetupTimeout" psid="6158">
            <description_user>Timeout for a Ranging setup.</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>0</range_min><range_max>20</range_max><default>8</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANWarmupTimeout" psid="6144">
            <description_user>Test MIB Only. Warmup time which FW doesn't set it's master preference. It's defined as 120s in spec.</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>0</range_min><range_max>2147</range_max><default>120</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
      <config_element name="unifiNanMultiVifSharedSlots" psid="6146">
            <description_user>In multi vif scenarios, e.g. NAN + STA, NAN will share these slots with other VIFs.
            DW and NDC slots are not affected and are not removed due to MultiViF scenarios.
            Octet 0     : Bit Duration in TUs.
            Octet 1 ~ 2 : Period in TUs.
            Octet 3 ~ 4 : Start Offset in TUs.
            Octet 5 ~ 8 : TimeBitMap[4].
            </description_user>
            <type>octet_string</type>
            <range_min>9</range_min><range_max>9</range_max>
            <table_name>unifiNANNMultiVIFSharedSlotsTable</table_name>
            <default_list>
                <!-- NAN CRBs on 2G BAND. -->
                <default index1="1">{ 0x10,  0x00,0x02,  0x00,0x00,  0x00, 0xFF, 0x00, 0xFF }</default>

                <!-- NAN CRBs on 5G BAND. -->
                <default index1="2">{ 0x10,  0x00,0x02,  0x00,0x00,  0xFF, 0x00, 0xFF, 0x00 }</default>

                <!-- NAN CRBs on 2G and 5G BAND. -->
                <default index1="3">{ 0x10,  0x00,0x02,  0x00,0x00,  0x00, 0x00, 0xF8, 0x1F }</default>
            </default_list>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiRoamingInNDLActivated" psid="6147">
            <description_user>When Activated, allow Roaming scan whilst NDL is active.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNanMultiBandNdlPermitted" psid="6148">
            <description_user>Golden Certification MIB don't delete, change PSID or name. When permitted, NDLs can use multi-band schedules.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNanUlwTest" psid="6150">
            <description_user>Deprecated.</description_user>
            <type>octet_string</type><access_rights>not_accessible</access_rights>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNanDiscoveryBeaconConfig" psid="6151">
            <description_user>Enables NAN discovery beacon transmission for NMI vif.
            Setting/clearing bit 0 enables/disabled discovery beacons on 2GHz band.
            Setting/clearing bit 1 enables/disabled discovery beacons on 5GHz band.
            Setting/clearing bit 3 enables/disabled discovery beacons when theres an NDL vif on same band.</description_user>
            <type>uint16</type>
            <default>7</default>
           <function_list>
               <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
           </function_list>
            <nature>software</nature><module>macrame</module>
       </config_element>
       <config_element name="unifiNANForceWidestBandwidth" psid="6152">
            <description_user>When Activated, schedules on NDL VIF with same primary channel will have same bandwidth equal to widest one.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANScanBoRepeatCount" psid="6153">
            <description_user>The repeat count value to be used for blackouts installed for scan on NAN VIFs</description_user>
            <type>uint32</type>
            <default>3</default>
            <nature>software</nature><module>macrame</module>
       </config_element>
      <config_element name="unifiNANBlackoutFAWReductionActivated" psid="6154">
            <description_user>When Activated, Blackouts aligned to FAWs with count == 255 are converted to FAW Reduction.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANTestMasterPreference" psid="6170">
            <description_user>Test MIB for Master Preference value. This overwrites host value, and to take effect this MIB should be set before NAN start(FW reads this MIB on start and config request signals.).</description_user>
            <type>uint16</type><range_min>0</range_min><range_max>255</range_max>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANTestRangingDistance" psid="6160">
            <description_user>Test MIB for Distance which Ranging reports. When this MIB is set, FW doesn't use FTM for ranging anymore.</description_user>
            <type>uint32</type><units>millimeters</units>
            <nature>software</nature><module>mlme</module>
       </config_element>
      <config_element name="unifiNANSDFTransmissionOutsideDWPermitted" psid="6161">
            <description_user>Golden Certification MIB don't delete, change PSID or name. When this MIB is set FW is allowed to send SDF during remote CRB otherwise FW only sends SDF during DW.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANDeviceLinkSetupTimeout" psid="6162">
            <description_user>Timeout for a NDL setup (re-negotiation).</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>0</range_min><range_max>20</range_max><default>8</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANDeviceLinkScheduleUpdateRetryInterval" psid="6163">
            <description_user>Retry interval of NDL renegotiation to fill empty slots. Set to zero for diabling retry.</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>0</range_min><range_max>127</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNanMultiVifDualBandConcurrencyPermitted" psid="6164">
            <description_user>In multi vif scenarios, e.g. NAN + STA, NAN use RSDB, when possible, instead of time sharing with other VIFs.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiNANMaxNAFTxRetryCount" psid="6165">
            <description_user>Maximum number of retries to send NAF(NDP Terminate at the moment.) to a peer.</description_user>
            <type>uint16</type>
            <range_max>254</range_max><default>2</default>
            <nature>software</nature><module>mlme</module>
       </config_element>
       <config_element name="unifiLowPowerRxConfig" psid="6018">
            <description_user>Enables low power radio RX for idle STA and AP VIFs respectively.
            Setting/clearing bit 0 enables/disabled LP RX for (all) STA/Cli VIFs.
            Setting/clearing bit 1 enables/disabled LP RX for AP/GO VIFs.</description_user>
            <type>uint16</type>
            <default>3</default>
           <function_list>
               <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
           </function_list>
            <nature>software</nature><module>macrame</module>
         </config_element>
       <config_element name="unifiStationActivityIdleTime" psid="2512">
            <description_user>Time since last station activity when it can be considered to be idle. Only used in SoftAP mode when determining if all connected stations are idle (not active).</description_user>
            <type>uint32</type>
            <units>milliseconds</units>
            <default>500</default>
            <nature>software</nature><module>macrame</module>
         </config_element>
        <config_element name="unifiApBeaconMaxDrift" psid="2507">
            <description_user>The maximum drift in microseconds we will allow for each beacon sent when we're trying to move it to get a 50% duty cycle between GO and STA in multiple VIF scenario. We'll delay our TX beacon by a maximum of this value until we reach our target TBTT. We have 3 possible cases for this value: a) ap_beacon_max_drift = 0x0000  -  Feature disabled b) ap_beacon_max_drift between 0x0001 and 0xFFFE -  Each time we transmit the beacon we'll move it a little bit forward but never more than this. (Not implemented yet) c) ap_beacon_max_drift = 0xFFFF - Move the beacon to the desired position in one shot.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>0xFFFF</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiMacBeaconTimeout" psid="2270">
            <description_user>The maximum time in microseconds we want to stall TX data when expecting a beacon at EBRT time as a station.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>128</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRSSIMaxAveragingPeriod" psid="2210">
            <description_user>Limits the period over which the value of unifiRSSI is averaged. If no more than unifiRSSIMinReceivedFrames frames have been received in the period, then the value of unifiRSSI is reset to the value of the next measurement and the rolling average is restarted. This ensures that the value is timely (although possibly poorly averaged) when little data is being received.</description_user>
            <units>TU</units>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_min>1</range_min>
            <default>3000</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRSSIMinReceivedFrames" psid="2211">
            <description_user>See the description of unifiRSSIMaxAveragingPeriod for how the combination of attributes is used.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_min>1</range_min>
            <default>2</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiCSROnlyEIFSDuration" psid="2362">
            <description_user>Specifies time that is used for EIFS. A value of 0 causes the build in value to be used.</description_user>
            <access_rights>read_only</access_rights>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>12</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiForceChannelBW" psid="2370">
            <description_user>Test only: Force channel bandwidth to specified value.
            This can also be used to allow emulator/silicon back to back connection to communicate at bandwidth other than default (20 MHz)
            Setting it to 0 uses the default bandwidth as selected by firmware. The change will be applied at next radio state change opportunity
            channel_bw_20_mhz   = 20,
            channel_bw_40_mhz   = 40,
            channel_bw_80_mhz   = 80
            </description_user>
            <type>uint16</type>
            <default>0</default>
           <function_list>
               <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
           </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
       <config_element name="unifiIqDebugEnabled" psid="2375">
            <description_user>Send IQ capture data to host for IQ debug</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
       </config_element>
       <config_element name="unifiFtmOneCrossTwoSupport" psid="2376">
            <description_user>Enable FTM 1*2 support</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
       </config_element>
        <config_element name="unifiSwToHwQueueStats" psid="2250">
            <description_user>The timing statistics of packets being queued between SW-HW</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiQueueStatsIdTable</table_name>
            <function_list>
                <function type="get" function_name="mibqueuestatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiHostToSwQueueStats" psid="2251">
            <description_user>The timing statistics of packets being queued between HOST-SW</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiQueueStatsIdTable</table_name>
            <function_list>
                <function type="get" function_name="mibqueuestatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiQueueStatsEnable" psid="2252">
            <description_user>Enables recording timing statistics of packets being queued between HOST-SW-HW</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>dplane</module>
        </config_element>
        <config_element name="unifiRateStatsRate" psid="2212">
            <description_user>The rate corresponding to the current table entry. The value is rounded to the nearest number of units where necessary. Most rates do not require rounding, but when short guard interval is in effect the rates are no longer multiples of the base unit. Note that there may be two occurrences of the value 130: the first corresponds to MCS index 7, and the second, if present, to MCS index 6 with short guard interval.</description_user>
            <description_internal>Get the rate for rate statistics table entry index.</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <units>500 kbps</units>
            <table_name>unifiRateStatsTable</table_name>
            <function type="get" function_name="mibuint16get"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRateStatsRxSuccessCount" psid="2206">
            <description_user>The number of successful receptions of complete management and data frames at the rate indexed by unifiRateStatsIndex.This number will wrap to zero after the range is exceeded.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="get" function_name="mibratestatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRateStatsTxSuccessCount" psid="2207">
            <description_user>The number of successful (acknowledged) unicast transmissions of complete data or management frames the rate indexed by unifiRateStatsIndex. This number will wrap to zero after the range is exceeded.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="get" function_name="mibratestatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
         <config_element name="unifiRateStatsRTSErrorCount" psid="2358">
            <description_user>The number of successive RTS failures.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="get" function_name="mibratestatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
       <config_element name="unifiTxDataConfirm" psid="2253">
            <description_user>Allows to request on a per access class basis that an MA_UNITDATA.confirm be generated after each packet transfer. The default value is applied for all ACs.</description_user>
            <type>boolean</type>
            <default>false</default>
            <table_name>unifiAcTxConfirmTable</table_name>
            <function_list>
                <function type="set" function_name="mibtxdatacfmset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxDataRate" psid="2208">
            <description_user>The bit rate currently in use for transmissions of unicast data frames; On an infrastructure BSS, this is the data rate used in communicating with the associated access point, if there is none, an error is returned</description_user>
            <description_internal>Request is made per-VIF. Rate is read from station records</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibtxdatarateget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiLastBssTxDataRate" psid="2213">
            <description_user>Last BSS Tx DataRate. See unifiTxDataRate description.</description_user>
            <type>uint32</type>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRSSITypeToUse" psid="2193">
            <description_user>Define which type of RSSI averaging will be used internally, e.g. for determining roaming thresholds.
            If the value is set to 0, then the average RSSI for all frame types will be used.
            If the value is set to 1, then the maximum RSSI between the beacon-only and non-beacon-only averages will be used.
            If the value is set to 2, then the average RSSI for only beacon frame types will be used.
            Only used for VIFs of type STA.
            Also see unifiRSSIAvgType.</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiNumRSSIAverageSample" psid="2194">
            <description_user>The amount of samples used for calculating the average RSSI value. WARNING: Changing this value after system start-up will have no effect.</description_user>
            <type>uint16</type>
            <default>16</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRxDataRate" psid="2196">
            <description_user>The bit rate of the last received frame on this VIF.</description_user>
            <description_internal>Request is made per-VIF and only support for STA VIF type.</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibrxdatarateget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiNoAckActivationCount" psid="2240">
            <description_user>The number of frames that are discarded due to HW No-ack activated during test.
            This number will wrap to zero after the range is exceeded.</description_user>
            <description_internal>Number of discarded frames when HW No-ack is activated during test.</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRxFcsErrorCount" psid="2241">
            <description_user>The number of received frames that are discarded due to bad FCS (CRC).
            This number will wrap to zero after the range is exceeded.</description_user>
            <description_internal>Number of discarded received frames due to bad FCS (CRC) as detected by the HW. </description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiReadReg" psid="8051">
            <description_user>Read value from a register and return it.</description_user>
            <description_internal> Register access function. </description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiReadRegTable</table_name>
            <function_list>
                <function type="get" function_name="mibreadreg"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiReadHardwareCounter" psid="5087">
            <description_user>Read a value from a hardware packet counter for a specific radio_id and return it. The firmware will convert the radio_id to the associated mac_instance.</description_user>
            <description_internal> Hardware counter access function. </description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiReadHardwareCounterTable</table_name>
            <function_list>
                <function type="get" function_name="mibreadhardwarecounter"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSwTxTimeout" psid="2204">
            <description_user>Maximum time in seconds for a frame to be queued in firmware, ready to be sent, but not yet actually pumped to hardware.</description_user>
            <type>uint16</type>
            <units>second</units>
            <default>5</default>
            <nature>software</nature><module>dplane</module>
        </config_element>
        <config_element name="unifiSNR" psid="2202">
            <description_user>Provides a running average of the Signal to Noise Ratio (dB) for packets received by UniFi&apos;s radio.</description_user>
               <access_rights>read_only</access_rights>
            <type>int16</type>
            <function type="get" function_name="mibgetsnr" is_for_vif="true"></function>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiLastBssSNR" psid="2203">
            <description_user>Last BSS SNR. See unifiSNR description.</description_user>
            <type>int16</type>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiSNRExtraOffsetCCK" psid="2209">
            <description_user>This offset is added to SNR values received at 802.11b data rates. This accounts for differences in the RF pathway between 802.11b and 802.11g demodulators. The offset applies to values of unifiSNR as well as SNR values in scan indications. Not used in 5GHz mode.</description_user>
            <units>dB</units>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <default>8</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiScanMaxProbeTransmitLifetime" psid="2531">
            <description_user>In TU. If non-zero, used during active scans as the maximum lifetime for probe requests. It is the elapsed time after the initial transmission at which further attempts to transmit the probe are terminated.</description_user>
            <type>uint32</type>
            <range_min>1</range_min><default>64</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiProbeResponseLifetime" psid="2533"><!-- ap -->
            <description_user>Lifetime of proberesponse frame in unit of ms.</description_user>
            <type>uint16</type>
            <default>100</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiProbeResponseLifetimeP2P" psid="2600">
            <description_user>Lifetime of proberesponse frame in unit of ms for P2P.</description_user>
            <type>uint16</type>
            <default>500</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiProbeResponseMaxRetry" psid="2534">
            <description_user>Number of retries of probe response frame.</description_user>
            <type>uint16</type>
            <default>5</default>
            <range_max>255</range_max>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiApDeauthTransmitLifetime" psid="2387">
            <description_user>Lifetime of Deauth frame sent from AP in unit of ms.</description_user>
            <type>uint16</type>
            <default>2500</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiPowerSaveTransitionPacketThreshold" psid="2532">
            <description_user>Golden Certification MIB don't delete, change PSID or name:If VIF has this many packets queued/transmitted/received in last unifiFastPowerSaveTransitionPeriod then firmware may decide to come out of aggressive power save mode. This is applicable to STA/CLI and AP/GO VIFs. Note that this is only a guideline. Firmware internal factors may override this MIB. Also see unifiTrafficAnalysisPeriod and unifiAggressivePowerSaveTransitionPeriod.</description_user>
            <type>uint16</type>
            <default>10</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiTrafficAnalysisPeriod" psid="2535">
            <description_user>Period in TUs over which firmware counts number of packet transmitted/queued/received to make decisions like coming out of aggressive power save mode or setting up BlockAck. This is applicable to STA/CLI and AP/GO VIFs. Note that this is only a guideline. Firmware internal factors may override this MIB. Also see unifiPowerSaveTransitionPacketThreshold, unifiAggressivePowerSaveTransitionPeriod and unifiTrafficThresholdToSetupBA.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <default>80</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiAggressivePowerSaveTransitionPeriod" psid="2536">
            <description_user>Defines how many unifiTrafficAnalysisPeriod firmware should wait in which VIF had received/transmitted/queued less than unifiPowerSaveTransitionPacketThreshold packets - before entering aggressive power save mode (when not in aggressive power save mode) This is applicable to STA/CLI and AP/GO VIFs. Note that this is only a guideline. Firmware internal factors may override this MIB. Also see unifiPowerSaveTransitionPacketThreshold and unifiTrafficAnalysisPeriod.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <default>5</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiActiveTimeAfterMoreBit" psid="2537">
            <description_user>Golden Certification MIB don't delete, change PSID or name: After seeing the "more" bit set in a message from the AP, the STA will goto active mode for this duration of time. After this time, traffic information is evaluated to determine whether the STA should stay active or go to powersave. Setting this value to 0 means that the described functionality is disabled.</description_user>
            <type>uint32</type>
            <units>TU</units>
            <default>30</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiMAXVifScheduleDuration" psid="2541">
            <description_user>Default time for which a non-scan VIF can be scheduled. Applies to multiVIF scenario. Internal firmware logic or BSS state (e.g. NOA) may cut short the schedule.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <default>50</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
       <config_element name="unifiVifLongIntervalTime" psid="2542">
            <description_user>When the scheduler expects a VIF to schedule for time longer than this parameter (specified in TUs), then the VIF may come out of powersave. Only valid for STA VIFs.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <default>60</default>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiUartConfigure" psid="2110">
            <description_user>UART configuration using the values of the other unifiUart* attributes. The value supplied for this attribute is ignored.</description_user>
            <is_internal>true</is_internal>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiUartPios" psid="2111">
            <description_user>Specification of which PIOs should be connected to the UART. Currently defined values are: 1 - UART not used; all PIOs are available for other uses. 2 - Data transmit and receive connected to PIO[12] and PIO[14] respectively. No hardware handshaking lines. 3 - Data and handshaking lines connected to PIO[12:15].</description_user>
            <is_internal>true</is_internal>
            <type>unifiUartPios</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiWatchdogTimeout" psid="2152">
            <description_user>Maximum time the background may be busy or locked out for. If this time is exceeded, UniFi will reset. If this key is set to 65535 then the watchdog will be disabled.</description_user>
            <units>ms</units>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_min>1</range_min><default>1500</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLoggerEnabled" psid="2320">
            <description_user>Enable reporting of the following events for Android logging:
                - firmware connectivity events
                - fate of management frames sent by the host through the MLME SAP
                It can take the following values:
                - 0: reporting for non mandetory triggers disabled. EAPOL, security, btm frames and roam triggers are reported.
                - 1: partial reporting is enabled. Beacons frames will not be reported.
                - 2: full reporting is enabled. Beacons frames are included.</description_user>
            <access_rights>read_only</access_rights>
            <type>unifiWifiLogger</type>
            <default>1</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiLoggerMaxDelayedEvents" psid="6124">
            <description_user>Maximum number of events to keep when host is suspended.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiLoggerNANTrafficReportPeriod" psid="6149">
            <description_user>Period in ms for sending NAN traffic updates to the host.</description_user>
            <units>ms</units>
            <type>uint32</type>
            <default>1000</default>
            <nature>software</nature><module>macrame</module>
         </config_element>
         <config_element name="unifiRameUpdateMibs" psid="2547">
            <description_user>Deprecated</description_user>
            <type>boolean</type>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiForceShortSlotTime" psid="5080">
            <description_user>If set to true, forces FW to use short slot times for all VIFs.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRSSI" psid="2200">
            <description_user>Running average of the Received Signal Strength Indication (RSSI) for packets received by UniFi&apos;s radio. The value should only be treated as an indication of the signal strength; it is not an accurate measurement. The result is only meaningful if the unifiRxExternalGain attribute is set to the correct calibration value. If UniFi is part of a BSS, only frames originating from devices in the BSS are reported (so far as this can be determined). The average is reset when UniFi joins or starts a BSS or is reset.</description_user>
            <description_internal>Use the lack of a (default) value to signal to rame that the RSSI hasn&apos;t been calibrated, and thus calls to mibgetrssi() will return FALSE. </description_internal>
            <units>dBm</units>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <function type="get" function_name="mibgetrssi" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLastBssRSSI" psid="2201">
            <description_user>Last BSS RSSI. See unifiRSSI description.</description_user>
            <type>int16</type>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBeaconCu" psid="2296">
            <description_user>Provides a channel utilization of peer, value 255=100% channel utilization.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiPeerBandwidth" psid="2094">
            <description_user>The bandwidth used with peer station prior it disconnects</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiCurrentPeerNss" psid="2095">
            <description_user>The number of spatial streams used with peer station prior it disconnects: BIG DATA</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiPeerTxDataRate" psid="2096">
            <description_user>The tx rate that was used for transmissions prior disconnection</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiPeerRSSI" psid="2097">
            <description_user>The recorded RSSI from peer station prior it disconnects</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiPeerRxRetryCount" psid="2198">
            <description_user>The number of retry packets from peer station</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiPeerRxMulticastCount" psid="2199">
            <description_user>The number of multicast and broadcast packets received from peer station</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiAgcThresholds" psid="5095">
            <description_user>AGC Thresholds settings</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiAgcThresholdsTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxSettings" psid="5031">
            <description_user>Hardware specific transmitter settings</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxSettingsTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxGainSettings" psid="5032">
            <description_user>Hardware specific transmitter gain settings</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxGainSettingsTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxPowerDetectorResponse" psid="5055">
            <description_user>Hardware specific transmitter detector response settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxPowerDetectorResponseTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxPowerDetectorResponseFrequency" psid="5128">
            <description_user>Hardware specific transmitter detector response settings per frequency.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxPowerDetectorResponseTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxDetectorTemperatureCompensation" psid="5056">
            <description_user>Deprecated</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxDetectorTemperatureCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxDetectorFrequencyCompensation" psid="5057">
            <description_user>Deprecated</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxDetectorFrequencyCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxOpenLoopTemperatureCompensation" psid="5058">
            <description_user>Hardware specific transmitter open-loop temperature compensation settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxOpenLoopTemperatureCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxOpenLoopFrequencyCompensation" psid="5059">
            <description_user>Hardware specific transmitter open-loop frequency compensation settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxOpenLoopFrequencyCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxPaGainDpdTemperatureCompensation" psid="5066">
            <description_user>Deprecated</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiTxPaGainDpdTemperatureCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxPaGainDpdFrequencyCompensation" psid="5067">
            <description_user>Deprecated</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiTxPaGainDpdFrequencyCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxFtrimSettings" psid="2372">
            <description_user>Hardware specific transmitter frequency compensation settings</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiTxFtrimSettingsTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxGainStepSettings" psid="5081">
            <description_user>Hardware specific transmitter gain step settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiTxGainStepSettingsTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxOfdmSelect" psid="5060">
            <description_user>Hardware specific transmitter OFDM selection settings</description_user>
            <type>octet_string</type>
            <range_min>4</range_min><range_max>12</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxDigGain" psid="5061">
            <description_user>Specify gain specific modulation power optimisation.</description_user>
            <type>octet_string</type>
            <range_min>8</range_min><range_max>46</range_max>
            <table_name>unifiTxDigGainTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiStaticDpdGain" psid="5097">
            <description_user>Specify modulation specifc gains for static dpd optimisation.</description_user>
            <type>octet_string</type>
            <range_min>11</range_min><range_max>27</range_max>
            <table_name>unifiStaticDpdGainTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiChipTemperature" psid="5062">
            <description_user>Read the chip temperature as seen by WLAN radio firmware.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <units>celsius</units>
            <function type="get" function_name="mibint16get"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiChipTemperatureDirect" psid="5138">
            <description_user>Read the chip current temperature by sending a reading request to the RF chip and waits for value to return.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <units>celsius</units>
            <function type="get" function_name="mibint16get"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="UnifiBatteryVoltage" psid="5063">
            <description_user>Battery voltage</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <units>millivolt</units>
            <function type="get" function_name="mibuint16get"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiLoadDpdLut" psid="2255">
            <description_user>Write a static DPD LUT to the FW, read DPD LUT from hardware</description_user>
            <description_internal>the set function writes static dpd lut values from hcf into firmware, the get function reads from hardware</description_internal>
            <type>octet_string</type>
            <range_min>147</range_min><range_max>147</range_max>
            <function_list>
                <function type="get" function_name="mibbmsgget"></function>
                <function type="set" function_name="mibricedpdlutset"></function>
            </function_list>
            <table_name>unifiLoadDpdLutTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiOverrideDpdLut" psid="2258">
            <description_user>Write a DPD LUT directly to the HW</description_user>
            <description_internal>Used for Matlab characterisation by writing a previously calculated and (possibly) smoothed LUT to the HW. The primary need for this is because writing the LUT directly in Matlab is very slow and hence impractical for any characterisation work. </description_internal>
            <type>octet_string</type>
            <range_min>147</range_min><range_max>147</range_max>
            <function_list>
                <function type="set" function_name="mibricedpdlutset"></function>
            </function_list>
            <table_name>unifiLoadDpdLutTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiLoadDpdLutPerRadio" psid="2280">
            <description_user>Write a static DPD LUT to the FW, read DPD LUT from hardware (for devices that support multiple radios)</description_user>
            <description_internal>the set function writes static dpd lut values from hcf into firmware, the get function reads from hardware</description_internal>
            <type>octet_string</type>
            <range_min>147</range_min><range_max>147</range_max>
            <function_list>
                <function type="get" function_name="mibbmsgget"></function>
                <function type="set" function_name="mibricedpdlutset"></function>
            </function_list>
            <table_name>unifiLoadDpdLutTablePerRadio</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiOverrideDpdLutPerRadio" psid="2281">
            <description_user>Write a DPD LUT directly to the HW (for devices that support multiple radios)</description_user>
            <description_internal>Used for Matlab characterisation by writing a previously calculated and (possibly) smoothed LUT to the HW. The primary need for this is because writing the LUT directly in Matlab is very slow and hence impractical for any characterisation work. </description_internal>
            <type>octet_string</type>
            <range_min>147</range_min><range_max>147</range_max>
            <function_list>
                <function type="set" function_name="mibricedpdlutset"></function>
            </function_list>
            <table_name>unifiLoadDpdLutTablePerRadio</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiLoadMemDpdLut" psid="2361">
            <description_user>Write a static DPD LUT to the FW, read DPD LUT from hardware for devices that support Memory DPD</description_user>
            <description_internal>the set function writes static dpd lut values from hcf into firmware, the get function reads from hardware</description_internal>
            <type>octet_string</type>
            <range_min>250</range_min>
            <range_max>350</range_max>
            <function_list>
                <function type="get" function_name="mibbmsgget"></function>
                <function type="set" function_name="mibricedpdlutset"></function>
            </function_list>
            <table_name>unifiLoadDpdLutTablePerRadio</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiOverrideMemDpdLut" psid="2363">
            <description_user>Write a DPD LUT directly to the HW for devices that support Memory DPD</description_user>
            <description_internal>Used for Matlab characterisation by writing a previously calculated and (possibly) smoothed LUT to the HW. The primary need for this is because writing the LUT directly in Matlab is very slow and hence impractical for any characterisation work. </description_internal>
            <type>octet_string</type>
            <range_min>140</range_min>
            <range_max>350</range_max>
            <function_list>
                <function type="set" function_name="mibricedpdlutset"></function>
            </function_list>
            <table_name>unifiLoadDpdLutTablePerRadio</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDpdPredistortGains" psid="2257">
            <description_user>DPD pre-distort gains.  Takes a range of frequencies, where
                    f_min &lt;= f_channel &lt; f_max.
                    The format is [freq_min_msb, freq_min_lsb, freq_max_msb, freq_max_lsb,
                    DPD policy bitmap, bandwidth_bitmap, power_trim_enable,
                    OFDM0_gain, OFDM1_gain, CCK_gain, TR_gain,
                    CCK PSAT gain, OFDM PSAT gain].</description_user>
            <type>octet_string</type>
            <range_min>14</range_min><range_max>14</range_max>
            <table_name>unifiDpdPredistortGainsTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDpdMasterSwitch" psid="2256">
            <description_user>Enables Digital Pre-Distortion</description_user>
            <description_internal>Bitmask of DPD features to enable for testing, requires d01_d01 or later. </description_internal>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false"></function>
                <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiCCAMasterSwitch" psid="5102">
            <description_user>Enables CCA</description_user>
            <description_internal>Bitmask of CCA features to enable. Note MIB is not live, value will get loaded to hardware after radio is switched on. The least significant word is for config of ETSI regulatory domain 80Mhz p0 and p4, the other word is for all other configurations.</description_internal>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibhalmacmacconfiggenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmacconfiggenericset" is_for_vif="false"></function>
            </function_list>
            <default>0x00540050</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxSyncCCACfg" psid="5103">
            <description_user>Configures CCA per 20 MHz sub-band.</description_user>
            <description_internal>Configure to take into account the CCA of each 20M subband for the primary channel.</description_internal>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmodemgenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmodemgenericset" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiFleximacCcaEdEnable" psid="5116">
            <description_user>Enable/disable CCA-ED in Fleximac.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmodemgenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmodemgenericset" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiMacCCABusyTime" psid="5104">
            <description_user>Counts the time CCA indicates busy</description_user>
            <description_internal>This register counts the time CCA indicates busy (for pri20/sec20 and sec40), in units of 16 us.</description_internal>
            <table_name>unifiMacBusyTimeTable</table_name>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmacconfiggenericget" is_for_vif="true"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiMacSecChanClearTime" psid="5105">
            <description_user>Configures PIFS</description_user>
            <description_internal>Secondary Channel must be free for this amount of time (50ns unit) before it is declared non-busy for starting a Txop. Related to PIFS.</description_internal>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmacconfiggenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmacconfiggenericset" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDpdDebug" psid="5106">
            <description_user>Debug MIBs for DPD</description_user>
            <table_name>unifiDpdDebugTable</table_name>
            <default_list>
                <default index1="1"> 170 </default> <!-- LUT_QUALITY_THRESHOLD = 0xaa = 170 -->
                <default index1="2"> 3   </default> <!-- LUT_RETRIM_LIMIT = 3 -->
            </default_list>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false"></function>
            </function_list>
            <type>uint32</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCCACSThresh" psid="5101">
            <description_user>Configures CCA CS thresholds.</description_user>
            <description_internal>Configures CCA CS (packet sync) thresholds. Indexed by siso/mimo.</description_internal>
            <table_name>unifiCCACSThreshTable</table_name>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmodemgenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmodemgenericset" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiCoexDebugOverrideBt" psid="2425">
            <description_user>Enables overriding of all BT activities by WLAN. </description_user>
            <description_internal>When this MIB is set then no macrame blackouts are registered for any BT activities
                 and also WLAN trumps all BT activities at the HW CDL arbitration level. This MIB should be enabled only for debugging
                 purposes. This MIB will only have an effect when its either compiled into the FW image or is configured at WLAN boot via
                 an hcf file.
                 </description_internal>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiTxPowerTrimConfig" psid="5072">
            <description_user>Hardware specific transmitter power trim settings</description_user>
            <description_internal>Configuration settings for the TX power trim.
                The format depends on the RFIC.
                  S630 (18 octets):
                [rf_chip_bitmap_lso, rf_chip_bitmap_mso
                radio_id, band,
                psat_dig_gain,
                psat_bb_stg1_rfb, psat_bb_stg2_rin, psat_bb_stg2_rfb, psat_bb_stg2_rin_teg,
                psat_mix_slice, psat_drv_slice, psat_drv_gain_sel, psat_iptat_main, psat_iref_cas, psat_iref_main,
                psat_epa_gain_idx,
                psat_power_ref_mso, psat_power_ref_lso]
                  S62x (26 octets):
                [rf_chip_bitmap_lso, rf_chip_bitmap_mso
                radio_id, band,
                pcal_ofdm0_to_cck_mso, pcal_ofdm0_to_cck_lso,
                pcal_ofdm0_to_ofdm1_mso, pcal_ofdm0_to_ofdm1_lso,
                pcal_20_to_80_mso, pcal_20_to_80_lso,
                pcal_20_to_40_mso, pcal_20_to_40_lso,
                psat_dig_gain, psat_v2i_gain, psat_mix_gain, psat_drv_gain, psat_pa_gain,
                psat_power_ref_mso, psat_power_ref_lso,
                psat_drv_bias, psat_pa_bias,
                spare, spare, spare, spare].</description_internal>
            <type>octet_string</type>
            <range_min>18</range_min><range_max>26</range_max>
            <table_name>unifiTxPowerTrimConfigTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxPowerTrimCommonConfig" psid="2374">
            <description_user>Common transmitter power trim settings</description_user>
            <description_internal>Common configuration settings for the TX power trim</description_internal>
            <type>octet_string</type>
            <range_min>3</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiClearRadioTrimCache" psid="5088">
            <description_user>Clears the radio trim cache. The parameter is ignored.</description_user>
            <description_internal>Invalidates all entries in the trim cache. </description_internal>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiNannyTemperatureReportDelta" psid="5109">
            <description_user>A temperature difference, in degrees Celsius, above which the nanny process will generate a temperature update debug word </description_user>
            <description_internal>This delta will be used in NANNY</description_internal>
            <type>uint16</type>
            <default>4</default>
            <nature>software</nature>
            <function_list>
              <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false"></function>
            </function_list>
        </config_element>
        <config_element name="unifiNannyTemperatureReportInterval" psid="5110">
            <description_user>A report interval in milliseconds where temperature is checked</description_user>
            <description_internal>This interval will be used in NANNY</description_internal>
            <type>uint16</type>
            <default>200</default>
            <nature>software</nature>
            <function_list>
              <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false"></function>
            </function_list>
        </config_element>
        <config_element name="unifiLteMailbox" psid="2430">
            <description_user>Set modem status to simulate lte status updates. See SC-505775-SP for API description.
             Defined as array of uint32 represented by the octet string
             FOR TEST PURPOSES ONLY
            </description_user>
            <description_internal>This MIB simulates writing to mailbox for LTE signalling. Used for test purposes only.
                First byte of the octet string maps to LSB of the first uint32 in the array.
                First 4 octets maps to 32 bits in register-0 of SC-505775-SP section 3.
                And so on.
                The size of this MIB allows for the 9 32bit registers to be mimicked and, optionally, the 10th word (the checksum).
                The checksum is not validated by wlan fw, so it is not necessary for WLAN cats/unit tests to populate this field.
                And example for Band40 is
                { 0x05, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
            </description_internal>
            <type>octet_string</type>
            <range_min>36</range_min><range_max>40</range_max>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteMwsSignal" psid="2431">
            <description_user>Set modem status to simulate lte status updates. See SC-505775-SP for API description. See unifiLteSignalsBitField for enum bitmap.
            FOR TEST PURPOSES ONLY
            </description_user>
            <description_internal> Bitmap of LTE signals.
            </description_internal>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibltemwssignal" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteEnableChannelAvoidance" psid="2432">
            <description_user>Enables channel avoidance scheme for LTE Coex </description_user>
            <description_internal>When this MIB is enabled the channel avoidance scheme is enabled in softAP/GO
            mode to mitigate interference from LTE Modem.
                 </description_internal>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteEnablePowerBackoff" psid="2433">
            <description_user>Enables power backoff scheme for LTE Coex </description_user>
            <description_internal>When this MIB is enabled the power backoff scheme is enabled in STA/AP/CLI/GO
            mode to mitigate interference from LTE Modem.
                 </description_internal>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteEnableTimeDomain" psid="2434">
            <description_user>Enables TDD scheme for LTE Coex </description_user>
            <description_internal>When this MIB is enabled the time domain scheme is enabled in STA/AP/CLI/GO
            mode to mitigate interference from LTE Modem.
                 </description_internal>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteEnableLteCoex" psid="2435">
            <description_user>Enables LTE Coex support </description_user>
            <description_internal>When this MIB is enabled WLAN registers for LTE signals with common code.
                 </description_internal>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand40PowerBackoffChannels" psid="2436">
            <description_user>Defines channels to which power backoff shall be applied when LTE operating on Band40.</description_user>
            <description_internal>This MIB defines the range of WLAN channels to which power backoff shall be applied when LTE operating
            on Band40 when LTE Power Back feature is enabled. The first octet is the first channel in a range of channels. The second octet
            is the upper channel of this range. EG { 0x01, 0x07 } describes the range from channel 1 to channel 7.</description_internal>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>2</range_max><default>{ 0x01, 0x02 }</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand40PowerBackoffRsrpLow" psid="2437">
            <description_user>WLAN Power Reduction shall be applied when RSRP of LTE operating on band 40 falls below this level</description_user>
            <type>int16</type>
            <units>dBm</units>
            <default>-100</default>
            <range_min>-140</range_min><range_max>-77</range_max>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand40PowerBackoffRsrpHigh" psid="2438">
            <description_user>WLAN Power Reduction shall be restored when RSRP of LTE operating on band 40 climbs above this level</description_user>
            <type>int16</type>
            <units>dBm</units>
            <default>-95</default>
            <range_min>-140</range_min><range_max>-77</range_max>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand40PowerBackoffRsrpAveragingAlpha" psid="2439">
            <description_user>Weighting applied when calculaing the average RSRP when considering Power Back Off
            Specifies the percentage weighting (alpha) to give to the most recent value when calculating the moving average.
            ma_new = alpha * new_sample + (1-alpha) * ma_old.</description_user>
            <units>percentage</units>
            <type>uint16</type>
            <default>50</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteSetChannel" psid="2440">
            <description_user>Enables LTE Coex support </description_user>
            <description_internal>When this MIB is enabled WLAN registers for LTE signals with common code.
                 </description_internal>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibltesetchannel" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiBlackoutSimulation" psid="2470">
            <description_user>For Test Purposes, create specific blackouts:
                0 = Turn off all test blackouts.
                1 = A2DP One shot blackout sent periodically
                2 = ESCO Blackout
                Needs STA vif, and it must be connected before mib is changed.
                Clearing value should stop test.
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiBlackoutForceTxOnly" psid="2471">
            <description_user>Setting individual bits will make any blackout requests of that type into TX only blackouts.
                Only applicable to coex blackouts.
                0x00 = Do not force any blackouts to become TX only
                0x01 = Force coex single shot blackouts to become TX only
                0x02 = Force coex non-uspbo periodic blackouts to become TX only
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiPsNullTxExtraLifeTime" psid="2183">
            <description_user>Period in TUs. Indicates the additional extra lifetime for ps null(pm bit = 1). In most cases, the NULL should be returned back in time</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <default>5</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiUseCtsForLeakyAp" psid="2455">
            <description_user>Enable or disable the use of CTS-to-self frames by STA connected to AP that leaks frames after PM=1.
            If enabled, coex will also modify BT behaviour to ensure BT opportunities are short enough to be protected by CTS-To-Self.
            See also unifiEnableCoexLowLatency. </description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiLeakyApConfig" psid="2454">
            <description_user>
            Bitmap to configure leaky AP behavior
            bit 0: Set dont send NULL with CTS2SELF when bad AP is detected
            bit 1: Force all connected STA VIFs to behave as if they are connected to a bad AP
            bit 2: Enable Retraining when AP is classified as GOOD
            bit 3: Enable Good Behavour threshold adjustment when throughput is high
            </description_user>
            <type>uint16</type>
            <default>0x0009</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiEnableCoexLowLatency" psid="2401">
            <description_user>Enable requests to BT to modify behaviour to support WLAN Low Latency operation.
            If enabled, WLAN shall request Low Latency supporting operation from BT if Low Latency is requested by the host
            or if CTS-To-Self is being used to protect Leaky APs
            See also unifiUseCtsForLeakyAp.</description_user>
            <type>boolean</type>
            <function_list>
                <function type="set" function_name="mibsetenablecoexlowlatency" is_for_vif="false"></function>
            </function_list>
            <default>true</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiCoexApiLoopbackTest" psid="2402">
            <description_user>Perform a loopback test over the WLAN-BT interface.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibcoexapiloopbacktest" is_for_vif="false"></function>
            </function_list>
            <default>0</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiUspboRxAggregateBufferSize" psid="2456">
            <description_user>Control BA RX agreements and Restrict the Rx BA Buffer size during non-LTE USPBO.
            0 = Rx BA agreements will be suppressed during USPBO.
            1 - 256 = Rx BA agreements will be preserved during USPBO, buffer size limited to this value.
            0xffff = Rx BA agreements will be preserved during USPBO, buffer size limited to default value
            </description_user>
            <type>uint16</type>
            <default>4</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiLteSetPowerBackoff" psid="2441">
            <description_user>MIB to force WLAN Power Backoff for LTE COEX testing purposes</description_user>
            <description_internal>Setting this MIB shall cause power backoff to be asserted in MLME.on the specified channel_mask
            Note the power reduction applied is specified by unifiLteCoexPowerReduction as per normal operation</description_internal>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibltesetpowerbackoff" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteSetTddDebugMode" psid="2442">
            <description_user>MIB to enable LTE TDD COEX simulation for testing purposes</description_user>
            <description_internal>Setting this MIB shall cause coex module to simulate periodic MWS_FRAME_SYNC signalling in various modes,
            for the purpose of testing LTE/WLAN Time Domain Coex functionality. The debug module shall also use CDL hardware to interfere
            with WLAN Tx and Rx operation to approximate impact of LTE on WLAN.
            Mode (0): disabled.
            Mode (1): no drift in frame sync simulated </description_internal>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibltesetltetdddebugmode" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand40AvoidChannels" psid="2443">
            <description_user>MIB to define WLAN channels to avoid when LTE Band 40 in use.</description_user>
            <description_internal>This MIB defines the range of WLAN channels to avoid when LTE Band 40 is in use and LTE Channel Avoidance
            feature is enabled. The first octet is the first channel in a range of channels to avoid. The second octet is the upper channel
            of this range. EG { 0x01, 0x05 } describes the range from channel 1 to channel 5.
            Setting this MIB to { 0x00, 0x00 } will disable channel avoidance for LTE Band 40.</description_internal>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>2</range_max><default>{ 0x01, 0x06 }</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand41AvoidChannels" psid="2444">
            <description_user>MIB to define WLAN channels to avoid when LTE Band 41 in use.</description_user>
            <description_internal>This MIB defines the range of WLAN channels to avoid when LTE Band 41 is in use and LTE Channel Avoidance
            feature is enabled. The first octet is the first channel in a range of channels to avoid. The second octet is the upper channel
            of this range. EG { 0x04, 0x0E } describes the range from channel 4 to channel 14.
            Setting this MIB to { 0x00, 0x00 } will disable channel avoidance for LTE Band 41.</description_internal>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>2</range_max><default>{ 0x04, 0x0E }</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand7AvoidChannels" psid="2445">
            <description_user>MIB to define WLAN channels to avoid when LTE Band 7 in use.</description_user>
            <description_internal>This MIB defines the range of WLAN channels to avoid when LTE Band 7 is in use and LTE Channel Avoidance
            feature is enabled. The first octet is the first channel in a range of channels to avoid. The second octet is the upper channel
            of this range. EG { 0x09, 0x0D } describes the range from channel 9 to channel 14.
            Setting this MIB to { 0x00, 0x00 } will disable channel avoidance for LTE Band 7.</description_internal>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>2</range_max><default>{ 0x09, 0x0E }</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand40FreqThreshold" psid="2446">
            <description_user>MIB describing the Band 40 Frequency Threshold</description_user>
            <description_internal> The frequency in Band 40 above which TDD coexistence shall be applied, In MHz.
            Shall be set according to the low-side cut-off frequency of the ISM filter. </description_internal>
            <type>uint16</type>
            <range_min>2350</range_min><range_max>2400</range_max><default>2380</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand41FreqThreshold" psid="2447">
            <description_user>MIB describing the Band 41 Frequency Threshold</description_user>
            <description_internal> The frequency in Band 41 below which TDD coexistence shall be applied, In MHz.
            Shall be set according to the high-side cut-off frequency of the ISM filter. </description_internal>
            <type>uint16</type>
            <range_min>2496</range_min><range_max>2546</range_max><default>2500</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand79FreqThreshold" psid="2448">
            <description_user>MIB describing the Band 79 Frequency Threshold</description_user>
            <description_internal> The frequency in Band 79 above which TDD coexistence shall be applied, In MHz.
            Shall be set according to the low-side cut-off frequency of the 5GHz WLAN filter. </description_internal>
            <type>uint16</type>
            <range_min>4950</range_min><range_max>5000</range_max><default>5000</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand41PowerBackoffChannels" psid="2449">
            <description_user>Defines channels to which power backoff shall be applied when LTE operating on Band41.</description_user>
            <description_internal>This MIB defines the range of WLAN channels to which power backoff shall be applied when LTE operating
            on Band41 when LTE Power Back feature is enabled. The first octet is the first channel in a range of channels. The second octet
            is the upper channel of this range. EG { 0x01, 0x07 } describes the range from channel 1 to channel 7.</description_internal>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>2</range_max><default>{ 0x0c, 0x0d }</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand4041AvoidChannelsFallback" psid="2450">
            <description_user>Fallback allowed channels when LTE/NR Band (N)40 and (N)41 in use simultaneously.</description_user>
            <description_internal>Contiguous range of channels; starting channel number followed by end channel number. </description_internal>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>2</range_max><default>{ 0x06, 0x06 }</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand79Enable" psid="2451">
            <description_user>Enable cellular coexistence schemes for band (n)79</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
            <module>coex</module>
        </config_element>
        <config_element name="unifiLteBand79PowerBackoffChannels" psid="2452">
            <description_user>Defines channels to which power backoff shall be applied when NR operating on Band n79.</description_user>
            <description_internal>This MIB defines the range of WLAN channels to which power backoff shall be applied when NR operating
                on Band 79 when LTE Power Back feature is enabled. The first octet is the first channel in a range of channels. The second octet
                is the upper channel of this range. EG { 0x01, 0x07 } describes the range from channel 1 to channel 7.</description_internal>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>2</range_max><default>{ 0x00, 0x00 }</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiLteBand79AvoidChannels" psid="2453">
            <description_user>MIB to define WLAN channels to avoid when NR Band 79 in use.</description_user>
            <description_internal>This MIB defines the range of WLAN channels to avoid when NR Band 79 is in use and LTE Channel Avoidance
                feature is enabled. The first octet is the first channel in a range of channels to avoid. The second octet is the upper channel
                of this range. EG { 0x09, 0x0D } describes the range from channel 9 to channel 14.
            </description_internal>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>2</range_max><default>{ 0x00, 0x00 }</default>
            <nature>software</nature><module>coex</module>
        </config_element>
        <config_element name="unifiRxAgcControl" psid="4079">
            <description_user>Override the AGC by adjusting the Rx minimum and maximum gains of each stage.
                Set requests write the values to a static structure in firmware.
                The saved values are written to hardware, and also used to configure the AGC
                whenever halradio_agc_setup() is called.
                Get requests read the values from the static structure in firmware.
                AGC enables are not altered.  Fixed gain may be tested by setting the
                minimums and maximums to the same value.

                Version 1 (for rfchip jar - not supported on this firmware branch)
            octet  0  -  Version number = 1.
                Gain values.  Default in brackets.
            octet  1  -  5G LNA minimum gain (0).
            octet  2  -  5G LNA maximum gain (4).
            octet  3  -  2G LNA minimum gain (0).
            octet  4  -  2G LNA maximum gain (5).
            octet  5  -  Mixer minimum gain (0).
            octet  6  -  Mixer maximum gain (2).
            octet  7  -  ABB minimum gain (8).
            octet  8  -  ABB maximum gain (27).
            octet  9  -  Digital minimum gain (depends on bb chip).
            octet 10  -  Digital maximum gain (depends on bb chip).


                Version 2 (for rfchip hopper, lark)
            octet  0  -  Version number = 2.
                Gain values.  Default in brackets.
            octet  1  -  5G FE minimum gain (hopper 1, lark 0).
            octet  2  -  5G FE maximum gain (8).
            octet  3  -  2G FE minimum gain (0).
            octet  4  -  2G FE maximum gain (8).
            octet  5  -  ABB minimum gain (1).
            octet  6  -  ABB maximum gain (9).
            octet  7  -  Digital minimum gain (depends on bb chip).
            octet  8  -  Digital maximum gain (depends on bb chip).


                Version 3 (for rfchip leopard with 6G compatible and ax capable BBIC)
            octet  0  -  Version number = 3.
                Gain values.  Default in brackets.
            octet  1  -  6G FE minimum gain (0).
            octet  2  -  6G FE maximum gain (8).
            octet  3  -  5G FE minimum gain (0).
            octet  4  -  5G FE maximum gain (8).
            octet  5  -  2G FE minimum gain (0).
            octet  6  -  2G FE maximum gain (8).
            octet  7  -  ABB minimum gain (1).
            octet  8  -  ABB maximum gain (9).
            octet  9  -  Digital minimum gain (depends on bb chip).
            octet 10  -  Digital maximum gain (depends on bb chip).</description_user>
            <type>octet_string</type>
            <range_min>9</range_min><range_max>11</range_max>
            <function_list>
                <function type="get" function_name="mibbmsgget" is_for_vif="false"></function>
                <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxAntennaConnectionLossFrequency" psid="5033">
            <description_user>The corresponding set of frequency values for TxAntennaConnectionLossTable</description_user>
            <type>uint16</type>
            <range_min>3940</range_min><range_max>12000</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiTxAntennaConnectionLossTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxAntennaConnectionLoss" psid="5034">
            <description_user>The set of Antenna Connection Loss value (qdB), which is used for TPO/EIRP conversion</description_user>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiTxAntennaConnectionLossTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxAntennaMaxGainFrequency" psid="5035">
            <description_user>The corresponding set of frequency values for TxAntennaMaxGain</description_user>
            <type>uint16</type>
            <range_min>3940</range_min><range_max>12000</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiTxAntennaMaxGainTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxAntennaMaxGain" psid="5036">
            <description_user>The set of Antenna Max Gain value (qdB), which is used for TPO/EIRP conversion</description_user>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiTxAntennaMaxGainTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxExternalGainFrequency" psid="5037">
            <description_user>The set of RSSI offset value</description_user>
            <type>uint16</type>
            <range_min>3940</range_min><range_max>12000</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiRxExternalGainTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxExternalGain" psid="5038">
            <description_user>The table giving frequency-dependent RSSI offset value</description_user>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiRxExternalGainTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiReportNarrowbandRssi" psid="5132">
            <description_user>Enable reporting of Fleximac narrowband RSSI to higher layers.</description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiMediumPowerModeEnabled" psid="5137">
            <description_user>Enable Medium Power mode to set DIV3/256QAM reduced power LO modes</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxRssiNbHwGain" psid="5120">
            <description_user>Narrowband RSSI gain values for some combination of radio, band and bandwidth.</description_user>
            <type>octet_string</type>
            <range_min>26</range_min><range_max>26</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiRxRssiNbHwGainTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxRssiNbFmOffset" psid="5121">
            <description_user>Narrowband RSSI gain offset values for some combination of radio, band and bandwidth.</description_user>
            <type>octet_string</type>
            <range_min>26</range_min><range_max>26</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiRxRssiNbFmOffsetTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxRssiBandCompensation" psid="5135">
            <description_user>RSSI band flatness compensation for combinations of radio, band and bandwidth.</description_user>
            <type>octet_string</type>
            <range_min>24</range_min><range_max>81</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiRxRssiBandCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiEnableFrequencyTracking" psid="5136">
            <description_user>Allow RadioFW to tune the PLL frequency to that of the BSS.</description_user>
            <type>boolean</type>
            <default>true</default>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxRssiAdjustments" psid="5115">
            <description_user>
                    Provides platform dependent rssi adjustments. Octet string (length 4), each octet
                    represents a signed 8 bit value in units of quarter dB.
                      octet[0] = always_adjust (applied unconditionally in all cases)
                      octet[1] = low_power_adjust (applied in low_power mode only)
                      octet[2] = ext_lna_on_adjust (applied only if we have a FEM and the external LNA is enabled)
                      octet[3] = ext_lna_off_adjust (applied only if we have a FEM and the external LNA is disabled)
            </description_user>
            <type>octet_string</type>
            <range_min>4</range_min><range_max>4</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiRxRssiAdjustmentsTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDisableLNABypass" psid="5118">
            <description_user>
            Prevents the use of the LNA bypass. Can be set at any time, but takes effect the next time the radio is
            turned on from off.
            Set a bit to 1 to disable the LNA bypass in that configuration.
            B0      2.4G     Radio 0
            B1      2.4G     Radio 1
            B2      2.4G     Radio 2
            B3      2.4G     Radio 3
            B4        5G     Radio 0
            B5        5G     Radio 1
            B6        5G     Radio 2
            B7        5G     Radio 3
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioFecConfig" psid="5127">
            <description_user>Configuration for Front End Control</description_user>
            <type>octet_string</type>
            <range_min>7</range_min><range_max>7</range_max>
            <table_name>unifiRadioFecConfigTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioMiscPerBand" psid="5129">
            <description_user>Miscellaneous per band radio configuration values
                                octet[0] = band
                                octet[1] = mix_lo_bias
                                octet[2] = vco_ictrl
                                octet[3] = vco_ictrl_lp
                                octet[4] = vco_ictrl_dpd
                                octet[5] = vco_ictrl_dpd_lp
                                octets[15:6] = reserved
            </description_user>
            <type>octet_string</type>
            <range_min>16</range_min><range_max>16</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiRadioMiscPerBandTable</table_name>
            <nature>hardware</nature>
        </config_element>
		<config_element name="unifiSableContainerSizeConfiguration" psid="5000">
            <description_user>Sable Container Size Configuration
			Sable WLAN reserved memory size is determined by the host. Sable TLV containers are allocated from this WLAN reserved area.
			Each container has different requirement on its size. For example, frame logging or IQ capture would be very greedy, requesting
			most of available memroy. But some just need fixed size, but not large. To cope with such requirements, each container size is
			configured with the following rules:
              1. To allocate a certain percentage of the whole wlan reserved area, put the percentage in hex format. For example,  0x28(=40)
                 means 40% of reserved area will be assigned. The number 0x64(=100) is specially treated that all remaining space will be
                 assigned after all the other containers are first served.
              2. To request (n * 2048) bytes, put (100 + n) value in hex format. For example, 0x96 (= 150) means 50 * 2048 = 102400 bytes.
			Here are the list of containers:
              - octet 0 - WTLV_CONTAINER_ID_DPLANE_FRAME_LOG
			</description_user>
            <type>octet_string</type><range_min>3</range_min><range_max>3</range_max><default> {0x64} </default>
            <nature>software</nature>
       </config_element>
		<config_element name="unifiSableFrameLogMode" psid="5001">
            <description_user>Sable Frame Logging mode
             - 0: disable frame logging
             - 1: enable frame logging always, regardless of CPU resource state
             - 2: dynamically enable frame logging base on CPU resource. If CPU too busy, frame logging is disabled.
                  Logging is enabled when CPU resource gets recovered.
			</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2</range_max>
            <default>2</default>
            <function_list>
                <function type="set" function_name="mibsableframelogmodeset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
       </config_element>
		<config_element name="unifiSableFrameLogCpuThresPercent" psid="5002">
            <description_user>CPU target in percent. When CPU usage is higher than this target,
            frame logging will be disabled by firmware. Firmware will check if CPU resource is recovered
            every 1 second. If CPU resource recovered, then frame logging is re-enabled.
			</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max>
            <default>95</default>
            <function_list>
                <function type="set" function_name="mibsableframelogcputhresset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
       </config_element>
		<config_element name="unifiSableFrameLogCpuOverheadPercent" psid="5003">
            <description_user>Expected CPU overhead introduced by frame logging.
			</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max>
            <default>3</default>
            <function_list>
                <function type="set" function_name="mibsableframelogcpuoverheadset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiDplaneSableTxDelayThresMs" psid="5004">
            <description_user>TX Delay threshold in msec to take action.
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiDplaneSableTxDelayAction" psid="5005">
            <description_user>Action to take when TX delay is larger than unifiDplaneSableTxDelayThresMs.
	              0: do nothing
	              1: print delay in mxlog
	              2: trigger a panic
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiCurrentTxpowerLevel" psid="6020">
            <description_user>Maximum air power for the VIF. Values are expressed in 0.25 dBm units.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <default>0</default>
            <function type="get" function_name="mibint16get" is_for_vif="true"></function>
            <units>qdBm</units>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDebugInstantDelivery" psid="6069">
            <description_user>Instant delivery control of the debug messages when set to true. Note: will not allow the host to suspend when set to True.</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibdebuginstantdeliveryset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDebugEnable" psid="6071">
            <description_user>Debug to host state. Debug is either is sent to the host or it isn't.</description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mibdebugenableset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDebugModuleControl" psid="5029">
            <description_user>Debug Module levels for all modules.
            Module debug level is used to filter debug messages sent to the host.
            Only 6 levels of debug per module are available:
            a.  -1     No debug created.
            b.  0      Debug if compiled in. Should not cause Buffer Full in normal testing.
            c.  1 - 3  Levels to allow sensible setting of the .hcf file while running specific tests or debugging
            d.  4      Debug will harm normal execution due to excessive levels or processing time required. Only used in emergency debugging.
            Additional control for FSM transition and FSM signals logging is provided.

            Debug module level and 2 boolean flags are encoded within a uint16:
            Function  |  Is sending FSM signals  |  Is sending FSM transitions  |  Is sending FSM Timers   |  Reserved  |  Module level (signed int)
            ----------+--------------------------+------------------------------+--------------------------+------------+---------------------------
            Bits      |         15               |              14              |            13            |   12 - 8   |           7 - 0

            Note: 0x00FF disables any debug for a module
                  0xE004 enables all debug for a module</description_user>
            <type>uint16</type>
            <table_name>unifiDebugConfigTable</table_name>
            <default_list>
                <!-- To find the module see unifiDebugModulesIndex  -->
                <!-- Please don't add comments that hint what the index is. -->
                <default index1="1">  0xE003 </default>
                <default index1="2">  0xE000 </default>
                <default index1="3">  0x00FF </default>
                <default index1="4">  0xE004 </default>
                <default index1="5">  0x00FF </default>
                <default index1="6">  0xE004 </default>
                <default index1="7">  0xE004 </default>
                <default index1="8">  0xE004 </default>
                <default index1="9">  0x00FF </default>
                <default index1="10"> 0x00FF </default>
                <default index1="11"> 0x0001 </default>
                <default index1="12"> 0x00FF </default>
                <default index1="13"> 0x00FF </default>
                <default index1="14"> 0x4000 </default> <!-- MODULE_IDS_MACRAME_SCHDL -->
                <default index1="15"> 0x00FF </default>
                <default index1="16"> 0x00FF </default>
                <default index1="17"> 0x0001 </default> <!-- MODULE_IDS_MACRAME_API_DPLANE -->
                <default index1="18"> 0xE004 </default>
                <default index1="19"> 0xE004 </default>
                <default index1="20"> 0xE000 </default>
                <default index1="21"> 0xE002 </default>
                <default index1="22"> 0xE002 </default>
                <default index1="23"> 0x0000 </default>
                <default index1="24"> 0xE004 </default>
                <default index1="25"> 0x0001 </default>
                <default index1="26"> 0x00FF </default>
                <default index1="27"> 0x00FF </default>
                <default index1="28"> 0xE004 </default>
                <default index1="29"> 0x0001 </default> <!-- MODULE_IDS_COEX -->
                <default index1="30"> 0x0001 </default> <!-- MODULE_IDS_MACRAME_PS -->
                <default index1="31"> 0xE000 </default> <!-- MODULE_IDS_MACRAME_BLACKOUT -->
                <default index1="32"> 0x00FF </default>
                <default index1="33"> 0x00FF </default>
                <default index1="34"> 0xE002 </default>
                <default index1="35"> 0xE001 </default>
                <default index1="36"> 0x0000 </default> <!-- MODULE_IDS_MACRAME_BEACON -->
                <default index1="37"> 0xE003 </default> <!-- MODULE_IDS_MACRAME_VIF -->
                <default index1="38"> 0x00FF </default> <!-- MODULE_IDS_MACRAME_OXYGEN -->
                <default index1="39"> 0x0004 </default> <!-- MODULE_IDS_MACRAME_CALIBRATION -->
                <default index1="40"> 0x00FF </default> <!-- MODULE_IDS_MACRAME -->
                <default index1="41"> 0x0000 </default> <!-- MODULE_IDS_MACRAME_TX -->
                <default index1="42"> 0x0001 </default> <!-- MODULE_IDS_MACRAME_API_COEX -->
                <default index1="43"> 0xE004 </default>
                <default index1="44"> 0xE004 </default> <!-- MODULE_IDS_MACRAME_RADIO -->
                <default index1="45"> 0xE000 </default>
                <default index1="46"> 0x00FF </default> <!-- MODULE_IDS_MACRAME_FILTER -->
                <default index1="47"> 0x0000 </default>
                <default index1="48"> 0x0000 </default>
                <default index1="49"> 0x0000 </default>
                <default index1="50"> 0x0000 </default> <!-- MODULE_IDS_MACRAME_API_MLME -->
                <default index1="51"> 0xE004 </default> <!-- MODULE_IDS_MACRAME_IDLE_AP -->
                <default index1="52"> 0x0004 </default>
                <default index1="53"> 0xE002 </default>
                <default index1="54"> 0xE004 </default>
                <default index1="55"> 0x0004 </default>
                <default index1="56"> 0x0004 </default>
                <default index1="57"> 0x0000 </default> <!-- MODULE_IDS_MACRAME_STATION -->
                <default index1="58"> 0x0000 </default>
                <default index1="59"> 0x0000 </default>
                <default index1="60"> 0x0000 </default>
                <default index1="61"> 0x0000 </default>
                <default index1="62"> 0xE001 </default>
                <default index1="63"> 0x00FF </default>
                <default index1="64"> 0x0001 </default>
                <default index1="65"> 0x00FF </default>
                <default index1="66"> 0xE004 </default>
                <default index1="67"> 0xE00F </default>
                <default index1="68"> 0x0004 </default>
                <default index1="69"> 0xE004 </default>
                <default index1="70"> 0xE004 </default>
                <default index1="71"> 0x00FF </default>
                <default index1="72"> 0xE004 </default>
                <default index1="73"> 0x0004 </default>
                <default index1="74"> 0xE002 </default>
                <default index1="75"> 0xE002 </default>
                <default index1="76"> 0x0000 </default> <!-- MODULE_IDS_MACRAME_IDLE_STA -->
                <default index1="77"> 0xE004 </default> <!-- MODULE_IDS_DEBUG -->
                <default index1="78"> 0xE004 </default>
                <default index1="79"> 0xE002 </default>
                <default index1="80"> 0xE004 </default>
                <default index1="81"> 0x0001 </default> <!-- MODULE_IDS_WPALC -->
                <default index1="82"> 0x0000 </default>
                <default index1="83"> 0x0000 </default>
                <default index1="84"> 0x0002 </default> <!-- MODULE_IDS_COEX_FLEXIMAC -->
                <default index1="85"> 0x00FF </default> <!-- MODULE_IDS_SFSM -->
                <default index1="86"> 0x0000 </default> <!-- MODULE_IDS_MACRAME_MIFLESS_AP -->
            </default_list>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiFaultEnable" psid="5027">
            <description_user> Send Fault to host state. </description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mibfaultenableset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSubSystemsIndex" psid="0">
            <type>integer</type>
            <description_user>Subsystems index</description_user>
        </config_element>
        <config_element name="unifiModuleMemoryManagerFieldIndexEnum" psid="0">
            <type>integer</type>
            <description_user>Module memory manager configuration (priority and size)</description_user>
        </config_element>
        <config_element name="unifiFaultSubSystemControl" psid="5028">
            <description_user>Fault levels for WLAN SubSystems.
            Fault level is used to filter faults sent to the host.
            4 levels of faults per subsystem are available (FAILURE_LEVEL_T):
            a.  0     ERROR
            b.  1     WARNING
            c.  2     INFO_1
            d.  3     INFO_2

            Modifying Fault Levels at run time:
            1. Set the fault level for the subsystems in unifiFaultConfigTable
            2. Set unifiFaultEnable

            NOTE: If fault level of a subsystem is configured to ERROR, all the faults within that subsystem configured to ERROR will only be issued to host,
                  faults with WARNING, INFO_1 and INFO_2 level will be converted to debug message

                  If fault level of a subsystem is configured to WARNING, all the faults within that subsystem configured to ERROR and WARNING will be issued to host,
                  faults with INFO_1 and INFO_2 level will be converted to debug message
            </description_user>
            <type>uint16</type>
            <table_name>unifiFaultConfigTable</table_name>
            <default_list>
                <!-- To find the SubSystems Index see unifiSubSystemsIndex  -->
                <default index1="1">  0x0001 </default>
                <default index1="2">  0x0001 </default>
                <default index1="3">  0x0001 </default>
                <default index1="4">  0x0001 </default>
                <default index1="5">  0x0001 </default>
                <default index1="6">  0x0001 </default>
                <default index1="7">  0x0001 </default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPanicSubSystemControl" psid="5026">
            <description_user>PANIC levels for WLAN SubSystems.
            Panic level is used to filter Panic sent to the host.
            4 levels of Panic per subsystem are available (FAILURE_LEVEL_T):
            a.  0     FATAL - Always reported to host
            b.  1     ERROR
            c.  2     WARNING
            d.  3     DEBUG

            NOTE: If Panic level of a subsystem is configured to FATAL, all the Panics within that subsystem configured to FATAL will be effective,
                  panics with ERROR, WARNING and Debug level will be converted to faults.

                  If Panic level of a subsystem is configured to WARNING, all the panics within that subsystem configured to FATAL, ERROR and WARNING will be issued to host,
                  panics with Debug level will be converted to faults.
            </description_user>
            <type>uint16</type>
            <table_name>unifiPanicConfigTable</table_name>
            <default_list>
                <!-- To find the SubSystems Index see unifiSubSystemsIndex  -->
                <default index1="1">  0x0001 </default>
                <default index1="2">  0x0001 </default>
                <default index1="3">  0x0001 </default>
                <default index1="4">  0x0000 </default>
                <default index1="5">  0x0003 </default>
                <default index1="6">  0x0001 </default>
                <default index1="7">  0x0001 </default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <!-- unifiTxOOBConstraintTable Transmit out-of-band regulatory constraint table -->
        <config_element name="unifiTxOOBConstraints" psid="5064">
        <description_user>OOB constraints table.
        | octects | description                                                                                                                                                                                                                                                                                                                                                                                                                                           |
        |---------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        |       0 | DPD applicability bitmask: 0 = no DPD, 1 = dynamic DPD, 2 = static DPD, 3 = applies to both static and dynamic DPD                                                                                                                                                                                                                                                                                                                                    |
        |     1-2 | Bitmask indicating which regulatory domains this rule applies to FCC=bit0, ETSI=bit1, JAPAN=bit2                                                                                                                                                                                                                                                                                                                                                      |
        |     3-4 | Bitmask indicating which band edges this rule applies to RICE_BAND_EDGE_ISM_24G_LOWER = bit 0, RICE_BAND_EDGE_ISM_24G_UPPER = bit 1, RICE_BAND_EDGE_U_NII_1_LOWER = bit 2, RICE_BAND_EDGE_U_NII_1_UPPER = bit 3, RICE_BAND_EDGE_U_NII_2_LOWER = bit 4, RICE_BAND_EDGE_U_NII_2_UPPER = bit 5, RICE_BAND_EDGE_U_NII_2E_LOWER = bit 6, RICE_BAND_EDGE_U_NII_2E_UPPER = bit 7, RICE_BAND_EDGE_U_NII_3_LOWER = bit 8, RICE_BAND_EDGE_U_NII_3_UPPER = bit 9 |
        |       5 | Bitmask indicating which modulation types this rule applies to (LSB/b0=DSSS/CCK, b1= OFDM0 modulation group, b2= OFDM1 modulation group)                                                                                                                                                                                                                                                                                                              |
        |       6 | Bitmask indicating which channel bandwidths this rule applies to (LSB/b0=20MHz, b1=40MHz, b2=80MHz)                                                                                                                                                                                                                                                                                                                                                   |
        |       7 | Minimum distance to nearest band edge in 500 kHz units for which this constraint becomes is applicable.                                                                                                                                                                                                                                                                                                                                               |
        |       8 | Maximum power (EIRP) for this particular constraint - specified in units of quarter dBm.                                                                                                                                                                                                                                                                                                                                                              |
        |    9-32 | Spectral shaping configuration to be used for this particular constraint. The value is specific to the radio hardware and should only be altered under advice from the IC supplier.                                                                                                                                                                                                                                                                   |
        |    33-56| Tx DPD Spectral shaping configuration to be used for this particular constraint. The value is specific to the radio hardware and should only be altered under advice from the IC supplier.                                                                                                                                                                                                                                                                   |
        |</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxOOBConstraintTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <!-- end of unifiTxOOBConstraintTable -->
        <!-- unifiRegDomVersion Regulatory domain version. -->
        <config_element name="unifiRegDomVersion" psid="8019">
            <description_user>Regulatory domain version encoded into 2 bytes, major version as MSB and minor version as LSB</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <nature>software</nature>

            <default>0x0108</default>
        </config_element>
        <config_element name="unifiRegulatoryParameters" psid="8011">
            <description_user>Deprecated.</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>3</range_min><range_max>73</range_max>
            <table_name>unifiRegulatoryTable</table_name>
            <default_list>

    <default index1="1">{0x30,0x30,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x99,0x09,0xB2,0x09,0x14,0x14,0x01,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="2">{0x58,0x58,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="3">{0x41,0x44,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0x50,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="4">{0x41,0x45,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="5">{0x41,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="6">{0x41,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="7">{0x41,0x49,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="8">{0x41,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="9">{0x41,0x4D,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="10">{0x41,0x4E,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="11">{0x41,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="12">{0x41,0x51,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="13">{0x41,0x52,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0xD6,0x15,0x50,0x18,0x02,
             0x12,0x16,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="14">{0x41,0x53,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="15">{0x41,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="16">{0x41,0x55,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x17,0x12,
             0x5E,0x15,0xE0,0x15,0x50,0x1E,0x02,
             0x12,0x16,0x62,0x16,0x50,0x1E,0x02,
             0x5D,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="17">{0x41,0x57,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x5D,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="18">{0x41,0x58,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="19">{0x41,0x5A,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x12,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x12,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="20">{0x42,0x41,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="21">{0x42,0x42,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="22">{0x42,0x44,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="23">{0x42,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="24">{0x42,0x46,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="25">{0x42,0x47,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x5D,0x16,0xF3,0x16,0x50,0x0E,0x00}</default>
    <default index1="26">{0x42,0x48,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="27">{0x42,0x49,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="28">{0x42,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="29">{0x42,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="30">{0x42,0x4D,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="31">{0x42,0x4E,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="32">{0x42,0x4F,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x1E,0x12,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x10}</default>
    <default index1="33">{0x42,0x52,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="34">{0x42,0x53,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="35">{0x42,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="36">{0x42,0x56,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="37">{0x42,0x57,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="38">{0x42,0x59,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x12,0x16,0x4E,0x16,0x28,0x1B,0x02}</default>
    <default index1="39">{0x42,0x5A,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="40">{0x43,0x41,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0xE0,0x15,0x50,0x18,0x02,
             0x12,0x16,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="41">{0x43,0x43,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="42">{0x43,0x44,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="43">{0x43,0x46,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="44">{0x43,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="45">{0x43,0x48,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="46">{0x43,0x49,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="47">{0x43,0x4B,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="48">{0x43,0x4C,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="49">{0x43,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="50">{0x43,0x4E,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x12,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="51">{0x43,0x4F,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="52">{0x43,0x52,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="53">{0x43,0x55,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="54">{0x43,0x56,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="55">{0x43,0x58,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0xD6,0x15,0x50,0x1B,0x02,
             0x12,0x16,0x62,0x16,0x50,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="56">{0x43,0x59,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="57">{0x43,0x5A,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x5D,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="58">{0x44,0x45,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x5D,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="59">{0x44,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="60">{0x44,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="61">{0x44,0x4D,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="62">{0x44,0x4F,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="63">{0x44,0x5A,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xE6,0x14,0x50,0x17,0x02,
             0x5E,0x15,0x26,0x16,0xA0,0x1E,0x02}</default>
    <default index1="64">{0x45,0x43,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="65">{0x45,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="66">{0x45,0x47,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02}</default>
    <default index1="67">{0x45,0x48,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02}</default>
    <default index1="68">{0x45,0x52,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="69">{0x45,0x53,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x5D,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="70">{0x45,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="71">{0x46,0x49,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="72">{0x46,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="73">{0x46,0x4B,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="74">{0x46,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="75">{0x46,0x4D,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="76">{0x46,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="77">{0x46,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="78">{0x47,0x41,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="79">{0x47,0x42,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="80">{0x47,0x44,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="81">{0x47,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x12,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="82">{0x47,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="83">{0x47,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="84">{0x47,0x48,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="85">{0x47,0x49,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="86">{0x47,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="87">{0x47,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="88">{0x47,0x4E,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="89">{0x47,0x50,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="90">{0x47,0x51,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="91">{0x47,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="92">{0x47,0x53,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="93">{0x47,0x54,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="94">{0x47,0x55,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="95">{0x47,0x57,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="96">{0x47,0x59,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="97">{0x48,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="98">{0x48,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="99">{0x48,0x4E,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="100">{0x48,0x52,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x5D,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="101">{0x48,0x54,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="102">{0x48,0x55,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="103">{0x49,0x44,0x03,
             0x62,0x09,0xB2,0x09,0x14,0x14,0x00,
             0x1E,0x14,0xE6,0x14,0x50,0x17,0x10,
             0x5D,0x16,0xC1,0x16,0x50,0x17,0x10}</default>
    <default index1="104">{0x49,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="105">{0x49,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x17,0x12,
             0x72,0x15,0x62,0x16,0x50,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x17,0x01}</default>
    <default index1="106">{0x49,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="107">{0x49,0x4E,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="108">{0x49,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="109">{0x49,0x51,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="110">{0x49,0x52,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="111">{0x49,0x53,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="112">{0x49,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="113">{0x4A,0x45,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="114">{0x4A,0x4D,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="115">{0x4A,0x4F,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x17,0x00}</default>
    <default index1="116">{0x4A,0x50,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0xAA,0x09,0xBE,0x09,0x14,0x14,0x04,
             0x2E,0x13,0x7E,0x13,0x28,0x17,0x00,
             0xA6,0x13,0xE2,0x13,0x28,0x17,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02}</default>
    <default index1="117">{0x4B,0x45,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x17,0x00}</default>
    <default index1="118">{0x4B,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="119">{0x4B,0x48,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1B,0x00}</default>
    <default index1="120">{0x4B,0x49,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="121">{0x4B,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="122">{0x4B,0x4E,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="123">{0x4B,0x50,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="124">{0x4B,0x52,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x5E,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x5D,0x16,0xDA,0x16,0x50,0x1E,0x00}</default>
    <default index1="125">{0x4B,0x57,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="126">{0x4B,0x59,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="127">{0x4B,0x5A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="128">{0x4C,0x41,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="129">{0x4C,0x42,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="130">{0x4C,0x43,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="131">{0x4C,0x49,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="132">{0x4C,0x4B,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="133">{0x4C,0x52,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="134">{0x4C,0x53,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="135">{0x4C,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="136">{0x4C,0x55,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="137">{0x4C,0x56,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="138">{0x4C,0x59,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="139">{0x4D,0x41,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12}</default>
    <default index1="140">{0x4D,0x43,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="141">{0x4D,0x44,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="142">{0x4D,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="143">{0x4D,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="144">{0x4D,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="145">{0x4D,0x48,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="146">{0x4D,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="147">{0x4D,0x4C,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="148">{0x4D,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x4E,0x16,0x50,0x1E,0x02}</default>
    <default index1="149">{0x4D,0x4E,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="150">{0x4D,0x4F,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x17,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="151">{0x4D,0x50,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="152">{0x4D,0x51,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="153">{0x4D,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="154">{0x4D,0x53,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="155">{0x4D,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="156">{0x4D,0x55,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="157">{0x4D,0x56,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5D,0x16,0xDA,0x16,0x50,0x14,0x00}</default>
    <default index1="158">{0x4D,0x57,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="159">{0x4D,0x58,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0xD6,0x15,0x50,0x18,0x02,
             0x12,0x16,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="160">{0x4D,0x59,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x12,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x18,0x00}</default>
    <default index1="161">{0x4D,0x5A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="162">{0x4E,0x41,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="163">{0x4E,0x43,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="164">{0x4E,0x45,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="165">{0x4E,0x46,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="166">{0x4E,0x47,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="167">{0x4E,0x49,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="168">{0x4E,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="169">{0x4E,0x4F,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="170">{0x4E,0x50,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x67,0x16,0xB7,0x16,0x50,0x14,0x00}</default>
    <default index1="171">{0x4E,0x52,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="172">{0x4E,0x55,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="173">{0x4E,0x5A,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="174">{0x4F,0x4D,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="175">{0x50,0x41,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x5E,0x15,0x62,0x16,0xA0,0x1E,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="176">{0x50,0x45,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="177">{0x50,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="178">{0x50,0x47,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="179">{0x50,0x48,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="180">{0x50,0x4B,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="181">{0x50,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="182">{0x50,0x4D,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="183">{0x50,0x4E,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="184">{0x50,0x52,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="185">{0x50,0x53,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="186">{0x50,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="187">{0x50,0x57,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="188">{0x50,0x59,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="189">{0x51,0x41,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x62,0x16,0xA0,0x1B,0x12,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x12}</default>
    <default index1="190">{0x52,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="191">{0x52,0x4F,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="192">{0x52,0x53,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0xE6,0x14,0x50,0x17,0x10,
             0x5E,0x15,0x5D,0x16,0x50,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="193">{0x52,0x55,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="194">{0x52,0x57,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="195">{0x53,0x41,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xB7,0x16,0x50,0x0E,0x00}</default>
    <default index1="196">{0x53,0x42,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="197">{0x53,0x43,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="198">{0x53,0x44,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="199">{0x53,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="200">{0x53,0x47,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="201">{0x53,0x48,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="202">{0x53,0x49,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="203">{0x53,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="204">{0x53,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="205">{0x53,0x4C,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="206">{0x53,0x4D,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="207">{0x53,0x4E,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02}</default>
    <default index1="208">{0x53,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="209">{0x53,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="210">{0x53,0x53,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="211">{0x53,0x54,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="212">{0x53,0x56,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="213">{0x53,0x58,0x00,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="214">{0x53,0x59,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="215">{0x53,0x5A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="216">{0x54,0x43,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="217">{0x54,0x44,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="218">{0x54,0x46,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="219">{0x54,0x47,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0x50,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="220">{0x54,0x48,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="221">{0x54,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="222">{0x54,0x4B,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="223">{0x54,0x4C,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="224">{0x54,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="225">{0x54,0x4E,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02}</default>
    <default index1="226">{0x54,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="227">{0x54,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="228">{0x54,0x54,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="229">{0x54,0x56,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="230">{0x54,0x57,0x01,
             0x60,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xE6,0x14,0x50,0x17,0x02,
             0x5E,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xDA,0x16,0x50,0x1E,0x00}</default>
    <default index1="231">{0x54,0x5A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="232">{0x55,0x41,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="233">{0x55,0x47,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xB7,0x16,0x50,0x1E,0x00}</default>
    <default index1="234">{0x55,0x4D,0x00,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="235">{0x55,0x53,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="236">{0x55,0x59,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="237">{0x55,0x5A,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02}</default>
    <default index1="238">{0x56,0x41,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="239">{0x56,0x43,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="240">{0x56,0x45,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="241">{0x56,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="242">{0x56,0x49,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="243">{0x56,0x4E,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="244">{0x56,0x55,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="245">{0x57,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1B,0x00}</default>
    <default index1="246">{0x57,0x53,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0x50,0x1B,0x02,
             0x67,0x16,0xA3,0x16,0x28,0x1B,0x00}</default>
    <default index1="247">{0x58,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="248">{0x59,0x45,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="249">{0x59,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="250">{0x5A,0x41,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="251">{0x5A,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="252">{0x5A,0x57,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <!--  Operating Class information for all countries. -->
        <config_element name="unifiOperatingClassTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>200</range_max>
            <description_user>Index for unifiOperatingClassTable</description_user>
        </config_element>
        <config_element name="unifiOperatingClassParamters" psid="8015">
            <description_user>Supported Operating Class parameters.</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>1</range_min><range_max>89</range_max>
            <table_name>unifiOperatingClassTable</table_name>
            <default_list>
                <default index1="1">{0x51,0x53,0x54,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x7B,0x7C,0x7D,0x7E,0x7F,0x80,0x83,0x84,0x85,0x86}</default>            <!-- Global -->
                <default index1="2">{0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x11,0x80,0x83,0x84,0x85,0x86}</default>                            <!-- Europe -->
                <default index1="3">{0x01,0x02,0x03,0x04,0x05,0x0C,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,0x20,0x21,0x80,0x83,0x84,0x85,0x86}</default>    <!-- US -->
                <default index1="4">{0x01,0x1E,0x20,0x21,0x22,0x24,0x25,0x27,0x29,0x2A,0x2C,0x38,0x39,0x3A,0x80,0x83,0x84,0x85,0x86}</default>                      <!-- Japan -->
            </default_list>
            <nature>software</nature>
          </config_element>
          <!-- end of unifiOperatingClassTable -->
          <config_element name="unifiScanParametersPublicTableIndex" psid="0">
              <type>uint16</type>
              <range_min>1</range_min><range_max>4</range_max>
              <description_user>Index for unifiScanParametersPublicTable. Index is a public parameter type (index 2). </description_user>
          </config_element>
          <config_element name="unifiScanParametersPublic" psid="2153">
          <description_user>Each row of the table contains 2 entries for a scan:
          first entry when there is 0 registered VIFs,
          second - when there is 1 or more registered VIFs.
          index2 = 1  octet  0 ~ 1    -  Probe Interval in Time Units           (uint16) / Zero VIF
                      octet  2 ~ 3    -  Probe Interval in Time Units           (uint16) / Non-Zero VIF
          index2 = 2  octet  0 ~ 1    -  Max Active Channel Time in Time Units  (uint16) / Zero VIF
                      octet  2 ~ 3    -  Max Active Channel Time in Time Units  (uint16) / Non-Zero VIF
          index2 = 3  octet  0 ~ 1    -  Max Passive Channel Time in Time Units (uint16) / Zero VIF
                      octet  2 ~ 3    -  Max Passive Channel Time in Time Units (uint16) / Non-Zero VIF
          index2 = 4  octet  0 ~ 1    -  Scan Flags                             (uint16) (see unifiScanFlags) / Zero VIF
                      octet  2 ~ 3    -  Scan Flags                             (uint16) (see unifiScanFlags) / Non-Zero VIF
                          bit 0        -  Enable Early Channel Exit               (bool)
                          bit 1        -  Disable Scan                            (bool)
                          bit 2        -  Enable NCHO                             (bool)
                          bit 3        -  Enable MAC Randomization                (bool)
                          bit 4        -  Clear Scan Records cache between cycles (bool)
          </description_user>
          <type>octet_string</type>
          <range_min>4</range_min><range_max>4</range_max>
          <table_name>unifiScanParametersPublicTable</table_name>
          <default_list>
          <!-- Initial Scan                                                   0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="1"  index2="1">{ 0x18,0x00,        0x18,0x00 } </default> <!-- 24TU,  N/A -->
          <!-- Max Active Channel Time -->  <default index1="1"  index2="2">{ 0x3A,0x00,        0x3A,0x00 } </default> <!-- 58TU,  N/A -->
          <!-- Max Passive Channel Time --> <default index1="1"  index2="3">{ 0x66,0x00,        0x66,0x00 } </default> <!-- 102TU, N/A -->
          <!--  Flags -->                   <default index1="1"  index2="4">{ 0x09,0x00,        0x01,0x00 } </default>
          <!-- Full scan                                                      0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="2"  index2="1">{ 0x44,0x00,        0x18,0x00 } </default> <!-- 68TU,  24TU -->
          <!-- Max Active Channel Time -->  <default index1="2"  index2="2">{ 0x92,0x00,        0x3A,0x00 } </default> <!-- 146TU, 58TU -->
          <!-- Max Passive Channel Time --> <default index1="2"  index2="3">{ 0x75,0x00,        0x66,0x00 } </default> <!-- 117TU, 102TU -->
          <!--  Flags -->                   <default index1="2"  index2="4">{ 0x09,0x00,        0x01,0x00 } </default>
          <!-- Scheduled scan                                                 0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="3"  index2="1">{ 0x44,0x00,        0x18,0x00 } </default> <!-- 68TU,  24TU -->
          <!-- Max Active Channel Time -->  <default index1="3"  index2="2">{ 0x92,0x00,        0x3A,0x00 } </default> <!-- 146TU, 58TU -->
          <!-- Max Passive Channel Time --> <default index1="3"  index2="3">{ 0x75,0x00,        0x66,0x00 } </default> <!-- 117TU, 102TU -->
          <!-- Flags -->                    <default index1="3"  index2="4">{ 0x09,0x00,        0x01,0x00 } </default>
          <!-- P2P Full scan                                                  0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="4"  index2="1">{ 0x18,0x00,        0x18,0x00 } </default> <!-- 24TU,  24TU -->
          <!-- Max Active Channel Time -->  <default index1="4"  index2="2">{ 0x44,0x00,        0x32,0x00 } </default> <!-- 68TU,  50TU -->
          <!-- Max Passive Channel Time --> <default index1="4"  index2="3">{ 0x66,0x00,        0x66,0x00 } </default> <!-- 102TU, 102TU -->
          <!-- Flags -->                    <default index1="4"  index2="4">{ 0x09,0x00,        0x01,0x00 } </default>
          <!-- P2P Social scan                                                0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="5"  index2="1">{ 0x18,0x00,        0x18,0x00 } </default> <!-- 24TU,  24TU -->
          <!-- Max Active Channel Time -->  <default index1="5"  index2="2">{ 0x44,0x00,        0x32,0x00 } </default> <!-- 68TU,  50TU -->
          <!-- Max Passive Channel Time --> <default index1="5"  index2="3">{ 0x00,0x00,        0x00,0x00 } </default> <!-- N/A,   N/A -->
          <!-- Flags -->                    <default index1="5"  index2="4">{ 0x08,0x00,        0x00,0x00 } </default>
          <!-- OBSS scan                                                      0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="6"  index2="1">{ 0x18,0x00,        0x18,0x00 } </default> <!-- 24TU,  N/A -->
          <!-- Max Active Channel Time -->  <default index1="6"  index2="2">{ 0x3A,0x00,        0x3A,0x00 } </default> <!-- 58TU,  N/A -->
          <!-- Max Passive Channel Time --> <default index1="6"  index2="3">{ 0x00,0x00,        0x00,0x00 } </default> <!-- N/A,   N/A -->
          <!-- Flags -->                    <default index1="6"  index2="4">{ 0x09,0x00,        0x01,0x00 } </default>
          <!-- AP Auto Channel Selection scan                                 0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="7"  index2="1">{ 0x18,0x00,        0x18,0x00 } </default> <!-- 24TU,  N/A -->
          <!-- Max Active Channel Time -->  <default index1="7"  index2="2">{ 0x27,0x00,        0x27,0x00 } </default> <!-- 39TU,  N/A -->
          <!-- Max Passive Channel Time --> <default index1="7"  index2="3">{ 0x00,0x00,        0x00,0x00 } </default> <!-- N/A,   N/A -->
          <!-- Flags -->                    <default index1="7"  index2="4">{ 0x09,0x00,        0x01,0x00 } </default>
          <!-- PNO scan                                                       0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="8"  index2="1">{ 0x44,0x00,        0x44,0x00 } </default> <!-- 68TU,  N/A -->
          <!-- Max Active Channel Time -->  <default index1="8"  index2="2">{ 0x92,0x00,        0x92,0x00 } </default> <!-- 146TU, N/A -->
          <!-- Max Passive Channel Time --> <default index1="8"  index2="3">{ 0x75,0x00,        0x75,0x00 } </default> <!-- 117TU, N/A -->
          <!-- Flags -->                    <default index1="8"  index2="4">{ 0x09,0x00,        0x01,0x00 } </default>
          <!--  GSCAN                                                         0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="9"  index2="1">{ 0x44,0x00,        0x18,0x00 } </default> <!-- 68TU,  24TU -->
          <!-- Max Active Channel Time -->  <default index1="9"  index2="2">{ 0x92,0x00,        0x3A,0x00 } </default> <!-- 146TU, 58TU -->
          <!-- Max Passive Channel Time --> <default index1="9"  index2="3">{ 0x75,0x00,        0x66,0x00 } </default> <!-- 117TU, 102TU -->
          <!-- Flags -->                    <default index1="9"  index2="4">{ 0x09,0x00,        0x09,0x00 } </default>
          <!-- Single Channel Scan                                            0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="10" index2="1">{ 0x46,0x00,        0x46,0x00 } </default> <!-- 70TU,  70TU -->
          <!-- Max Active Channel Time -->  <default index1="10" index2="2">{ 0xE8,0x00,        0xE8,0x00 } </default> <!-- 232TU, 232TU -->
          <!-- Max Passive Channel Time --> <default index1="10" index2="3">{ 0xE8,0x00,        0xE8,0x00 } </default> <!-- 232TU, 232TU -->
          <!-- Flags -->                    <default index1="10" index2="4">{ 0x00,0x00,        0x00,0x00 } </default>
          <!-- Measurement Scan                                               0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="16" index2="1">{ 0x18,0x00,        0x18,0x00 } </default> <!-- N/A,   24TU -->
          <!-- Max Active Channel Time -->  <default index1="16" index2="2">{ 0x3A,0x00,        0x3A,0x00 } </default> <!-- N/A,   58TU -->
          <!-- Max Passive Channel Time --> <default index1="16" index2="3">{ 0x66,0x00,        0x66,0x00 } </default> <!-- N/A,   102TU -->
          <!-- Flags -->                    <default index1="16" index2="4">{ 0x09,0x00,        0x01,0x00 } </default>
          <!-- Soft Cached Roaming Scan                                       0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="17" index2="1">{ 0x1B,0x00,        0x1B,0x00 } </default> <!-- N/A,   27TU -->
          <!-- Max Active Channel Time -->  <default index1="17" index2="2">{ 0x44,0x00,        0x44,0x00 } </default> <!-- N/A,   68TU -->
          <!-- Max Passive Channel Time --> <default index1="17" index2="3">{ 0x75,0x00,        0x75,0x00 } </default> <!-- N/A,   117TU -->
          <!-- Flags -->                    <default index1="17" index2="4">{ 0x0C,0x00,        0x04,0x00 } </default>
          <!-- Soft All Roaming Scan                                          0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="18" index2="1">{ 0x1B,0x00,        0x1B,0x00 } </default> <!-- N/A,   27TU -->
          <!-- Max Active Channel Time -->  <default index1="18" index2="2">{ 0x44,0x00,        0x44,0x00 } </default> <!-- N/A,   68TU -->
          <!-- Max Passive Channel Time --> <default index1="18" index2="3">{ 0x75,0x00,        0x75,0x00 } </default> <!-- N/A,   117TU -->
          <!-- Flags -->                    <default index1="18" index2="4">{ 0x09,0x00,        0x01,0x00 } </default>
          <!-- Hard Cached Roaming Scan                                       0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="19" index2="1">{ 0x27,0x00,        0x27,0x00 } </default> <!-- N/A,   39TU -->
          <!-- Max Active Channel Time -->  <default index1="19" index2="2">{ 0x62,0x00,        0x62,0x00 } </default> <!-- N/A,   98TU -->
          <!-- Max Passive Channel Time --> <default index1="19" index2="3">{ 0x75,0x00,        0x75,0x00 } </default> <!-- N/A,   117TU -->
          <!-- Flags -->                    <default index1="19" index2="4">{ 0x08,0x00,        0x00,0x00 } </default>
          <!-- Hard All Roaming Scan                                          0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="20" index2="1">{ 0x27,0x00,        0x27,0x00 } </default> <!-- N/A,   39TU -->
          <!-- Max Active Channel Time -->  <default index1="20" index2="2">{ 0x62,0x00,        0x62,0x00 } </default> <!-- N/A,   98TU -->
          <!-- Max Passive Channel Time --> <default index1="20" index2="3">{ 0x75,0x00,        0x75,0x00 } </default> <!-- N/A,   117TU -->
          <!-- Flags -->                    <default index1="20" index2="4">{ 0x08,0x00,        0x00,0x00 } </default>
          <!-- OBSS Internal Scan                                             0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="21" index2="1">{ 0x05,0x00,        0x05,0x00 } </default> <!-- N/A,   5TU -->
          <!-- Max Active Channel Time -->  <default index1="21" index2="2">{ 0x14,0x00,        0x14,0x00 } </default> <!-- N/A,   20TU -->
          <!-- Max Passive Channel Time --> <default index1="21" index2="3">{ 0x64,0x00,        0x64,0x00 } </default> <!-- N/A,   100TU -->
          <!-- Flags -->                    <default index1="21" index2="4">{ 0x19,0x00,        0x11,0x00 } </default>
          <!-- NAN Scan                                                       0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="22" index2="1">{ 0x00,0x00,        0x00,0x00 } </default> <!-- N/A,   N/A -->
          <!-- Max Active Channel Time -->  <default index1="22" index2="2">{ 0x00,0x00,        0x00,0x00 } </default> <!-- N/A,   N/A -->
          <!-- Max Passive Channel Time --> <default index1="22" index2="3">{ 0xDC,0x00,        0xDC,0x00 } </default> <!-- 220TU, 220TU -->
          <!-- Flags -->                    <default index1="22" index2="4">{ 0x18,0x00,        0x10,0x00 } </default>
          <!-- FTM Neighbour Scan                                             0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="23" index2="1">{ 0x1B,0x00,        0x1B,0x00 } </default> <!-- N/A,   27TU -->
          <!-- Max Active Channel Time -->  <default index1="23" index2="2">{ 0x44,0x00,        0x44,0x00 } </default> <!-- N/A,   68TU -->
          <!-- Max Passive Channel Time --> <default index1="23" index2="3">{ 0x75,0x00,        0x75,0x00 } </default> <!-- N/A,   117TU -->
          <!-- Flags -->                    <default index1="23" index2="4">{ 0x08,0x00,        0x00,0x00 } </default>
          <!-- OBSS Narrow BW Scan                                            0 VIFS            >= 1 VIFS -->
          <!-- Probe Interval -->           <default index1="24" index2="1">{ 0x1B,0x00,        0x1B,0x00 } </default> <!-- N/A,   27TU -->
          <!-- Max Active Channel Time -->  <default index1="24" index2="2">{ 0x44,0x00,        0x44,0x00 } </default> <!-- N/A,   68TU -->
          <!-- Max Passive Channel Time --> <default index1="24" index2="3">{ 0x75,0x00,        0x75,0x00 } </default> <!-- N/A,   117TU -->
          <!-- Flags -->                    <default index1="24" index2="4">{ 0x08,0x00,        0x01,0x00 } </default>
          </default_list>
          <nature>software</nature>
          </config_element>
          <config_element name="unifiScanParametersPrivateTableIndex" psid="0">
              <type>uint16</type>
              <range_min>1</range_min><range_max>3</range_max>
              <description_user>Index for unifiScanParametersPrivateTable. Index is a private parameter type (index 2). </description_user>
          </config_element>
          <config_element name="unifiScanParametersPrivate" psid="2157">
          <description_user>Each row of the table contains 2 entries for a scan type:
          first entry when there is 0 registered VIFs,
          second - when there is 1 or more registered VIFs.
          index2 = 1 octet  0        -  Scan Priority                          (uint8) / Zero VIF
                     octet  1        -  Scan Priority                          (uint8) / Non-Zero VIF
          index2 = 2 octet  0        -  Scan Policy                            (uint8) / Zero VIF
                     octet  1        -  Scan Policy                            (uint8) / Non-Zero VIF
          index2 = 3 octet  0        -  Scan Groups                            (uint8) (see unifiScanGroups) / Zero VIF
                     octet  1        -  Scan Groups                            (uint8) (see unifiScanGroups) / Non-Zero VIF
                         bit 0        -  Roaming scan group                     (bool)
                         bit 1        -  Roaming scan on known channel group    (bool)
                         bit 2        -  P2P scan group                         (bool)
                         bit 3        -  Wifi Sharing allowed group             (bool)
                         bit 4        -  NAN scan group                         (bool)
          </description_user>
          <type>octet_string</type>
          <range_min>2</range_min><range_max>2</range_max>
          <table_name>unifiScanParametersPrivateTable</table_name>
          <default_list>
          <!-- Initial Scan                                   0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="1"  index2="1">{ 0x06,         0x06 }</default>
          <!--  Policy -->  <default index1="1"  index2="2">{ 0x00,         0x00 }</default>
          <!--  Groups -->  <default index1="1"  index2="3">{ 0x00,         0x00 }</default>
          <!-- Full Scan                                      0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="2"  index2="1">{ 0x06,         0x06 }</default>
          <!--  Policy -->  <default index1="2"  index2="2">{ 0x00,         0x00 }</default>
          <!--  Groups -->  <default index1="2"  index2="3">{ 0x00,         0x00 }</default>
          <!-- Scheduled Scan                                 0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="3"  index2="1">{ 0x02,         0x02 }</default>
          <!-- Policy -->   <default index1="3"  index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="3"  index2="3">{ 0x00,         0x00 }</default>
          <!-- P2P Full Scan                                  0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="4"  index2="1">{ 0x06,         0x06 }</default>
          <!-- Policy -->   <default index1="4"  index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="4"  index2="3">{ 0x04,         0x04 }</default>
          <!-- P2P Social Scan                                0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="5"  index2="1">{ 0x06,         0x06 }</default>
          <!-- Policy -->   <default index1="5"  index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="5"  index2="3">{ 0x04,         0x04 }</default>
          <!-- OBSS Scan                                      0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="6"  index2="1">{ 0x04,         0x04 }</default>
          <!-- Policy -->   <default index1="6"  index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="6"  index2="3">{ 0x00,         0x00 }</default>
          <!-- AP Auto Channel Selection Scan                 0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="7"  index2="1">{ 0x04,         0x04 }</default>
          <!-- Policy -->   <default index1="7"  index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="7"  index2="3">{ 0x00,         0x00 }</default>
          <!-- PNO Scan                                       0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="8"  index2="1">{ 0x00,         0x00 }</default>
          <!-- Policy -->   <default index1="8"  index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="8"  index2="3">{ 0x00,         0x00 }</default>
          <!-- GSCAN                                          0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="9"  index2="1">{ 0x02,         0x02 }</default>
          <!-- Policy -->   <default index1="9"  index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="9"  index2="3">{ 0x00,         0x00 }</default>
          <!-- Single Channel Scan                            0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="10" index2="1">{ 0x06,         0x06 }</default>
          <!-- Policy -->   <default index1="10" index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="10" index2="3">{ 0x00,         0x00 }</default>
          <!-- Measurement Scan                               0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="16" index2="1">{ 0x03,         0x03 }</default>
          <!-- Policy -->   <default index1="16" index2="2">{ 0x80,         0x80 }</default>
          <!-- Groups -->   <default index1="16" index2="3">{ 0x08,         0x08 }</default>
          <!-- Soft Cached Roaming Scan updated in .htfs      0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="17" index2="1">{ 0x04,         0x04 }</default>
          <!-- Policy -->   <default index1="17" index2="2">{ 0x04,         0x04 }</default>
          <!-- Groups -->   <default index1="17" index2="3">{ 0x03,         0x03 }</default>
          <!-- Soft All Roaming Scan updated in .htfs         0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="18" index2="1">{ 0x04,         0x04 }</default>
          <!-- Policy -->   <default index1="18" index2="2">{ 0x04,         0x04 }</default>
          <!-- Groups -->   <default index1="18" index2="3">{ 0x01,         0x01 }</default>
          <!-- Hard Cached Roaming Scan                       0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="19" index2="1">{ 0x08,         0x08 }</default>
          <!-- Policy -->   <default index1="19" index2="2">{ 0x04,         0x04 }</default>
          <!-- Groups -->   <default index1="19" index2="3">{ 0x03,         0x03 }</default>
          <!-- Hard All Roaming Scan                          0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="20" index2="1">{ 0x08,         0x08 }</default>
          <!-- Policy -->   <default index1="20" index2="2">{ 0x04,         0x04 }</default>
          <!-- Groups -->   <default index1="20" index2="3">{ 0x01,         0x01 }</default>
          <!-- OBSS Internal Scan                             0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="21" index2="1">{ 0x03,         0x03 }</default>
          <!-- Policy -->   <default index1="21" index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="21" index2="3">{ 0x00,         0x00 }</default>
          <!-- NAN Scan                                       0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="22" index2="1">{ 0x05,         0x05 }</default>
          <!-- Policy -->   <default index1="22" index2="2">{ 0x01,         0x01 }</default>
          <!-- Groups -->   <default index1="22" index2="3">{ 0x18,         0x18 }</default>
          <!-- FTM Neighbour Scan                             0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="23" index2="1">{ 0x04,         0x04 }</default>
          <!-- Policy -->   <default index1="23" index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="23" index2="3">{ 0x08,         0x08 }</default>
          <!-- OBSS Narrow BW Scan                            0 VIFS        >= 1 VIFS -->
          <!-- Priority --> <default index1="24" index2="1">{ 0x06,         0x06 }</default>
          <!-- Policy -->   <default index1="24" index2="2">{ 0x00,         0x00 }</default>
          <!-- Groups -->   <default index1="24" index2="3">{ 0x08,         0x08 }</default>
          </default_list>
          <nature>software</nature>
          </config_element>
          <config_element name="unifiScanParametersTableIndex" psid="0">
              <type>integer</type>
              <range_min>1</range_min><range_max>24</range_max>
              <description_user>Index for unifiScanParametersTable. Index is a Scan_Type as defined in FAPI. </description_user>
          </config_element>
          <config_element name="unifiObssScanStartWait" psid="5405">
              <description_user>Time in seconds to wait before starting a OBSS scan after channel switch.</description_user>
              <type>uint16</type>
              <range_min>0</range_min><range_max>200</range_max>
              <default>150</default>
              <nature>software</nature><module>mlme</module>
          </config_element>
        <config_element name="unifiP2PLegacyProbeResponseActivated" psid="2599">
            <description_user>Golden Certification MIB don't delete. When activated, P2P-GO responds to legacy Probe Request.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
         <config_element name="dot11TDLSPeerUAPSDBufferSTAActivated" psid="2587">
           <description_user>Activate TDLS peer U-APSD.</description_user>
           <type>boolean</type>
           <default>true</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
        <config_element name="unifiIncludePMKIDForPSK" psid="2610">
          <description_user>Include PMKID in frame if security type WPA2-PSK.</description_user>
           <type>boolean</type>
           <default>false</default>
           <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiWPA3Activated" psid="2588">
          <description_user>Activate WPA3 support.</description_user>
           <type>boolean</type>
           <default>true</default>
           <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiSecuritySkipAllZeroesCheck" psid="2648">
           <description_user>validate the installation of all keys zero in 4-way handshake. Disable the MIB while performing vulnerability certification.</description_user>
           <type>boolean</type>
           <default>true</default>
           <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="dot11TDLSPeerUAPSDIndicationWindow" psid="53">
            <description_user>The minimum time after the last TPU SP, before a RAME_TPU_SP indication can be issued.</description_user>
            <type>uint16</type>
            <units>beacon intervals</units>
            <default>1</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
         <config_element name="dot11TDLSDiscoveryRequestWindow" psid="2565">
           <description_user>Time to gate Discovery Request frame (in DTIM intervals) after transmitting a Discovery Request frame.</description_user>
           <type>uint32</type>
           <default>10</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="dot11TDLSResponseTimeout" psid="2566">
           <description_user>If a valid Setup Response frame is not received within (seconds),
            the initiator STA shall terminate the setup procedure and discard any Setup Response frames.</description_user>
           <type>uint32</type>
           <default>5</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="unifiTdlsActivated" psid="2558">
           <description_user>Golden Certification MIB don't delete, change PSID or name: Activate TDLS.</description_user>
           <type>boolean</type>
           <default>true</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
          <config_element name="unifiTdlsInP2pActivated" psid="2556">
           <description_user>Activate TDLS in P2P.</description_user>
           <type>boolean</type>
           <default>true</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
          <config_element name="unifiMaxTDLSClient" psid="2382">
           <description_user>Maximum number of clients Supported in TDLS.</description_user>
           <type>uint16</type>
           <default>4</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
          <config_element name="unifiTdlsWiderBandwidthProhibited" psid="2569">
           <description_user>Wider bandwidth prohibited flag.</description_user>
           <type>boolean</type>
           <default>false</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="unifiTdlsTPThresholdPktSecs" psid="2559">
           <description_user>Used for "throughput_threshold_pktsecs" of RAME-MLME-ENABLE-PEER-TRAFFIC-REPORTING.request.</description_user>
           <type>uint32</type>
           <default>100</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="unifiTdlsRssiThreshold" psid="2560">
           <description_user>FW initiated TDLS Discovery/Setup procedure.
           If the RSSI of a received TDLS Discovery Response frame is greater than this value, initiate the TDLS Setup procedure.</description_user>
           <type>int16</type>
           <default>-75</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="unifiTdlsTPMonitorSecs" psid="2562">
           <description_user>Measurement period for recording the number of packets sent to a peer over a TDLS link.</description_user>
           <type>uint16</type>
           <default>10</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="unifiTdlsKeyLifeTimeInterval" psid="2577">
           <description_user>Build the Key Lifetime Interval in the TDLS Setup Request frame.</description_user>
           <type>uint32</type>
           <default>0x000FFFFF</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="unifiTdlsTeardownFrameTxTimeout" psid="2578">
           <description_user>Allowed time in milliseconds for a Teardown frame to be transmitted.</description_user>
           <type>uint16</type>
           <default>500</default>
           <nature>software</nature><module>mlme</module>
          </config_element>

         <config_element name="unifiWifiSharingActivated" psid="2580">
           <description_user>Activate WiFi Sharing feature</description_user>
           <type>boolean</type>
           <default>true</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="unifiWiFiSharingChannels" psid="2581">
            <description_user>Default host allowed channels during Wifi Sharing. Defined in a uint64 represented by the octet string.
                First byte of the octet string maps to LSB. Bits 0-13 representing 2.4G channels. Mapping defined in ChannelisationRules.</description_user>
            <type>octet_string</type>
            <range_min>8</range_min><range_max>8</range_max><default>{ 0xFF, 0xDF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00 }</default>
            <access_rights>read_only</access_rights>
            <nature>software</nature><module>mlme</module>
         </config_element>
         <config_element name="unifiWiFiSharing5GHzChannel" psid="2582">
            <description_user>Deprecated. Applicable 5GHz Primary Channels mask. Defined in a uint64 represented by the octet string.
            First byte of the octet string maps to LSB. Bits 0-13 representing 2.4G channels are always set to 0. Mapping defined in ChannelisationRules; i.e. Bit 14 maps to channel 36.</description_user>
            <type>octet_string</type>
            <range_min>8</range_min><range_max>8</range_max><default>{ 0x00, 0xC0, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="unifiWifiSharingChannelSwitchCount" psid="2583"><!-- ap --><!-- sta -->
           <description_user>Channel switch announcement count which will be used in the Channel announcement IE when using wifi sharing</description_user>
           <type>uint16</type>
           <default>10</default>
           <range_min>3</range_min><range_max>10</range_max>
           <nature>software</nature><module>mlme</module>
          </config_element>
         <config_element name="unifiChannelAnnouncementCount" psid="2584"><!-- ap -->
           <description_user>Channel switch announcement count which will be used in the Channel announcement IE</description_user>
           <type>uint16</type>
           <default>10</default>
           <nature>software</nature><module>mlme</module>
         </config_element>

         <config_element name="unifiStaChannelSwitchSlowApActivated" psid="2601">
             <description_user>Golden Certification MIB don't delete, change PSID or name: ChanelSwitch: Activate waiting for a slow AP.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
         </config_element>
         <config_element name="unifiStaChannelSwitchSlowApMaxTime" psid="2604">
            <description_user>ChannelSwitch delay for Slow APs. In Seconds.</description_user>
            <type>uint32</type>
            <default>70</default>
            <nature>software</nature><module>mlme</module>
         </config_element>
            <config_element name="unifiStaChannelSwitchSlowApPollInterval" psid="2605">
            <description_user>ChannelSwitch polling interval for Slow APs. In Seconds.</description_user>
            <type>uint16</type>
            <default>1</default>
            <nature>software</nature><module>mlme</module>
         </config_element>
            <config_element name="unifiStaChannelSwitchSlowApProcedureTimeoutIncrement" psid="2606">
            <description_user>ChannelSwitch procedure timeout increment for Slow APs. In Seconds.</description_user>
            <type>uint16</type>
            <default>10</default>
            <nature>software</nature><module>mlme</module>
         </config_element>

         <config_element name="unifiRATestStoredSA" psid="2585">
           <description_user>Test only: Source address of router contained in virtural router advertisement packet, specified in chapter '6.2 Forward Received RA frame to Host' in SC-506393-TE</description_user>
           <type>octet_string</type>
           <default>0x00000000</default>
           <nature>software</nature><module>mlme</module>
         </config_element>
         <config_element name="unifiRATestStoreFrame" psid="2586">
           <description_user>Test only: Virtual router advertisement packet. Specified in chapter '6.2 Forward Received RA frame to Host' in SC-506393-TE</description_user>
           <type>octet_string</type>
           <default>0x00000000</default>
           <nature>software</nature><module>mlme</module>
         </config_element>
        <config_element name="unifiSupportedChannels" psid="8012">
            <description_user>For Test Only. Supported 20MHz channel primary frequency grouped in sub-bands. For each sub-band: starting channel number, followed by number of channels. </description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>20</range_max><default> {0x01,0x0d,0x24,0x04,0x34,0x04,0x64,0x0c,0x95,0x05} </default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiDefaultCountry" psid="8013">
            <description_user>Deprecated. Host set Default Code. </description_user>
            <type>octet_string</type>
            <range_min>3</range_min><range_max>3</range_max>
            <table_name>unifiDefaultCountryTable</table_name>
            <default_list>
                <!-- Default country code. -->
                <default index1="1">{ 0x30, 0x30, 0x20 } </default>
                <!-- Only here because MIB Table with one row is not permitted. -->
                <default index1="2">{ 0x00, 0x01, 0x02 } </default>
            </default_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiDefaultCountryWithoutCH12CH13" psid="8020">
            <description_user>Update the default country code to ensure CH12 and CH13 are not used.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiCountryList" psid="8014">
            <description_user>Deprecated. Defines the ordered list of countries present in unifiRegulatoryTable. Each country is coded as 2 ASCII characters. If unifiRegulatoryTable is modified, such as a country is either added, deleted or its relative location is modified, has to be updated as well.</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>270</range_max>
            <default>

{ 0x30, 0x30, 0x58, 0x58, 0x41, 0x44, 0x41, 0x45, 0x41, 0x46, 0x41, 0x47, 0x41, 0x49, 0x41, 0x4c, 0x41, 0x4d, 0x41, 0x4e, 0x41, 0x4f, 0x41, 0x51, 0x41, 0x52, 0x41, 0x53, 0x41, 0x54, 0x41, 0x55, 0x41, 0x57, 0x41, 0x58, 0x41, 0x5a, 0x42, 0x41, 0x42, 0x42, 0x42, 0x44, 0x42, 0x45, 0x42, 0x46, 0x42, 0x47, 0x42, 0x48, 0x42, 0x49, 0x42, 0x4a, 0x42, 0x4c, 0x42, 0x4d, 0x42, 0x4e, 0x42, 0x4f, 0x42, 0x52, 0x42, 0x53, 0x42, 0x54, 0x42, 0x56, 0x42, 0x57, 0x42, 0x59, 0x42, 0x5a, 0x43, 0x41, 0x43, 0x43, 0x43, 0x44, 0x43, 0x46, 0x43, 0x47, 0x43, 0x48, 0x43, 0x49, 0x43, 0x4b, 0x43, 0x4c, 0x43, 0x4d, 0x43, 0x4e, 0x43, 0x4f, 0x43, 0x52, 0x43, 0x55, 0x43, 0x56, 0x43, 0x58, 0x43, 0x59, 0x43, 0x5a, 0x44, 0x45, 0x44, 0x4a, 0x44, 0x4b, 0x44, 0x4d, 0x44, 0x4f, 0x44, 0x5a, 0x45, 0x43, 0x45, 0x45, 0x45, 0x47, 0x45, 0x48, 0x45, 0x52, 0x45, 0x53, 0x45, 0x54, 0x46, 0x49, 0x46, 0x4a, 0x46, 0x4b, 0x46, 0x4c, 0x46, 0x4d, 0x46, 0x4f, 0x46, 0x52, 0x47, 0x41, 0x47, 0x42, 0x47, 0x44, 0x47, 0x45, 0x47, 0x46, 0x47, 0x47, 0x47, 0x48, 0x47, 0x49, 0x47, 0x4c, 0x47, 0x4d, 0x47, 0x4e, 0x47, 0x50, 0x47, 0x51, 0x47, 0x52, 0x47, 0x53, 0x47, 0x54, 0x47, 0x55, 0x47, 0x57, 0x47, 0x59, 0x48, 0x4b, 0x48, 0x4d, 0x48, 0x4e, 0x48, 0x52, 0x48, 0x54, 0x48, 0x55, 0x49, 0x44, 0x49, 0x45, 0x49, 0x4c, 0x49, 0x4d, 0x49, 0x4e, 0x49, 0x4f, 0x49, 0x51, 0x49, 0x52, 0x49, 0x53, 0x49, 0x54, 0x4a, 0x45, 0x4a, 0x4d, 0x4a, 0x4f, 0x4a, 0x50, 0x4b, 0x45, 0x4b, 0x47, 0x4b, 0x48, 0x4b, 0x49, 0x4b, 0x4d, 0x4b, 0x4e, 0x4b, 0x50, 0x4b, 0x52, 0x4b, 0x57, 0x4b, 0x59, 0x4b, 0x5a, 0x4c, 0x41, 0x4c, 0x42, 0x4c, 0x43, 0x4c, 0x49, 0x4c, 0x4b, 0x4c, 0x52, 0x4c, 0x53, 0x4c, 0x54, 0x4c, 0x55, 0x4c, 0x56, 0x4c, 0x59, 0x4d, 0x41, 0x4d, 0x43, 0x4d, 0x44, 0x4d, 0x45, 0x4d, 0x46, 0x4d, 0x47, 0x4d, 0x48, 0x4d, 0x4b, 0x4d, 0x4c, 0x4d, 0x4d, 0x4d, 0x4e, 0x4d, 0x4f, 0x4d, 0x50, 0x4d, 0x51, 0x4d, 0x52, 0x4d, 0x53, 0x4d, 0x54, 0x4d, 0x55, 0x4d, 0x56, 0x4d, 0x57, 0x4d, 0x58, 0x4d, 0x59, 0x4d, 0x5a, 0x4e, 0x41, 0x4e, 0x43, 0x4e, 0x45, 0x4e, 0x46, 0x4e, 0x47, 0x4e, 0x49, 0x4e, 0x4c, 0x4e, 0x4f, 0x4e, 0x50, 0x4e, 0x52, 0x4e, 0x55, 0x4e, 0x5a, 0x4f, 0x4d, 0x50, 0x41, 0x50, 0x45, 0x50, 0x46, 0x50, 0x47, 0x50, 0x48, 0x50, 0x4b, 0x50, 0x4c, 0x50, 0x4d, 0x50, 0x4e, 0x50, 0x52, 0x50, 0x53, 0x50, 0x54, 0x50, 0x57, 0x50, 0x59, 0x51, 0x41, 0x52, 0x45, 0x52, 0x4f, 0x52, 0x53, 0x52, 0x55, 0x52, 0x57, 0x53, 0x41, 0x53, 0x42, 0x53, 0x43, 0x53, 0x44, 0x53, 0x45, 0x53, 0x47, 0x53, 0x48, 0x53, 0x49, 0x53, 0x4a, 0x53, 0x4b, 0x53, 0x4c, 0x53, 0x4d, 0x53, 0x4e, 0x53, 0x4f, 0x53, 0x52, 0x53, 0x53, 0x53, 0x54, 0x53, 0x56, 0x53, 0x58, 0x53, 0x59, 0x53, 0x5a, 0x54, 0x43, 0x54, 0x44, 0x54, 0x46, 0x54, 0x47, 0x54, 0x48, 0x54, 0x4a, 0x54, 0x4b, 0x54, 0x4c, 0x54, 0x4d, 0x54, 0x4e, 0x54, 0x4f, 0x54, 0x52, 0x54, 0x54, 0x54, 0x56, 0x54, 0x57, 0x54, 0x5a, 0x55, 0x41, 0x55, 0x47, 0x55, 0x4d, 0x55, 0x53, 0x55, 0x59, 0x55, 0x5a, 0x56, 0x41, 0x56, 0x43, 0x56, 0x45, 0x56, 0x47, 0x56, 0x49, 0x56, 0x4e, 0x56, 0x55, 0x57, 0x46, 0x57, 0x53, 0x58, 0x4b, 0x59, 0x45, 0x59, 0x54, 0x5a, 0x41, 0x5a, 0x4d, 0x5a, 0x57 }
            </default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiVifCountry" psid="8016">
            <description_user>Per VIf: Each VIF updates its Country Code for the Host to read</description_user>
            <type>octet_string</type>
            <function_list>
                <function type="get" function_name="mibosget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiStationQosInfo" psid="2517">
            <description_user>QoS capability for a non-AP Station, and is encoded as per IEEE 802.11 QoS Capability.</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBeaconSkippingControl" psid="2521">
            <description_user>Control beacon skipping behaviour within firmware with bit flags. 1 defines enabled,
            with 0 showing the case disabled. If beacon skipping is enabled, further determine if DTIM beacons can
            be skipped, or only non-DTIM beacons. The following applies:
            bit 0:  station skipping on host suspend
            bit 1:  station skipping on host awake
            bit 2:  station skipping on LCD on
            bit 3:  station skipping with multivif
            bit 4:  station skipping with BT active.
            bit 8:  station skip dtim on host suspend
            bit 9:  station skip dtim on host awake
            bit 10: station skip dtim on LCD on
            bit 11: station skip dtim on multivif
            bit 12: station skip dtim with BT active
            bit 16: p2p-gc skipping on host suspend
            bit 17: p2p-gc skipping on host awake
            bit 18: p2p-gc skipping on LCD on
            bit 19: p2p-gc skipping with multivif
            bit 20: p2p-gc skipping with BT active
            bit 24: p2p-gc skip dtim on host suspend
            bit 25: p2p-gc skip dtim on host awake
            bit 26: p2p-gc skip dtim on LCD on
            bit 27: p2p-gc skip dtim on multivif
            bit 28: p2p-gc skip dtim with BT active
            </description_user>
            <range_min>0</range_min><range_max>4294967295</range_max><default>0x00010101</default>
            <type>uint32</type>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiListenIntervalSkippingDTIM" psid="2518">
            <description_user>Listen interval of beacons when in single-vif power saving mode,receiving DTIMs is enabled and idle mode disabled.
            No DTIMs are skipped during MVIF operation. A maximum of the listen interval beacons are skipped, which may be less than the number of DTIMs that can be skipped.
            The value is a lookup table for DTIM counts. Each 4bits, in LSB order, represent DTIM1, DTIM2, DTIM3, DTIM4, DTIM5, (unused).
            This key is only used for STA VIF, connected to an AP. For P2P group client intervals, refer to unifiP2PListenIntervalSkippingDTIM, PSID=2523.</description_user>
            <range_min>0</range_min><range_max>4294967295</range_max><default>0x000A89AA</default>
            <units>DTIM intervals</units>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiP2PListenIntervalSkippingDTIM" psid="2523">
            <description_user>Listen interval of beacons when in single-vif, P2P client power saving mode,receiving DTIMs and idle mode disabled.
            No DTIMs are skipped during MVIF operation. A maximum of (listen interval - 1) beacons are skipped, which may be less than the number of DTIMs that can be skipped.
            The value is a lookup table for DTIM counts. Each 4bits, in LSB order, represent DTIM1, DTIM2, DTIM3, DTIM4, DTIM5, (unused).
            This key is only used for P2P group client. For STA connected to an AP, refer to unifiListenIntervalSkippingDTIM, PSID=2518.</description_user>
            <range_min>0</range_min><range_max>4294967295</range_max><default>0x00000002</default>
            <units>DTIM intervals</units>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiIdlemodeListenIntervalSkippingDTIM" psid="2495">
            <description_user>Listen interval of beacons when in single-vif power saving mode, receiving DTIMs is enabled and idle mode enabled.
            No DTIMs are skipped during MVIF operation. A maximum of the listen interval beacons are skipped, which may be less than the number of DTIMs that can be skipped.
            The value is a lookup table for DTIM counts. Each 4bits, in LSB order, represent DTIM1, DTIM2, DTIM3, DTIM4, DTIM5, (unused).
            This key is only used for STA VIF, connected to an AP. For P2P group client intervals, refer to unifiIdlemodeP2PListenIntervalSkippingDTIM, PSID=2496.</description_user>
            <range_min>0</range_min><range_max>4294967295</range_max><default>0x00054645</default>
            <units>DTIM intervals</units>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiIdlemodeP2PListenIntervalSkippingDTIM" psid="2496">
            <description_user>Listen interval of beacons when in single-vif, P2P client power saving mode,receiving DTIMs and idle mode enabled.
            No DTIMs are skipped during MVIF operation. A maximum of (listen interval - 1) beacons are skipped, which may be less than the number of DTIMs that can be skipped.
            The value is a lookup table for DTIM counts. Each 4bits, in LSB order, represent DTIM1, DTIM2, DTIM3, DTIM4, DTIM5, (unused).
            This key is only used for P2P group client. For STA connected to an AP, refer to unifiIdlemodeListenIntervalSkippingDTIM, PSID=2495.</description_user>
            <range_min>0</range_min><range_max>4294967295</range_max><default>0x00000002</default>
            <units>DTIM intervals</units>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiListenIntervalMaxTime" psid="2530">
            <description_user>Maximum number length of time, in Time Units (1TU = 1024us), that can be used as a beacon listen interval. This will limit how many beacons maybe skipped, and affects
            the DTIM beacon skipping count; DTIM skipping (if enabled) will be such that skipped count = (unifiListenIntervalMaxTime / DTIM_period).</description_user>
            <range_min>0</range_min><range_max>65535</range_max><default>1000</default>
            <units>TU</units>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiUseHostListenInterval" psid="2476">
            <description_user>Listen interval of beacons when in single-vif as set by host.</description_user>
            <range_min>0</range_min><range_max>65535</range_max><default>0</default>
            <units>DTIM intervals</units>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiListenInterval" psid="2519">
            <description_user>Association request listen interval parameter in beacon intervals. Not used for any other purpose.</description_user>
            <range_min>0</range_min><range_max>100</range_max><default>10</default>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBeaconsReceivedPercentage" psid="2245">
            <description_user>Percentage of beacons received, calculated as received / expected. The percentage is scaled to an integer value between 0 (0%) and 1000 (100%).</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <default>0</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiMaxBeaconListenWindowTime" psid="2479">
            <description_user>The maximum beacon listen window time we can limit on.This is the difference between listen end and listen start time.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>0</default>
           <function_list>
               <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
           </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiBeaconRXPeriodUpdate" psid="2465">
            <description_user>Enables beacon rx period update, if AP is sending wrong beacon period.</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiHtCapabilities" psid="2032">
            <description_user>Golden Certification MIB don't delete, change PSID or name. HT capabilities of the chip. See SC-503520-SP for further details. NOTE: Greenfield has been disabled due to interoperability issues wuth SGI.</description_user>
            <type>octet_string</type>
            <range_min>21</range_min><range_max>21</range_max><default>{ 0xef, 0x0a, 0x17, 0xff, 0xff, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } </default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiHtCapabilitiesSoftAp" psid="2028">
            <description_user>Golden Certification MIB don't delete, change PSID or name. HT capabilities for softAP to disallow MIMO when customer want to control MIMO/ SISO mode (see SC-508764-DD for further details). NOTE: Greenfield has been disabled due to interoperability issues with setting SGI.</description_user>
            <type>octet_string</type>
            <range_min>21</range_min><range_max>21</range_max><default>{ 0xef, 0x0a, 0x17, 0xff, 0xff, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } </default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiVhtCapabilities" psid="2540">
            <description_user>Golden Certification MIB don't delete, change PSID or name. VHT capabilities of the chip. see SC-503520-SP.</description_user>
            <type>octet_string</type>
            <range_min>12</range_min><range_max>12</range_max><default>{ 0xb1, 0x7a, 0x91, 0x03, 0xfa, 0xff, 0x00, 0x00, 0xfa, 0xff, 0x00, 0x00 }</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiHtApDowngradeByNSSActivated" psid="2619">
            <description_user>Enable HT Ap downgrade when NSS is changed. This is customer specific.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiSuppressSTSUpdateBasedOnPeer" psid="2616">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Do not update STS in VHT caps based on Peer's sounding dimensions.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiFrameResponseTimeOut" psid="2080"><!-- ap --><!-- conmgr -->
            <description_user>Timeout, in TU, to wait for a frame(Auth, Assoc, ReAssoc) after TX Cfm trasnmission_status == Successful.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>500</range_max><default>200</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiFrameResponseLongTimeOut" psid="2101"><!-- conmgr -->
            <description_user>Deprecated. Timeout, in TU, to wait for a frame(Auth, Assoc, ReAssoc) after TX Cfm trasnmission_status == Successful for SAE</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>10000</range_max><default>5000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiFrameResponseNdmTimeOut" psid="2654">
            <description_user>Timeout, in TU, to wait to retry a frame after after TX Cfm trasnmission_status == Successful.</description_user>
            <type>uint16</type>
            <default>1024</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiFrameResponseCfmFailureTimeOut" psid="2085">
            <description_user>Timeout, in TU, to wait to retry a frame after TX Cfm trasnmission_status != Successful.</description_user>
            <type>uint16</type>
            <default>40</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiInitialConnectionFailureTimeout" psid="2102">
            <description_user>Timeout, in TU, for a frame retry before giving up for initial connection.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>20000</range_max><default>3000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifRetryAuthForSpecialAps" psid="2103">
            <description_user>How long, in milliseconds, before ConnectionFailureTimeout to send authentication frame for special aps.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>20000</range_max><default>500</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiConnectionFailureTimeout" psid="2081">
            <description_user>Timeout, in TU, for a frame retry before giving up.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>20000</range_max><default>2000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiAssocComebackTimeout" psid="2104">
            <description_user>Timeout, in TU, for a association comeback limit before giving up.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>20000</range_max><default>3000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiConnectingProbeTimeout" psid="2082">
            <description_user>How long, in TU, to wait for a ProbeRsp when syncronising before resending a ProbeReq</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiDisconnectTimeout" psid="2083"><!-- ap --><!-- conmgr -->
            <description_user>Timeout, in milliseconds, to perform a disconnect or disconnect all STAs (triggered by MLME_DISCONNECT-REQ or MLME_DISCONNECT-REQ 00:00:00:00:00:00) before responding with MLME-DISCONNECT-IND and aborting the disconnection attempt. This is particulary important when a SoftAP is attempting to disconnect associated stations which might have "silently" left the ESS.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>3000</range_max><default>1500</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiAutoConnectionTestActivated" psid="2383">
            <description_user>Golden Certification MIB don't delete. Enable auto response for connection without radio</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiAutoConnectionTestBSSID" psid="2385">
            <description_user>Golden Certification MIB don't delete. Select the BSSID for the AP when auto response is enabled</description_user>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>6</range_max><default>{ 0x24, 0x4c, 0x0f, 0x10, 0x22, 0x4d }</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiForceActiveDuration" psid="2086">
            <description_user>How long, in milliseconds, the firmware temporarily extends PowerSave for STA as a workaround for wonky APs such as D-link.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>1000</range_max><default>200</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBaTxEnableTid" psid="2221">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Configure Block Ack TX on a per-TID basis. Bit mask is two bits per TID (B1 = autosetup, B0 = enable).</description_user>
            <type>uint32</type>
            <!--
            B1  = auto-setup BA TX
            B0  = enable BA TX

            P15 .. P7 P6 P5 P4 P3 P2 P1 P0
             00    00 00 01 01 01 01 01 11 = 0x557
            -->
            <default>0x0557</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBaRxEnableTid" psid="2219">
            <description_user>Configure Block Ack RX on a per-TID basis. Bit mask is two bits per TID (B1 = Not Used, B0 = enable).</description_user>
            <type>uint32</type>
            <!--
            B0  = enable BA RX

            P15 .. P7 P6 P5 P4 P3 P2 P1 P0
             00    00 01 01 01 01 01 01 01 = 0x1555
            -->
            <default>0x1555</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBaConfig" psid="2225">
            <description_user>Block Ack Configuration. It is composed of A-MSDU supported, TX MPDU per A-MPDU, RX Buffer size, TX Buffer size and Block Ack Timeout. Indexed by unifiAccessClassIndex.
                <!--
                a_msdu_supported = (bool)   BA_MIB_A_MSDU_IN_A_MPDU_SUPPORTED_POS & BA_MIB_A_MSDU_IN_A_MPDU_SUPPORTED_MASK);
                rx_buffer_size   = (uint8)  BA_MIB_RX_BUFFER_SIZE_POS             & BA_MIB_RX_BUFFER_SIZE_MASK);
                tx_buffer_size   = (uint8)  BA_MIB_TX_BUFFER_SIZE_POS             & BA_MIB_TX_BUFFER_SIZE_MASK
                timeout          = (uint16) BA_MIB_TIMEOUT_POS                    & BA_MIB_TIMEOUT_MASK << 8);
                -->
            </description_user>
            <access_rights>read_write</access_rights>
            <type>uint32</type>
            <table_name>unifiBaConfigTable</table_name>
            <default_list>
                <default index1="1">0x3fff00</default> <!-- AC_BK -->
                <default index1="2">0x3fff01</default> <!-- AC_BE -->
                <default index1="3">0x3fff01</default> <!-- AC_VI -->
                <default index1="4">0x3fff00</default> <!-- AC_VO -->
            </default_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBaTxMaxNumber" psid="2226">
            <description_user>Block Ack Configuration. Maximum number of BAs. Limited by HW. </description_user>
            <type>uint16</type>
            <default>0x10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBaRxInternalDeleteDisabled" psid="2618">
            <description_user>Disable Rx Block Ack from being deleted internally. The BA delete is still advertised to the peer, but is not deleted internally. This is applicable only when the delete does not come from the peer. </description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMoveBKtoBE" psid="2227">
            <description_user> Deprecated. Golden Certification MIB don't delete, change PSID or name </description_user>
            <access_rights>read_write</access_rights>
            <type>boolean</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamBaWinSize" psid="2291">
            <description_user>Block Ack Configuration. Maximum number of BAs for receiving a-mpdu frame. Limited by HW. </description_user>
            <type>uint16</type>
            <default>0x20</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamMPDUSS" psid="2290">
            <description_user>minimum MPDU start spacing of the MPDUs receiver. Limited by HW. </description_user>
            <type>uint16</type>
            <default>0x08</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamETEActivated" psid="2289">
            <description_user>This MIB activates support for calculation of estimated throughput. This sorts all candidates by descending order of the throughput. </description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSupportedDataRates" psid="2041">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Defines the supported non-HT data rates. It is encoded as N+1 octets where the first octet is N and the subsequent octets each describe a single supported rate.</description_user>
            <units>500 kbps</units>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>16</range_max><default>{ 0x02, 0x04, 0x0b, 0x0c, 0x12, 0x16, 0x18, 0x24, 0x30, 0x48, 0x60, 0x6c }
            </default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiDualBandConcurrency" psid="6123">
            <description_user>Golden Certification MIB don't delete, change PSID or name. Identify whether the chip supports dualband concurrency or not (RSDB vs. VSDB). Set in the respective platform htf file.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiApOlbcDuration" psid="2076">
            <description_user>How long, in milliseconds, the AP enables reception of BEACON frames to perform Overlapping Legacy BSS Condition(OLBC). If set to 0 then OLBC is disabled.</description_user>
            <type>uint16</type>
            <default>300</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiApOlbcInterval" psid="2077">
            <description_user>How long, in milliseconds, between periods of receiving BEACON frames to perform Overlapping Legacy BSS Condition(OLBC). This value MUST exceed the OBLC duration MIB unifiApOlbcDuration. If set to 0 then OLBC is disabled.</description_user>
            <type>uint16</type>
            <default>2000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiDNSSupportActivated" psid="2078">
            <description_user>This MIB activates support for transmitting DNS frame via MLME.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiIgmpOffloadActivated" psid="2489">
            <description_user>Activate IGMP IPv4 Offloading.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMaxClient" psid="2550">
            <description_user>Restricts the maximum number of associated STAs for SoftAP.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>10</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiPMFAssociationComebackTimeDelta" psid="6050">
            <description_user>Timeout interval, in TU, for the TimeOut IE in the SA Query request frame.</description_user>
            <type>uint32</type>
            <default>1100</default>
            <nature>software</nature><module>mlme</module><!-- ap -->
        </config_element>
        <config_element name="unifiDefaultDwellTime" psid="2538">
            <description_user>Dwell time for frames that need a response but have no dwell time associated.</description_user>
            <type>uint16</type><units>TimeUnits</units>
            <range_min>1</range_min><default>50</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiSAEDwellTime" psid="2472">
            <description_user>Dwell time for SAE Auth frames.</description_user>
            <type>uint16</type><units>TimeUnits</units>
            <range_min>1</range_min><default>976</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- GO protection during scan -->
        <config_element name="unifiGOScanAbsenceDuration" psid="2548">
            <description_user>Duration of the Absence time to use when protecting P2PGO VIFs from scan operations. A value of 0 disables the feature.</description_user>
            <default>2</default>
            <units>beacon intervals</units>
           <type>uint16</type>
           <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiGOScanAbsencePeriod" psid="2549">
            <description_user>Period of the Absence/Presence times cycles to use when protecting P2PGO VIFs from scan operations.</description_user>
            <default>4</default>
            <units>beacon intervals</units>
           <type>uint16</type>
           <nature>software</nature><module>macrame</module>
        </config_element>
        <!-- AP protection during scan -->
        <config_element name="unifiAPScanAbsenceDuration" psid="2480">
            <description_user>Duration of the Absence time to use when protecting AP VIFs from scan operations. A value of 0 disables the feature.</description_user>
            <default>2</default>
            <units>beacon intervals</units>
           <type>uint16</type>
           <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiAPScanAbsencePeriod" psid="2481">
            <description_user>Period of the Absence/Presence times cycles to use when protecting AP VIFs from scan operations.</description_user>
            <default>4</default>
            <units>beacon intervals</units>
           <type>uint16</type>
           <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiGOCTWindowDuration" psid="2551">
            <description_user>Client Traffic Window in TU to be set for oppertunistic power save in P2PGO.This will help reduce the GO power consumption but may adversly affect P2PGO disconverability.</description_user>
            <type>uint16</type>
            <default>0</default>
            <units>TU</units>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiSuppressScanGONoaAnnounce" psid="2552">
            <description_user>Stop a p2p GO from sending NoA announcements when the GO needs to be absent for scanning purposes.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiGOCTWindowDelay" psid="2492">
            <description_user>Delay to apply Client Traffic Window in seconds for oppertunistic power save in P2PGO.</description_user>
            <type>uint16</type>
            <default>0</default>
            <units>seconds</units>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <!-- VHT Activation Control Elements -->
        <config_element name="unifiVhtActivated" psid="2045">
            <description_user>Activate VHT mode.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- end of VHT Activation Control Elements -->
        <config_element name="unifiTqamActivated" psid="2235">
            <description_user>Activate Vendor VHT IE for 256-QAM mode on 2.4GHz.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- end of TQAM / Vendor VHT IE -->
        <!-- HT Activation Control Elements -->
        <config_element name="unifiHtActivated" psid="2046">
            <description_user>Activate HT mode.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- end of HT Activation Control Elements -->
        <config_element name="unifiWipsActivated" psid="5050">
            <description_user>Activate Wips.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiSoftAp40MHzOn24G" psid="2029">
            <description_user>Enables 40MHz operation on 2.4GHz band for SoftAP.</description_user>
            <access_rights>read_only</access_rights>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifi24G40MHZChannels" psid="2035">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Enables 40Mz wide channels in the 2.4G band for STA. This can only be changed before STA is coonected.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTxUsingLdpcActivated" psid="5030">
            <description_user>LDPC will be used to code packets, for transmit only. If disabled, chip will not send LDPC coded packets even if peer supports it. To advertise reception of LDPC coded packets,enable bit 0 of unifiHtCapabilities, and bit 4 of unifiVhtCapabilities.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTxSGI20Activated" psid="5040">
            <description_user>SGI 20MHz will be used to code packets for transmit only. If disabled, chip will not send SGI 20MHz packets even if peer supports it. To advertise reception of SGI 20MHz packets, enable bit 5 of unifiHtCapabilities.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTxSGI40Activated" psid="5041">
            <description_user>SGI 40MHz will be used to code packets, for transmit only. If disabled, chip will not send SGI 40MHz packets even if peer supports it. To advertise reception of SGI 40MHz packets, enable bit 6 of unifiHtCapabilities.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTxSGI80Activated" psid="5042">
            <description_user>SGI 80MHz will be used to code packets, for transmit only. If disabled, chip will not send SGI 80MHz packets even if peer supports it. To advertise reception of SGI 80MHz packets, enable bit 5 of unifiVhtCapabilities.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTxSGI160Activated" psid="5043">
            <description_user>SGI 160/80+80MHz will be used to code packets, for transmit only. If disabled, chip will not send SGI 160/80+80MHz packets even if peer supports it. To advertise reception of SGI 160/80+80MHz packets, enable bit 6 of unifiVhtCapabilities.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMacAddressRandomisation" psid="5044">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Enabling Mac Address Randomisation to be applied for Probe Requests when scanning.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMacAddressRandomisationMask" psid="5047">
            <description_user>FW randomises MAC Address bits that have a corresponding bit set to 0 in the MAC Mask for Probe Requests. This excludes U/L and I/G bits which will be set to Local and Individual respectively.</description_user>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>6</range_max><default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature><module>mlme</module>
        </config_element>

        <config_element name="unifiMacSequenceNumberRandomisationActivated" psid="2020">
            <description_user>Enabling Sequence Number Randomisation to be applied for Probe Requests when scanning. Note: Randomisation only happens, if mac address gets randomised.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>

        <!-- Start of roaming-relevant MIBs -->
        <config_element name="unifiRoamingActivated" psid="2049">
            <description_user>Activate Roaming functionality</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamingLowLatencySoftRoamingAllowed" psid="2282">
            <description_user>Allow Soft Roaming functionality for some chipsets when the low latency mode is enabled.</description_user>
            <type>boolean</type>
            <access_rights>read_only</access_rights>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamSkipFTEmergencyRoam" psid="2390">
            <description_user>Skip roaming for FT 1x and PSK security in case of emergency roaming when we received deauthenitcation/Disassociation frames from the AP.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamingSoftRoamingActivatedWhenLCDIsOff" psid="2284">
            <description_user>Activate Soft Roaming functionality when the LCD is off.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamingSendDeauthWhenRoamingBack" psid="2285">
            <description_user>Send a deauthentication frame before sending an authentication frame when roaming back.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
          <config_element name="unifiRoamingInP2pActivated" psid="2090">
           <description_user>Activate Roaming in P2P.</description_user>
           <type>boolean</type>
           <default>true</default>
           <nature>software</nature><module>mlme</module>
          </config_element>
        <config_element name="unifiRoamRssiScanTrigger" psid="2050">
            <description_user>The RSSI value, in dBm, below which roaming scan shall start. </description_user>
            <type>int16</type>
            <units>dbm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-75</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamRssiScanTriggerReset" psid="2061">
            <description_user>The current channel Averaged RSSI value above which a RSSI triggered roaming scan shall stop, and the RSSI trigger shall be reset at its initial value. </description_user>
            <type>int16</type>
            <units>dbm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-70</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamRssiScanTriggerStep" psid="2062">
            <description_user>The delta to apply to unifiRoamRssiScanTrigger when no eligible candidate is found. </description_user>
            <type>uint16</type>
            <units>dbm</units>
            <range_min>0</range_min><range_max>10</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamCUScanTriggerHysteresis" psid="2051">
            <description_user>Hysteresis value that subtracted from unifiRoamCUScanTrigger will result in the CU value that will stop eventual CU scans. This is an SCSC addition to ensure scans are not started/ stopped in an excessive manner.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>255</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamCURssiScanTriggerHysteresis" psid="2056">
            <description_user>Hysteresis value that added to unifiRoamCURssiScanTrigger will result in the RSSI value that will stop eventual CU scans. This is an SCSC addition to ensure scans are not started/ stopped in an excessive manner.</description_user>
            <type>uint16</type>
            <units>dbm</units>
            <range_min>1</range_min><range_max>255</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamBackgroundScanPeriod" psid="2052">
            <description_user>The background scan period for cached channels.</description_user>
            <type>uint32</type>
            <units>microseconds</units>
            <range_min>1</range_min><default>120000000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamReScanPeriod" psid="2058">
            <description_user>The scan period for re-scanning cached channels.</description_user>
            <type>uint32</type>
            <units>microseconds</units>
            <range_min>1</range_min><default>10000000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamInactiveScanPeriod" psid="2059">
            <description_user>The scan period for the inactive scan.</description_user>
            <type>uint32</type>
            <units>microseconds</units>
            <range_min>1</range_min><default>10000000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamTargetRssiBeaconLost" psid="2299">
            <description_user>RSSI threshold under which candidate APs are not deemed eligible for Beacon Lost scans.</description_user>
            <type>int16</type>
            <range_min>-127</range_min><default>-75</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamTargetRssiEmergency" psid="2301">
            <description_user>RSSI threshold under which candidate APs are not deemed eligible for emergency roaming scans.</description_user>
            <type>int16</type>
            <range_min>-127</range_min><default>-75</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamConnectionQualityCheckWaitAfterConnect" psid="2506">
            <description_user>The amount of time a STA will wait after connection before starting to check the MLME-installed connection quality trigger thresholds</description_user>
            <type>uint16</type>
            <units>ms</units>
            <default>200</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRoamScanBand" psid="2055">
            <description_user>Indicates whether only intra-band or all-band should be used for roaming scan. 2 - Roaming across band 1 - Roaming within band</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>2</range_max><default>2</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamMode" psid="2060">
            <description_user>Enable/Disable host resume when roaming. 0: Wake up the host all the time. 1: Only wakeup the host if the AP is not white-listed. 2: Don't wake up the host.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2</range_max><default>1</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamEAPTimeout" psid="2065">
            <description_user>Timeout, in ms, for receiving the first EAP/EAPOL frame from the AP during roaming</description_user>
            <type>uint16</type>
            <access_rights>read_only</access_rights>
            <default>200</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamRSSIBoost" psid="2298">
            <description_user>The value in dBm of the RSSI boost for each band</description_user>
            <type>int16</type>
            <table_name>unifiRoamRSSIBoostTable</table_name>
            <default_list>
                <default index1="1">0</default>
                <default index1="2">0</default>
            </default_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamCuLocal" psid="2300">
            <description_user>Channel utilisation for the STA VIF, value 255=100% channel utilisation. - used for roaming</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>255</range_max><default>0</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRoamAPSelectDeltaFactor" psid="2302">
            <description_user>How much higher, in percentage points, does a candidate's score needs to be in order be considered an eligible candidate? A "0" value renders all candidates eligible. Please note this applies only to soft roams.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>20</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamAPSelectMinDeltaFactor" psid="2322">
            <description_user>The minimum score delta with which a candidate needs to be better to be considered as an eligible candidate. This prevents ping pong roaming. Please note this applies only to soft roams.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>10000</range_max><default>1500</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamCUWeight" psid="2303">
            <description_user>Weight of CUfactor, in percentage points, in AP selection algorithm.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>35</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamBtmAPSelectDeltaFactor" psid="2304">
            <description_user>Delta value applied to the score of the currently connected AP to determine candidates' eligibility threshold for BTM triggered roaming scans</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>0</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamBtmDisregardSelectionFactor" psid="2286">
            <description_user>Disregard the selection factor for BTM candidates.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamBtmForceAbridged" psid="2297">
            <description_user>Force abridged scan, no matter the abridged bit is set or not.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBtmDisassociationScanDelay" psid="2639">
            <description_user>Delay roaming scan to the expiration of Dissassociation Timer when disassociation is imminent.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamBtmQueryTimeout" psid="2640">
            <description_user>Wait time in seconds for a response to BTM Query.</description_user>
            <units>second</units>
            <type>uint16</type>
            <range_min>0</range_min><range_max>10</range_max><default>1</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamCUFactor" psid="2295">
            <description_user>Bi dimensional octet string table for allocating CUfactor to CU values. First index is the radio band, and the second will be CU table entry.
            The tables define the maximum CU value to which the values do apply(MAX CU), an OFFSET and an A value for the equation:
            CUfactor = OFFSET - A*(CU)/10
            </description_user>
            <type>octet_string</type>
            <table_name>unifiRoamCUFactorTable</table_name>
            <default_list>
                <default index1="1" index2="1">{0x09, 0x64, 0x00}</default>
                <default index1="1" index2="2">{0x45, 0x6F, 0x0D}</default>
                <default index1="1" index2="3">{0x65, 0x14, 0x00}</default>
                <default index1="2" index2="1">{0x1D, 0x64, 0x00}</default>
                <default index1="2" index2="2">{0x4F, 0x94, 0x10}</default>
                <default index1="2" index2="3">{0x65, 0x14, 0x00}</default>
            </default_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamRssiweight" psid="2305">
            <description_user>Weight of RSSI factor, in percentage points, in AP selection algorithm.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>65</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamRssiFactor" psid="2306">
            <description_user>Table allocating RSSIfactor to RSSI values range for each band.</description_user>
            <type>octet_string</type>
            <table_name>unifiRoamRssiFactorTable</table_name>
            <default_list>
                <!-- octet1: RSSIFactorValue
                     octet2: RSSIFactorScore
                -->
                <default index1="1" index2="1">{0xC9, 0x64}</default>
                <default index1="1" index2="2">{0xC4, 0x5A}</default>
                <default index1="1" index2="3">{0xBA, 0x3C}</default>
                <default index1="1" index2="4">{0xB0, 0x14}</default>
                <default index1="1" index2="5">{0xA6, 0x00}</default>
                <default index1="1" index2="6">{0x81, 0x00}</default>
                <default index1="2" index2="1">{0xC9, 0x64}</default> <!-- 5G -->
                <default index1="2" index2="2">{0xC4, 0x5A}</default>
                <default index1="2" index2="3">{0xBA, 0x3C}</default>
                <default index1="2" index2="4">{0xB0, 0x14}</default>
                <default index1="2" index2="5">{0xA6, 0x00}</default>
                <default index1="2" index2="6">{0x81, 0x00}</default>
            </default_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamRssiFactorFixedMultiplier" psid="2643">
            <description_user>Table allocating fixed multiplier used to calculate the RSSIfactorScore to RSSI values range for each band.</description_user>
            <type>int16</type>
            <table_name>unifiRoamRssiFactorFixedMultiplierTable</table_name>
            <default_list>
                <default index1="1" index2="1">0x00</default>
                <default index1="1" index2="2">0x02</default>
                <default index1="1" index2="3">0x03</default>
                <default index1="1" index2="4">0x04</default>
                <default index1="1" index2="5">0x02</default>
                <default index1="1" index2="6">0x00</default>
                <default index1="2" index2="1">0x00</default> <!-- 5G -->
                <default index1="2" index2="2">0x02</default>
                <default index1="2" index2="3">0x03</default>
                <default index1="2" index2="4">0x04</default>
                <default index1="2" index2="5">0x02</default>
                <default index1="2" index2="6">0x00</default>
            </default_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiFtmLegacyCalibration" psid="5333">
            <description_user>Table for legacy mode FTM calibration values.</description_user>
            <type>uint32</type>
            <table_name>unifiFtmLegacyCalibrationTable</table_name>
            <default_list>
                <default index1="1">10213333</default>    <!--20 MHz 5G calibration value-->
                <default index1="2">9873333</default>     <!--40 MHz 5G calibration value-->
                <default index1="3">9793333</default>     <!--80 MHz 5G calibration value-->
                <default index1="4">10213333</default>    <!--20 MHz 2G untested calibration value-->
                <default index1="5">9873333</default>     <!--40 MHz 2G untested calibration value-->
                <default index1="6">10213333</default>    <!--20 MHz 5G untested calibration value chan est-->
                <default index1="7">9873333</default>     <!--40 MHz 5G untested calibration value chan est-->
                <default index1="8">9793333</default>     <!--80 MHz 5G untested calibration value chan est-->
                <default index1="9">10213333</default>    <!--20 MHz 2G untested calibration value chan est-->
                <default index1="10">9873333</default>    <!--40 MHz 2G untested calibration value chan est-->
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFtmHtVhtCalibration" psid="5334">
            <description_user>Table for HT/VHT mode FTM calibration values.</description_user>
            <type>uint32</type>
            <table_name>unifiFtmHtVhtCalibrationTable</table_name>
            <default_list>
                <default index1="1">606666</default>    <!--20 MHz 5G calibration value-->
                <default index1="2">323333</default>    <!--40 MHz 5G calibration value-->
                <default index1="3">203333</default>    <!--80 MHz 5G calibration value-->
                <default index1="4">640800</default>    <!--20 MHz 2G calibration value-->
                <default index1="5">337467</default>    <!--40 MHz 2G calibration value-->
                <default index1="6">693333</default>    <!--20 MHz 5G calibration value chan est-->
                <default index1="7">366666</default>    <!--40 MHz 5G calibration value chan est-->
                <default index1="8">213333</default>    <!--80 MHz 5G calibration value chan est-->
                <default index1="9">713333</default>    <!--20 MHz 2G calibration value chan est-->
                <default index1="10">343333</default>   <!--40 MHz 2G calibration value chan est-->
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFtmChannelEstimate" psid="5335">
            <description_user>True if hardware channel estimate based FTM is enabled. False if software IQ capture based FTM is enabled</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRoamCURssiScanTrigger" psid="2307">
            <description_user>The current channel Averaged RSSI value below which a soft roaming scan shall initially start, providing high channel utilisation (see unifiRoamCUScanTrigger). This is a table indexed by frequency band.</description_user>
            <type>int16</type>
            <table_name>unifiRSSICURoamScanTriggerTable</table_name>
            <default_list>
                <default index1="1"> -60 </default>
                <default index1="2"> -70 </default>
            </default_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamCUScanTrigger" psid="2308">
            <description_user>BSS Load / Channel Utilisation trigger above which a soft roaming scan shall initially start. This is a table indexed by frequency band.</description_user>
            <type>uint16</type>
            <table_name>unifiRoamCUScanTriggerTable</table_name>
            <default_list>
                <default index1="1"> 70 </default>
                <default index1="2"> 70 </default>
            </default_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamBSSLoadMonitoringFrequency" psid="2309">
            <description_user>How often, in seconds, should the BSS load be monitored? - used for roaming</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>1</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamBSSCUTriggerFrequency" psid="2641">
            <description_user>How long, in seconds, should the BSS load be high before triggering roaming?</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamEapolTimeout" psid="2314">
            <description_user>Maximum time, in seconds, allowed for an offloaded Eapol (4 way handshake).</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamBlacklistSize" psid="2310">
            <description_user>Do not remove! Read by the host! And then passed up to the framework.</description_user>
            <type>uint16</type>
            <units>entries</units>
            <range_min>0</range_min><range_max>100</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamInactiveCount" psid="2319">
            <description_user>The number of packets over which the link is considered not idle.</description_user>
            <type>uint16</type>
            <units>number_of_packets</units>
            <range_min>0</range_min><range_max>1000</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamIdleVariationRssi" psid="2063">
            <description_user>Defines the maximum RSSI variation of the current link allowed during idle roam. This parameter ensures the device is stationary.</description_user>
            <type>uint16</type>
            <units>dBm</units>
            <range_min>0</range_min><range_max>100</range_max><default>8</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamIdleMinRssi" psid="2064">
            <description_user>Defines the minimum RSSI of the current link required to perform an idle roam.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-127</range_min><range_max>0</range_max><default>-65</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamIdleInactiveTime" psid="2066">
            <description_user>Defines the time interval during which the link needs to remain idle to perform an idle roam.</description_user>
            <type>uint16</type>
            <units>seconds</units>
            <range_min>0</range_min><range_max>100</range_max><default>5</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamIdleInactiveCount" psid="2071">
            <description_user>The number of packets over which the link is considered not idle.</description_user>
            <type>uint16</type>
            <units>number_of_packets</units>
            <range_min>0</range_min><range_max>100</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamIdleBand" psid="2073">
            <description_user>Specifies when connected on which band to run the Idle Roaming algorithm. 0 for None. 1 for 2.4GHz. 2 for 5GHz. 3 for All.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>3</range_max><default>1</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamIdleAPSelectDeltaFactor" psid="2074">
            <description_user>Delta value applied to the score of the currently connected AP to determine candidates' eligibility threshold for Idle period triggered roaming scans.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>0</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamSendInitFrameToGetNeighbors" psid="2525">
            <description_user>Golden Certification MIB don't delete, change PSID or name: The firmware can send a Neighbor request/ BTM query to get AP's neighbors. This frame upsets certification setups. Setting this MIB to false inhibits sending a Neighbor request/ BTM query to get AP's neighbors.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>

        <config_element name="unifiRoamNchoScanControl" psid="2067">
            <description_user>NCHO: Indicates which control path shall be evaluated in order to determine which channels should be scanned for NCHO scans.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module><!-- scan --><!-- roam -->
        </config_element>
        <config_element name="unifiRoamNchoDfsScanMode" psid="2068">
            <description_user>NCHO: Specifies how DFS channels should be scanned for roaming. For certification and Host use only.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2</range_max><default>1</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamNchoFullScanPeriod" psid="2053">
            <description_user>NCHO: Specifies the period at which the full channel scan shall be run. For certification and Host use only.</description_user>
            <type>uint32</type>
            <units>microseconds</units>
            <range_min>1</range_min><default>120000000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamNchoCachedScanPeriod" psid="2292">
            <description_user>NCHO: Specifies the period at which the cached channel scan shall be run. For certification and Host use only.</description_user>
            <type>uint32</type>
            <units>microseconds</units>
            <range_min>1</range_min><default>10000000</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamNchoScanMaxActiveChannelTime" psid="2057">
            <description_user>NCHO: Specifies the maximum time spent active scanning a channel.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <range_min>1</range_min><default>40</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoScanMaxPassiveChannelTime" psid="2644">
            <description_user>NCHO: Specifies the maximum time spent passive scanning a channel.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <range_min>1</range_min><default>130</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoScanNProbe" psid="2072">
            <description_user>NCHO: The number of ProbeRequest frames per channel.  </description_user>
            <type>uint16</type><default>2</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoScanHomeTime" psid="2069">
            <description_user>NCHO: The time, in TU, to spend NOT scanning during a HomeAway scan.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <range_min>40</range_min><default>45</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoScanHomeAwayTime" psid="2070">
            <description_user>NCHO: The time, in TU, to spend scanning during a HomeAway scan.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <range_min>40</range_min><default>100</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoRssiDelta" psid="2075">
            <description_user>NCHO: Specifies the RSSI delta at a potential candidate is deemed eligible.</description_user>
            <type>uint16</type>
            <units>dBm</units>
            <range_min>0</range_min><range_max>127</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamNchoRssiTrigger" psid="2092">
            <description_user>The current channel Averaged RSSI value below which a NCHO scan shall start.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-75</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoRssiTriggerHysteresis" psid="2093">
            <description_user>Hysteresis value that added to unifiRoamNchoRssiTrigger will result in the RSSI value that will stop eventual NCHO scans.</description_user>
            <type>uint16</type>
            <units>dBm</units>
            <range_min>0</range_min><range_max>127</range_max><default>5</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <config_element name="unifiRoamFtOverDsEnabled" psid="2378">
            <description_user>Enable roaming by FT over DS if BSS support it.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamFtOverDsMinRssi" psid="2379">
            <description_user>Defines the minimum RSSI of the roaming required to try 'FT over the DS'.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-70</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamWtcActivated" psid="2384">
            <description_user>If false, the FW shall ignore the Cisco VSIE(WTC) in received BTM Request frames.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamTargetRssiBTM" psid="2645">
            <description_user>Threshold for evaluating BTM roaming target for VIVO and MCD devices.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-83</default>
            <nature>software</nature><module>mlme</module><!-- scan -->
        </config_element>
        <!-- End of roaming-relevant MIBs -->
        <config_element name="unifiAlwaysIncludeOperatingModeNotification" psid="2380">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Always include OMN IE in the Assoc request frames.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- Start of EDCA cw(min/max), aifs config param -->
        <config_element name="unifiOverrideEDCAParamActivated" psid="2155">
            <description_user>Activate override of STA edca config parameters with unifiOverrideEDCAParam.
                default: True - for volcano, and False - for others
            </description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiOverrideEDCAParam" psid="2156">
            <description_user>EDCA Parameters to be used if unifiOverrideEDCAParamActivated is true, indexed by unifiAccessClassIndex
                octet 0 - AIFSN
                octet 1 - [7:4] ECW MAX [3:0] ECW MIN
                octet 2 ~ 3 - TXOP[7:0] TXOP[15:8] in 32 usec units for both non-HT and HT connections.
            </description_user>
            <access_rights>read_write</access_rights>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiOverrideEDCAParamTable</table_name>
            <default_list>
                <default index1="1">{ 0x0, 0x32, 0x0, 0x0 }</default>
                <default index1="2">{ 0x0, 0x32, 0x0, 0x0 }</default>
                <default index1="3">{ 0x0, 0x32, 0x0, 0x0 }</default>
                <default index1="4">{ 0x0, 0x32, 0x0, 0x0 }</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiNANDefaultEDCAParam" psid="6075">
            <description_user>EDCA Parameters to be used as the default in NAN, as there is no AP to specify them, indexed by unifiAccessClassIndex
                octet 0 - AIFSN
                octet 1 - [7:4] ECW MAX [3:0] ECW MIN
                octet 2 ~ 3 - TXOP[7:0] TXOP[15:8] in 32 usec units for both non-HT and HT connections.
            </description_user>
            <access_rights>read_write</access_rights>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiNANDefaultEDCAParamTable</table_name>
            <default_list>
                <default index1="1">{ 0x07, 0xa4, 0x00, 0x00 }</default>
                <default index1="2">{ 0x03, 0xa4, 0x00, 0x00 }</default>
                <default index1="3">{ 0x02, 0x43, 0x5e, 0x00 }</default>
                <default index1="4">{ 0x02, 0x32, 0x2f, 0x00 }</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <!-- End of EDCA cw(min/max), aifs config param -->

        <config_element name="unifiSetFixedAMPDUAggregationSize" psid="4152">
            <description_user>A non 0 value defines the max number of mpdus that a ampdu can have. A 0 value tells FW to manage the aggregation size.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>

        <config_element name="unifiRaaTxHostRate" psid="4148">
            <description_user>Fixed TX rate set by Host. Ideally this should be done by the driver. 0 means "host did not specified any rate".</description_user>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="false" ></function>
            </function_list>
            <!-- <default>16385</default> 11b 1M long preamble -->
            <!-- <default>32774</default> 11n MCS6 -->
            <!-- <default>32775</default> 11n MCS7 -->
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiWMMStallEnable" psid="4139">
            <description_user>Golden Certification MIB don't delete, change PSID or name: Enable workaround stall WMM traffic if the admitted time has been used up, used for certtification.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>1</default>
            <nature>software</nature>
        </config_element>

        <config_element name="unifiLaaNssSpeculationIntervalSlotTime" psid="2330">
            <description_user>For Link Adaptation Algorithm. It defines the repeatable amount of time, in ms, that
            firmware will start to send speculation frames for spatial streams.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
           <default>300</default>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiLaaNssSpeculationIntervalSlotMaxNum" psid="2331">
            <description_user>For Link Adaptation Algorithm. It defines the maximum number of speculation time slot
            for spatial stream.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>5</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLaaBwSpeculationIntervalSlotTime" psid="2332">
            <description_user>For Link Adaptation Algorithm. It defines the repeatable amount of time, in ms, that
            firmware will start to send speculation frames for bandwidth.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
           <default>300</default>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiLaaBwSpeculationIntervalSlotMaxNum" psid="2333">
            <description_user>For Link Adaptation Algorithm. It defines the maximum number of speculation time slot
            for bandwidth.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>8</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLaaMcsSpeculationIntervalSlotTime" psid="2334">
            <description_user>For Link Adaptation Algorithm. It defines the repeatable amount of time, in ms, that
            firmware will start to send speculation frames for MCS or rate index.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
           <default>100</default>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiLaaMcsSpeculationIntervalSlotMaxNum" psid="2335">
            <description_user>For Link Adaptation Algorithm. It defines the maximum number of speculation time slot
            for MCS or rate index.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLaaGiSpeculationIntervalSlotTime" psid="2336">
            <description_user>For Link Adaptation Algorithm. It defines the repeatable amount of time, in ms, that
            firmware will start to send speculation frames for guard interval.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
           <default>100</default>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiLaaGiSpeculationIntervalSlotMaxNum" psid="2337">
            <description_user>For Link Adaptation Algorithm. It defines the maximum number of speculation time slot
            for guard interval.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>50</default>
            <nature>software</nature>
        </config_element>

       <config_element name="unifiLaaProtectionConfigOverride" psid="2356">
            <description_user>Overrides the default Protection configuration.
            Only valid flags are DPIF_PEER_INFO_PROTECTION_TXOP_AMPDU and DPIF_PEER_INFO_PROTECTION_ALLOWED.
            Default allows protection code to work out the rules.
            If DPIF_PEER_INFO_PROTECTION_ALLOWED is unset, all protections are disabled.
            If DPIF_PEER_INFO_PROTECTION_TXOP_AMPDU is unset then, the first A-MPDU in the TxOp is no longer protected.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>6</default>
            <nature>software</nature><module>dplane</module>
        </config_element>

        <config_element name="UnifiLaaTxNssAllowedMode" psid="2338">
            <description_user>If non-zero,it constraites NSS mode used in LAA.
            Note that this MIB should be set before any connection is made.
                -   0 : This MIB is not used. LAA can use all possible NSS modes
                - 0x1 : Only 1SS mode can be used (only bit 0 is set)
                - 0x2 : Only 2SS mode can be used (only bit 1 is set)
                - 0x3 : Both 1SS and 2SS modes can be used (both bit 0 and 1 are set)
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>

        <config_element name="UnifiLaaTxDiversityBeamformEnabled" psid="2350">
            <description_user>For Link Adaptation Algorithm. It is used to enable or disable TX beamformer
            functionality.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaTxDiversityBeamformMinMcs" psid="2351">
            <description_user>For Link Adaptation Algorithm. TX Beamform is applied
            when MCS is same or larger than this threshold value.
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>2</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaTxDiversityFixMode" psid="2352">
            <description_user>For Link Adaptation Algorithm. It is used to fix TX diversity mode.
            With two antennas available and only one spatial stream used, then one of the
            following modes can be selected:
                - 0 : Not fixed. Tx diversity mode is automatically selected by LAA.
                - 1 : CDD fixed mode
                - 2 : Beamforming fixed mode
                - 3 : STBC fixed mode
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLaaSpeculationMaxTime" psid="2357">
            <description_user>For Link Adaptation Algorithm. It defines the maximum time interval
            (in milliseconds) between speculating. So if the interval is being scaled due to not
            being scheduled all the time, the speculation interval will not exceed this value, even
            when backing off.
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>5000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaAmpduInhibitTimeout" psid="2353">
            <description_user>When fallback rate for an A-MPDU retransmission is non-(V)HT, we need
            to disable A-MPDUs to transmit the MPDU(s) at that rate. LAA does this, and re-enabled
            A-MPDUs based on this timeout. Note that the timeout is examined only when the current
            rate changes, which signifies some change in the conditions or state machine.
            If set to 0, A-MPDUs will restored as soon as a rate with MCS>1 or BW>20 is installed.
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>20</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaRtsInhibitTimeout" psid="2355">
            <description_user>When RTS protection for an A-MPDU transmission fails UnifiLaaInhibitRtsCount
            successive times, we disable RTS. RTS is later re-enabled based on this timeout. Note that RTS
            may be controlled by other means, orthogonally to this feature, e.g. Coex may have disabled it.
            If set to 0, RTS will be restored only after a re-association.
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>20</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaInhibitRtsCount" psid="2354">
            <description_user>When RTS protection for an A-MPDU transmission fails UnifiLaaInhibitRtsCount
            successive times, we disable RTS.
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>32</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaAmpduInhibitRtsAlso" psid="2360">
            <description_user>When inhibiting A-MPDU also disable RTS </description_user>
            <type>boolean</type>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false" ></function>
                <function type="get" function_name="mibboolget" is_for_vif="false" ></function>
            </function_list>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaFixedMaxBandwidth" psid="4159">
            <description_user>Fix maximum allowed bandwidth for transmission.
                    - 20: allowed up to 20MHz
                    - 40: allowed up to 40MHz
                    - 80: allowed up to 80MHz
                    - others: maximum bandwidth is not fixed
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaMinMcsForBwChange" psid="4164">
            <description_user>LAA considers to drop bandwidth when MCS drops and hits the configured value.
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>1</default>
            <nature>software</nature>
        </config_element>
       <config_element name="UnifiLaaLocalBwControlEnable" psid="4161">
            <description_user>On the platform which supports secondary channel monitoring such as
            FlexiMAC, LAA can automatically adjust maximum allowed bandwidth to avoid long-delayed
            transmission due to busy secondary channels.
            </description_user>
            <type>boolean</type>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false" ></function>
                <function type="get" function_name="mibboolget" is_for_vif="false" ></function>
            </function_list>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaLocalBwBusyWeigh" psid="4162">
            <description_user>Weigh for busy secondary channel in LAA local BW control algorithm.
            0 means this value is not applied to firmware.
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiLaaLocalBwBusyLevelThres" psid="4163">
            <description_user>Busy level threshold by which LAA local BW control drops bandwidth.
            0 means this value is not applied to firmware.
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <!-- LAA end -->
        <!-- mibs for Fallback -->
        <config_element name="unifiFallbackShortFrameRetryDistribution" psid="4149">
            <description_user>Configure the retry distribution for fallback for short frames
                octet 0 - Number of retries for starting rate.
                octet 1 - Number of retries for next rate.
                octet 2 - Number of retries for next rate.
                octet 3 - Number of retries for next rate.
                octet 4 - Number of retries for next rate.
                octet 5 - Number of retries for last rate.
                If 0 is written to an entry then the retries for that rate will be the short retry limit minus the sum
                of the retries for each rate above that entry (e.g. 15 - 5). Therefore, this should always be the value for octet 4.
                Also, when the starting rate has short guard enabled, the number of retries in octet 1 will be used and
                for the next rate in the fallback table (same MCS value, but with sgi disabled) octet 0 number of retries will
                be used.</description_user>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>5</range_max><default>{0x3, 0x2, 0x2, 0x2, 0x1, 0x0}</default>
            <function_list>
                <function type="set" function_name="mibdplanefallbackset" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
       </config_element>
       <!-- mibs for Fallback end -->
       <!-- mibs for Dplane debug -->
       <config_element name="unifiDPlaneDebug" psid="6073">
            <description_user>Bit mask for turning on individual debug entities in
            the data_plane that if enabled effect throughput. See DPLP_DEBUG_ENTITIES_T in dplane_dplp_debug.h for bits.
            Default of 0x203 means dplp, ampdu and metadata logs are enabled.</description_user>
            <type>uint32</type>
            <default>0x203</default>
            <function_list>
                <function type="get" function_name="mibdplanedebugmaskget" is_for_vif="true" ></function>
                <function type="set" function_name="mibdplanedebugmaskset" is_for_vif="true" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <!-- mibs for Dplane debug -->
        <config_element name="unifiThroughputDebug" psid="2254">
            <description_user>is used to access throughput related counters that can help diagnose throughput problems.
            The index of the MIB will access different counters, as described in SC-506328-DD.
            Setting any index for a VIF to any value, clears all DPLP debug stats for the MAC instance used by the VIF.
            This is useful mainly for debugging LAA or small scale throughput issues that require short term
            collection of the statistics.</description_user>
            <type>uint16</type>
            <table_name>unifiThroughputDebugTable</table_name>
            <function_list>
                <function type="get" function_name="mibthroughputdiagnosticsget" is_for_vif="true" ></function>
                <function type="set" function_name="mibthroughputdiagnosticsset" is_for_vif="true" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
       <config_element name="unifiThroughputDebugReportInterval" psid="4153">
            <description_user>dataplane reports throughput diag report every this interval in msec.
            0 means to disable this report.
            </description_user>
            <type>uint16</type>
            <default>1000</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDphpHwMonitorLogEnable" psid="4165">
            <description_user>Enable/Disable DPHP HW Monitor Log</description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <!-- MIBs for Host Frame Statistics -->
        <config_element name="unifiFrameTXCounters" psid="2327">
            <description_user>Frame TX Counters used by the host. These are required by MCD.</description_user>
            <type>uint32</type>
            <table_name>unifiFrameTXCountersTable</table_name>
            <function_list>
                <function type="get" function_name="mib_frameTXcounters_get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFrameRXCounters" psid="2326">
            <description_user>Frame RX Counters used by the host. These are required by MCD. </description_user>
            <type>uint32</type>
            <table_name>unifiFrameRXCountersTable</table_name>
            <function_list>
                <function type="get" function_name="mib_frameRXcounters_get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiEnableMgmtTxPacketStats" psid="2249">
            <description_user>Consider management packets for TX stats counters</description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mib_mgmt_tx_packet_stats_set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiReadTxPacketStatsFromStaVif" psid="2248">
            <description_user>Read TX packet stats from VIF to avoid resetting of the counters during roaming - this is a Volcano requirement</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mib_tx_packet_stats_from_vif_set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiARPDetectResponseCounter" psid="2247">
            <description_user>Counter used to track ARP Response frame for Enhanced ARP Detect. This is required by Volcano. </description_user>
            <type>uint16</type>
            <default>0</default>
            <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <!-- MIBs for Link Layer Statistics -->
        <config_element name="unifiBeaconReceived" psid="2228">
            <description_user>Access point beacon received count from connected AP</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRadioLpRxRssiThresholdLower" psid="6028">
            <description_user>The lower RSSI threshold for switching between low power rx and normal rx.
            If the RSSI avg of received frames is lower than this value for a VIF, then that VIF will vote against using low-power radio RX.
            Low power rx could negatively influence the receiver sensitivity.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-75</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRadioLpRxRssiThresholdUpper" psid="6029">
            <description_user>The upper RSSI threshold for switching between low power rx and normal rx.
            If the RSSI avg of received frames is higher than this value for a VIF, then that VIF will vote in favour of using low-power radio RX.
            Low power RX could negatively influence the receiver sensitivity.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-65</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiUnsyncVifLnaEnabled" psid="6010">
            <description_user>Enable or disable use of the LNA for unsynchronised VIFs.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiLnaControlEnabled" psid="6013">
            <description_user>Enable dynamic switching of the LNA based on RSSI for synchronised VIFs.</description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiLnaControlEvaluationInterval" psid="6008">
            <description_user>Interval in milliseconds, for evaluating LNA control.</description_user>
            <range_min>0</range_min><range_max>65535</range_max><default>200</default>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <units>milliseconds</units>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiLnaControlRssiThresholds" psid="6009">
            <description_user>RSSI threshold table for dynamic switching of the LNA.Default values set to{-30,-40}</description_user>
            <type>octet_string</type>
            <units>dBm</units>
            <range_min>2</range_min><range_max>2</range_max>
            <table_name>unifiLnaControlRssiThresholdTable</table_name>
            <default_list>
                <default index1="1">{0xE2, 0xD8}</default>  <!--  default 2G     {-30, -40}   -->
                <default index1="2">{0xE2, 0xD8}</default>  <!--  default 5G     {-30, -40}   -->
                <default index1="3">{0xE2, 0xD8}</default>  <!--  11N_20MHZ 2G   {-30, -40}   -->
                <default index1="4">{0xE2, 0xD8}</default>  <!--  11N_20MHZ 5G   {-30, -40}   -->
                <default index1="5">{0xE2, 0xD8}</default>  <!--  11N_40MHZ 2G   {-30, -40}   -->
                <default index1="6">{0xE2, 0xD8}</default>  <!--  11N_40MHZ 5G   {-30, -40}   -->
                <default index1="7">{0xE2, 0xD8}</default>  <!--  11AC_20MHZ 2G  {-30, -40}   -->
                <default index1="8">{0xE2, 0xD8}</default>  <!--  11AC_20MHZ 5G  {-30, -40}   -->
                <default index1="9">{0xE2, 0xD8}</default>  <!--  11AC_40MHZ 2G  {-30, -40}   -->
                <default index1="10">{0xE2, 0xD8}</default>  <!--  11AC_40MHZ 5G {-30, -40}   -->
                <default index1="11">{0xE2, 0xD8}</default>  <!--  11AC_80MHZ 2G {-30, -40}   -->
                <default index1="12">{0xE2, 0xD8}</default>  <!--  11AC_80MHZ 5G {-30, -40}   -->
                <default index1="13">{0xE2, 0xD8}</default>  <!--  11AC_160MHZ 2G {-30, -40}   -->
                <default index1="14">{0xE2, 0xD8}</default>  <!--  11AC_160MHZ 5G {-30, -40}   -->
                <default index1="15">{0xE2, 0xD8}</default>  <!--  11AX_20MHZ 2G {-30, -40}   -->
                <default index1="16">{0xE2, 0xD8}</default>  <!--  11AX_20MHZ 5G {-30, -40}   -->
                <default index1="17">{0xE2, 0xD8}</default>  <!--  11AX_40MHZ 2G {-30, -40}   -->
                <default index1="18">{0xE2, 0xD8}</default>  <!--  11AX_40MHZ 5G {-30, -40}   -->
                <default index1="19">{0xE2, 0xD8}</default>  <!--  11AX_80MHZ 2G {-30, -40}   -->
                <default index1="20">{0xE2, 0xD8}</default>  <!--  11AX_80MHZ 5G {-30, -40}   -->
                <default index1="21">{0xE2, 0xD8}</default>  <!--  11AX_160MHZ 2G {-30, -40}   -->
                <default index1="22">{0xE2, 0xD8}</default>  <!--  11AX_160MHZ 5G {-30, -40}   -->
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiModemDesenseEnabled" psid="2160">
            <description_user>Enable dynamic desensing of the CCK and OFDM modems based on RSSI for STA VIFs.</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiModemDesenseOption" psid="2171">
            <description_user>Select which of the modems will be desensed. Only valid if unifiModemDesenseEnabled is set to true.
            Set the corresponding bit to enable
              0: CCK desense
              1: 2G4 OFDM desense
              2: 5G OFDM desense
              3: JD settings adjust for C1
              4: Suppress during connect
              5: 6G OFDM desense
            Also see unifiDesenseSelection</description_user>
            <type>uint16</type>
            <default>7</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiModemDesenseOffset" psid="2164">
            <description_user>The offset value for the CCK and 2G4 OFDM modem desensing.
            When the CCK and/or 2G4 OFDM modems are desensed, the desense value will be set to the averaged STA-AP RSSI less this parameter value. Only used when unifiModemDesenseEnabled is set to true.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>0</range_min><range_max>127</range_max><default>20</default>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiModemDesenseCap" psid="2165">
            <description_user>The upper limit for dynamic desensing of the CCK and 2G4 OFDM modem.
            The CCK and/or 2G4 OFDM modems will not be desensed to a value in excess of this parameter. Only used when unifiModemDesenseEnabled is set to true.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>0</range_max><default>-65</default>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiModemDesenseOffset5G" psid="2169">
            <description_user>The offset value for the CCK and OFDM modem desensing.
            When the 5G OFDM modem is desensed, the desense value will be set to the averaged STA-AP RSSI less this parameter value. Only used when unifiModemDesenseEnabled is set to true.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>0</range_min><range_max>127</range_max><default>20</default>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiModemDesenseCap5G" psid="2170">
            <description_user>The upper limit for dynamic desensing of the CCK and OFDM modem.
            The 5G OFDM modem will not be desensed to a value in excess of this parameter. Only used when unifiModemDesenseEnabled is set to true.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>0</range_max><default>-65</default>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiModemDesenseOffset6G" psid="2173">
            <description_user>The offset value for the CCK and OFDM modem desensing.
            When the 6G OFDM modem is desensed, the desense value will be set to the averaged STA-AP RSSI less this parameter value. Only used when unifiModemDesenseEnabled is set to true.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>0</range_min><range_max>127</range_max><default>20</default>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiModemDesenseCap6G" psid="2174">
            <description_user>The upper limit for dynamic desensing of the CCK and OFDM modem.
            The 6G OFDM modem will not be desensed to a value in excess of this parameter. Only used when unifiModemDesenseEnabled is set to true.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>0</range_max><default>-65</default>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
            <module>macrame</module>
        </config_element>
        <config_element name="unifiACRetries" psid="2229">
            <description_user>It represents the number of retransmitted frames under each ac priority
            (indexed by unifiAccessClassIndex). This number will wrap to zero after the range is exceeded.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiAcTxConfirmTable</table_name>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiACNoAcks" psid="2328">
            <description_user>It represents the number of frames without ACK for each AC priority
            (indexed by unifiAccessClassIndex). This number will wrap to zero after the range is exceeded.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiAcTxConfirmTable</table_name>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioOnTime" psid="2230">
            <description_user>msecs the radio is awake (32 bits number accruing over time). On multi-radio platforms an index to the radio instance is required</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRadioIDTable</table_name>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioTxTime" psid="2231">
            <description_user>msecs the radio is transmitting (32 bits number accruing over time). On multi-radio platforms an index to the radio instance is required</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRadioIDTable</table_name>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioRxTime" psid="2232">
            <description_user>msecs the radio is in active receive (32 bits number accruing over time). On multi-radio platforms an index to the radio instance is required</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRadioIDTable</table_name>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioScanTime" psid="2233">
            <description_user>msecs the radio is awake due to all scan (32 bits number accruing over time). On multi-radio platforms an index to the radio instance is required</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRadioIDTable</table_name>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioOnTimeNan" psid="2236">
            <description_user>msecs the radio is awake due to NAN operations (32 bits number accruing over time). On multi-radio platforms an index to the radio instance is required</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRadioIDTable</table_name>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPSLeakyAP" psid="2234">
            <description_user>AP evaluation state</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <default>0</default>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="true" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <!-- End of MIBs for Link Layer Statistics -->
        <config_element name="unifiRadioMeasurementActivated" psid="2043">
            <description_user>When TRUE Radio Measurements are supported.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRadioMeasurementCapabilities" psid="2044">
            <description_user>RM Enabled capabilities of the chip. See SC-503520-SP for further details.</description_user>
            <type>octet_string</type>
            <range_min>5</range_min><range_max>5</range_max><default>{ 0x73, 0x00, 0x01, 0x00, 0x04 }</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRMMaxMeasurementDuration" psid="5400">
            <description_user>Maximum measurement duration in milliseconds for operating channel measurements, i.e. maximum channel time duration for measurement scan</description_user>
            <type>uint16</type>
            <range_min>100</range_min><range_max>200</range_max><default>150</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRMMaxScanCacheTime" psid="5401">
            <description_user>Maximum period, in seconds, the Mlme Measurement will keep the scan result for beacon table mode. When set to zero, result never expires acting as a Golden Certification MIB for WFA VE Certification.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>120</range_max><default>60</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRMMaxScanCacheCount" psid="5402">
            <description_user>Maximum count the Mlme Measurement will maintain the scan result for beacon table mode.</description_user>
            <type>uint16</type>
            <range_min>10</range_min><range_max>150</range_max><default>70</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRMIgnoreIdleStaMode" psid="5403">
            <description_user>When set to true, ignore idle sta mode acting as a Golden Certification MIB for WFA VE Certification.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiScanMaxCacheCount" psid="5395">
            <description_user>Maximum count the Scan will maintain the scan result in cache. Zero to disable the caching.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>200</range_max><default>150</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiScanMaxCacheTime" psid="5396">
            <description_user>Maximum period, in seconds, the Scan will keep the scan result in cache.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>120</range_max><default>30</default>
            <units>seconds</units>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiOverrideDefaultBETXOP" psid="2365">
            <description_user>Golden Certification MIB don't delete, change PSID or name: When set to non-zero value then this will override the BE TXOP for 11g (in 32 usec units) to the value specified here.</description_user>
            <type>uint16</type>
            <default>78</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiOverrideDefaultBETXOPForHT" psid="2364">
            <description_user>When set to non-zero value then this will override the BE TXOP for 11n and higher modulations (in 32 usec units) to the value specified here.</description_user>
             <type>uint16</type>
            <default>171</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRTSDurationProtectsFullTXOP" psid="2359">
            <description_user>When set to true the RTS duration protects full TXOP. If false then it only covers from the RTS to the first BA, which may be followed by other bursted AMPDUs</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
                <function type="get" function_name="mibboolget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRXABBTrimSettings" psid="2366">
          <description_user>Various settings to change RX ABB filter trim behavior.</description_user>
            <type>uint32</type>
            <default>0</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioTrimsEnable" psid="2367">
          <description_user>A bitmap for enabling/disabling trims at runtime.  Check unifiEnabledTrims enum for description of the possible values.</description_user>
            <type>uint32</type>
            <default>0xfffffff0</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioCCAThresholds" psid="2368">
          <description_user>The wideband CCA ED thresholds so that the CCA-ED triggers at the regulatory value of -62 dBm.</description_user>
          <type>octet_string</type>
          <range_min>0</range_min><range_max>255</range_max>
          <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
          <table_name>unifiRadioCCAThresholdsTable</table_name>
          <default_list>
            <!-- A bug (SSB-37420) in the mib code means that if you want to use default octet strings in a table -->
            <!-- you need to specify at least two rows, so here we just provide two identical rows. -->
            <default index1="1">{ 0x01, 0x03, 0x07, 0x03, 0x03, 0x00, 0x16, 0x00, 0x30, 0x00, 0x16, 0x00, 0x30 }</default>
            <default index1="2">{ 0x02, 0x03, 0x07, 0x03, 0x03, 0x00, 0x16, 0x00, 0x30, 0x00, 0x16, 0x00, 0x30 }</default>
          </default_list>
          <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioTxIqDelay" psid="5117">
          <description_user>The differential delay applied between I and Q paths in Tx.</description_user>
          <type>octet_string</type>
          <range_min>0</range_min><range_max>255</range_max>
          <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
          <table_name>unifiRadioTxIqDelayTable</table_name>
          <default_list>
            <!-- A bug (SSB-37420) in the mib code means that if you want to use default octet strings in a table -->
            <!-- you need to specify at least two rows, so here we just provide two identical rows. -->
            <default index1="1">{ 0x01, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00}</default>
            <default index1="2">{ 0x02, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00}</default>
          </default_list>
          <nature>hardware</nature>
        </config_element>
        <config_element name="unifiNarrowbandCCAThresholds" psid="5099">
          <description_user>The narrowband CCA ED thresholds so that the CCA-ED triggers at the regulatory value of -62 dBm.</description_user>
          <type>octet_string</type>
          <range_min>0</range_min><range_max>255</range_max>
          <function type="set" function_name="mibhalmacmodemchangeparams" is_for_vif="false"></function>
          <table_name>unifiRadioCCAThresholdsTable</table_name>
          <default_list>
            <!-- A bug (SSB-37420) in the mib code means that if you want to use default octet strings in a table -->
            <!-- you need to specify at least two rows, so here we just provide two identical rows. -->
            <default index1="1">{ 0x01, 0x03, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03 }</default>
            <default index1="2">{ 0x02, 0x03, 0x06, 0x03, 0x01, 0x1f, 0x23, 0x1f, 0x23, 0x1f, 0x23, 0x1f, 0x23, 0x1f, 0x23, 0x1f, 0x23, 0x1f, 0x23, 0x1f, 0x23, 0x03 }</default>
          </default_list>
          <nature>hardware</nature>
        </config_element>

        <config_element name="unifiHardwarePlatform" psid="2369">
          <description_user>Hardware platform. This is necessary so we can apply tweaks to specific revisions, even though they might be running the same baseband and RF chip combination. Check unifiHardwarePlatform enum for description of the possible values.</description_user>
          <type>unifiHardwarePlatform</type>
          <default>0</default>
          <nature>hardware</nature>
        </config_element>
        <config_element name="unifiEnableFemRfLoopback" psid="5133">
            <description_user>Enable RF loopback from a suitably equipped external PA.</description_user>
            <description_internal>Bitmask of frequency bands.  Set bit position to enable RF loopback.  The bit position used for each band is expected to correspond to '1' left shifted by the values of the enum radio_shared_frequency_band.</description_internal>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDPDTrainingDuration" psid="2371">
          <description_user>Duration of DPD training (in ms).</description_user>
          <type>uint16</type>
          <default>10</default>
          <function_list>
                <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false"></function>
          </function_list>
          <nature>hardware</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiCurrentBssNss" psid="2312">
            <description_user>Specifies current AP antenna mode: BIG DATA
            0 = SISO,
            1 = MIMO (2x2),
            2 = MIMO (3x3),
            3 = MIMO (4x4)</description_user>
            <access_rights>read_only</access_rights>
            <type>unifiAntennaMode</type>
            <function_list>
                <function type="get" function_name="mlmegetcurrentbssnss" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiCurrentBssBandwidth" psid="2317">
            <description_user>Current bandwidth the STA is operating on
            channel_bw_20_mhz   = 20,
            channel_bw_40_mhz   = 40,
            channel_bw_80_mhz   = 80,
            channel_bw_160_mhz  = 160</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mlmegetcurrentbssbandwidth" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiCurrentBssChannelFrequency" psid="2318">
            <description_user>Centre frequency for the connected channel</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mlmegetcurrentbsschannelfreq" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTestSetMaxBandwidth" psid="2287">
            <description_user>Golden Certification MIB don't delete, change PSID or name.
            Set the maximum bandwidth for a vif Setting it to 0 uses the default bandwidth as selected by firmware.
            channel_bw_20_mhz   = 20,
            channel_bw_40_mhz   = 40,
            channel_bw_80_mhz   = 80,
            channel_bw_160_mhz  = 160</description_user>
            <type>uint16</type>
            <default>0</default>
           <function_list>
               <function type="set" function_name="mlmetestsetmaxbw" is_for_vif="false"></function>
           </function_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiStaVifLinkNss" psid="2324">
            <description_user>STA Vif (Not P2P) while connected to an AP and does not apply to TDLS links. Specifies the max number of NSS that the link can use: BIG DATA
            0 = SISO,
            1 = MIMO (2x2),
            2 = MIMO (3x3),
            3 = MIMO (4x4)</description_user>
            <access_rights>read_only</access_rights>
            <type>unifiAntennaMode</type>
            <default>0</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiAPMimoUsed" psid="2313">
            <description_user>AP uses MU-MIMO</description_user>
            <access_rights>read_only</access_rights>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiHostNumAntennaControlActivated" psid="2091">
            <description_user>Host has a control of number of antenna to use</description_user>
            <access_rights>read_only</access_rights>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRoamingCount" psid="2315">
            <description_user>Number of roams</description_user>
            <type>uint16</type>
            <access_rights>read_only</access_rights>
            <default>0</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamingAKM" psid="2316">
            <description_user>specifies current AKM
            0 = None
            1 = OKC
            2 = FT (FT_1X)
            3 = PSK
            4 = FT_PSK
            5 = PMKSA Caching</description_user>
            <access_rights>read_only</access_rights>
            <type>unifiRoamingAKM</type>
            <default>0</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTPCEnabled" psid="6019">
            <description_user> Deprecated. Golden Certification MIB don't delete, change PSID or name </description_user>
            <type>boolean</type><nature>software</nature>
        </config_element>
        <config_element name="unifiTestTspecHack" psid="6060">
            <description_user>Test only: Hack to allow in-house tspec testing</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTestTspecHackValue" psid="6061">
            <description_user>Test only: Saved dialog number of tspec request action frame from the Host</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiTestScanNoMedium" psid="6122">
            <description_user>Test only: Stop Scan from using the Medium to allow thruput testing.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiBlockScanAfterNumSchedVif" psid="2272">
            <description_user>Block Scan requests from having medium time after a specified amount of sync VIFs are schedulable. A value of 0 disables the functionality.</description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiNonLteUspboConfig" psid="2267">
            <description_user>Deprecated. Configuration bitmap for non-LTE BlockACK control.
            bit0: If the bit value is 1, then preserve RX BA agreements during USPBO. If the bit value is 0, then RX BA agreements will be suppressed during USPBO
            bit1: If the bit value is 1, then preserve TX BA agreements during USPBO. If the bit value is 0, then TX BA agreements will be suppressed during USPBO
            bit2-bit15: reserved
            </description_user>
            <type>uint16</type>
            <default>0x00</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>

        <!-- ******************************************************************************************* -->
        <config_element name="hutsReadWriteDataElementInt32" psid="6100">
            <description_user>Reserved for HUTS tests - Data element read/write entry of int32 type.</description_user>
            <type>uint32</type>
            <range_min>0</range_min><range_max>4294967295</range_max><default>1000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteDataElementBoolean" psid="6101">
            <description_user>Reserved for HUTS tests - Data element read/write entry of boolean type.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteDataElementOctetString" psid="6102">
            <description_user>Reserved for HUTS tests - Data element read/write entry of octet string type.</description_user>
            <type>octet_string</type>
            <range_min>9</range_min><range_max>9</range_max>
            <default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteTableInt16Row" psid="6103">
            <description_user>Reserved for HUTS tests - Data element read/write entry table of int16 type.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <range_min>-32768</range_min><range_max>32767</range_max>
            <table_name>hutsReadWriteTableInt16IdTable</table_name>
            <function type="get" function_name="mibhutsint16get" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteTableOctetStringRow" psid="6104">
            <description_user>Reserved for HUTS tests - Data element read/write entry table of octet string type.</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>73</range_max>
            <table_name>hutsReadWriteTableOctetStringTable</table_name>
            <default_list>
                <!-- Row 1 -->
                <default index1="1">{0x53,0x54,0x70,0x73,0x74,0x75,0x7A,0x7B,0x7C,
                                     0x7D,0x7E,0x7F,0x80,0x81,0x82}</default>
                <!-- Row 2 -->
                <default index1="2">{0x01,0x02,0x03,0x05,0x06,0x07,0x08,0x09,0x0A,0x10,
                                     0x11,0x80,0x81,0x82}</default>
                <!-- Row 3 -->
                <default index1="3">{0x01,0x03,0x05,0x16,0x17,0x19,0x1A,0x1B,0x1C,0x1E,
                                     0x1F,0x20,0x21,0x80,0x81,0x82}</default>
                <!-- Tow 4 -->
                <default index1="4">{0x01,0x02,0x03,0x04,0x05,0x06,0x20,0x21,0x24,0x25,
                                     0x26,0x29,0x2A,0x2B,0x3A,0x80,0x81,0x82}</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteRemoteProcedureCallInt32" psid="6105">
            <description_user>Reserved for HUTS tests - Remote Procedure call read/write entry of int32 type.</description_user>
            <type>uint32</type>
            <default>0x000A0001</default>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteRemoteProcedureCallOctetString" psid="6107">
            <description_user>Reserved for HUTS tests - Remote Procedure call read/write entry of octet string type.</description_user>
            <type>octet_string</type>
            <range_min>144</range_min><range_max>144</range_max>
            <function_list>
                <function type="get" function_name="miboctetstringget"></function>
                <function type="set" function_name="miboctetstringset"></function>
            </function_list>
            <table_name>hutsReadWriteRPCTableOctetStringTable</table_name>
            <nature>software</nature>
        </config_element>
       <config_element name="hutsReadWriteInternalAPIInt16" psid="6108">
            <description_user>Reserved for HUTS tests - Data element read/write entry of int16 type via internal API.</description_user>
            <default>-55</default>
            <type>int16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIUint16" psid="6109">
            <description_user>Reserved for HUTS tests - Data element read/write entry of unsigned int16 type via internal API.</description_user>
            <type>uint16</type>
            <default>0x0730</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIUint32" psid="6110">
            <description_user>Reserved for HUTS tests - Data element read/write entry of unsigned int32 type via internal API.</description_user>
            <units>&#x00b5;s</units>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>30000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIInt64" psid="6111">
            <description_user>Reserved for HUTS tests - Data element read/write entry of int64 type via internal API.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <function_list>
                <function type="get" function_name="mibtsftime" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIBoolean" psid="6112">
            <description_user>Reserved for HUTS tests - Data element read/write entry of boolean type via internal API.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIOctetString" psid="6113">
            <description_user>Reserved for HUTS tests - Data element read/write entry of octet string type via internal API.</description_user>
            <type>octet_string</type>
            <range_min>8</range_min><range_max>8</range_max>
            <default>{ 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <!-- Index -->
        <config_element name="hutsReadWriteTableInt16" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="hutsReadWriteTableOctetString" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="hutsReadWriteRPCTableOctetStringTableIndex0" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="hutsReadWriteRPCTableOctetStringTableIndex1" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixedSizeTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIVarSizeTableindex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKeysindex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixVarSizeTableKeysIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKeyIndex1" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>1</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKeyIndex2" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>6</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIVarSizeTableKeyIndex1" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>3</range_max>
            <description_user>group index</description_user>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIVarSizeTableKeyIndex2" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>3</range_max>
            <description_user>temperature index</description_user>
        </config_element>
        <!-- Columns -->
        <config_element name="hutsReadWriteInternalAPIFixedSizeTableRow" psid="6114">
          <description_user>Reserved for HUTS tests - Fixed size table rows of int16 type via internal API</description_user>
          <type>int16</type>
          <range_min>0</range_min><range_max>100</range_max>
          <table_name>hutsReadWriteInternalAPIFixedSizeTable</table_name>
          <default_list>
            <default index1="1"> 80 </default>
            <default index1="2"> 80 </default>
            <default index1="3"> 80 </default>
            <default index1="4"> 80 </default>
          </default_list>
          <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIVarSizeTableRow" psid="6115">
          <description_user>Reserved for HUTS tests - Variable size table rows of octet string type via internal API</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>73</range_max>
            <table_name>hutsReadWriteInternalAPIVarSizeTable</table_name>
            <default_list>
            <!-- Row 1 -->
            <default index1="1">{0x53,0x54,0x70,0x73,0x74,0x75,0x7A,0x7B,0x7C,
                                 0x7D,0x7E,0x7F,0x80,0x81,0x82}</default>
            <!-- Row 2 -->
            <default index1="2">{0x01,0x02,0x03,0x05,0x06,0x07,0x08,0x09,0x0A,0x10,
                                 0x11,0x80,0x81,0x82}</default>
            <!-- Row 3 -->
            <default index1="3">{0x01,0x03,0x05,0x16,0x17,0x19,0x1A,0x1B,0x1C,0x1E,
                                 0x1F,0x20,0x21,0x80,0x81,0x82}</default>
            <!-- Row 4 -->
            <default index1="4">{0x01,0x02,0x03,0x04,0x05,0x06,0x20,0x21,0x24,0x25,
                                 0x26,0x29,0x2A,0x2B,0x3A,0x80,0x81,0x82}</default>
            </default_list>
            <nature>software</nature>
         </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKey1Row" psid="6116">
          <description_user>Reserved for HUTS tests - Fixed size table rows of int16 type via internal API</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>hutsReadWriteInternalAPIFixSizeTableKeys</table_name>
            <function_list>
                <function type="get" function_name="mibhutsint16get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKey2Row" psid="6117">
          <description_user>Reserved for HUTS tests - Fixed size table rows of int16 type via internal API</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>hutsReadWriteInternalAPIFixSizeTableKeys</table_name>
            <function_list>
                <function type="get" function_name="mibhutsint16get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixVarSizeTableKey1Row" psid="6118">
            <description_user>The values stored in hutsReadWriteInternalAPIFixVarSizeTableKeys</description_user>
            <type>uint32</type>
            <table_name>hutsReadWriteInternalAPIFixVarSizeTableKeys</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixVarSizeTableKey2Row" psid="6119">
            <description_user>The values stored in hutsReadWriteInternalAPIFixVarSizeTableKeys</description_user>
            <type>octet_string</type>
            <table_name>hutsReadWriteInternalAPIFixVarSizeTableKeys</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKeyRow" psid="6120">
            <description_user>The number of received MPDUs discarded by the CCMP decryption algorithm.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <table_name>hutsReadWriteInternalAPIFixSizeTableKeyRowTable</table_name>
            <function type="get" function_name="mibtsftime"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIVarSizeTableKeyRow" psid="6121">
            <description_user>Write a DPD LUT entry</description_user>
            <type>octet_string</type>
            <range_min>144</range_min><range_max>144</range_max>
            <function_list>
                <function type="get" function_name="miboctetstringget"></function>
                <function type="set" function_name="miboctetstringset"></function>
            </function_list>
            <table_name>hutsReadWriteInternalAPIVarSizeTableKeyTable</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCUMeasurementInterval" psid="2311">
            <description_user>The interval in ms to perform the channel usage update</description_user>
            <type>uint32</type>
            <range_min>1</range_min><range_max>1000</range_max><default>500</default>
            <nature>software</nature><module>dplane</module>
        </config_element>
        <config_element name="unifiChannelBusyThreshold" psid="2018">
            <description_user>The threshold in percentage of CCA busy time when a channel would be considered busy</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>100</range_max><default>25</default>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiDebugDisableRadioNannyActions" psid="5082">
            <description_user>Bitmap to disable the radio nanny actions. B0==radio 0, B1==radio 1</description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false"></function>
                <function type="set" function_name="mibricechangenonfsmparams"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxCckModemSensitivity" psid="5083">
            <description_user>Specify values of CCK modem sensitivity for scan, normal and low
                              sensitivity.</description_user>
            <description_internal>Enables sensitivity thresholds to be updated.  Default values are
                                  written into modem_settings in halmac_modem_radio_config.c when
                                  the structure is initialised.
                                  The string of 6 octets is assigned as follows:
                                  0:    cck_sync, scan sensitivity.
                                  1:    cck_sync, normal sensitivity.
                                  2:    cck_sync, low sensitivity.
                                  3:    cck_cca, scan sensitivity.
                                  4:    cck_cca, normal sensitivity.
                                  5:    cck_cca, low sensitivity.
            </description_internal>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>6</range_max>
            <function type="set" function_name="mibhalmacmodemgenericset"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxCckModemDesense" psid="5123">
            <description_user>Specify values of CCK modem desense level, wlanlite only.</description_user>
            <description_internal>Allows cck modem desense value to be updated (dBm * 256).
                                  This updates the desense target level in the halmac_desense_info
                                  structure. The octet string is assigned as follows:
                                  0:    signed cck desense target (dBm), most significant octet.
                                  1:    signed cck desense target (dBm), least significant octet.
                                  2:    mask for enables, see halmac_desense_mask_t.
                                  3:    Radio_bm a bitmap to indicate which radio is being tested
                                        0x01 = radio0, 0x02 = radio1, and both = 0x03 (MIMO).
                                  4:    Channel frequency (MHz), most significant octet.
                                  5:    Channel frequency (MHz), least significant octet.
            </description_internal>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>6</range_max>
            <function type="set" function_name="mibhalmacmodemgenericset"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxCckModemDesenseOffset" psid="5124">
            <description_user>Set 11b calibration offset fine adjust for unifiRxCckModemDesense, wlanlite only.</description_user>
            <description_internal>Desense 11b calibration offset accuracy fine adjust (+/- dB * 256).
                                  Allows 11b modem offset fine adjust value to be updated for better
                                  accuracy. Default values are written into halmac_desense_info
                                  in halmac_modem_mib.c when the desense structure is
                                  initialised.
            </description_internal>
            <type>int16</type>
            <function_list>
                <function type="set" function_name="mibhalmacmodemgenericset" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxOfdmModemDesense" psid="5125">
            <description_user>Specify values of OFDM modem desense level, wlanlite only.</description_user>
            <description_internal>Allows ofdm modem desense values to be updated (dBm * 256).
                                  This updates the desense target level in the halmac_desense_info
                                  structure. The octet string is assigned as follows:
                                  0:    signed ofdm desense target (dBm), most significant octet.
                                  1:    signed ofdm desense target (dBm), least significant octet.
                                  2:    mask for enables, see halmac_desense_mask_t.
                                  3:    Radio_bm a bitmap to indicate which radio is being tested
                                        0x01 = radio0, 0x02 = radio1, and both = 0x03 (MIMO).
                                  4:    Channel frequency (MHz), most significant octet.
                                  5:    Channel frequency (MHz), least significant octet.
            </description_internal>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>6</range_max>
            <function type="set" function_name="mibhalmacmodemgenericset"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxOfdmModemDesenseOffset" psid="5126">
            <description_user>Set ofdm calibration offset fine adjusts for unifiRxOfdmModemDesense, wlanlite only.</description_user>
            <description_internal>Desense ofdm calibration offset accuracy fine adjust (+/- dB * 256).
                                  Allows ofdm modem offset fine adjust values to be updated for better
                                  accuracy. Default values are written into halmac_desense_info in
                                  halmac_modem_mib.c when the structure is initialised.
                                  The string of 4 octets is assigned as follows:
                                  0:    signed 2g ofdm magic offset, most significant octet.
                                  1:    signed 2g ofdm magic offset, least significant octet.
                                  2:    signed 5g ofdm magic offset, most significant octet.
                                  3:    signed 5g ofdm magic offset, least significant octet.
            </description_internal>
            <type>octet_string</type>
            <range_min>4</range_min><range_max>4</range_max>
            <function type="set" function_name="mibhalmacmodemgenericset"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDpdPerBandwidth" psid="5084">
            <description_user>Bitmask to enable Digital Pre-Distortion per bandwidth</description_user>
            <description_internal>Enables DPD per bandwidth per band</description_internal>
            <type>uint16</type>
            <default>0xffff</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiBBVersion" psid="5085">
            <description_user>Baseband chip version number determined by reading BBIC version</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiIQBufferSize" psid="5098">
            <description_user>Buffer Size for IQ capture to allow CATs to read it.</description_user>
            <description_internal>Returns the buffer size in bytes for current device</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibriceuint32get" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRFVersion" psid="5086">
            <description_user>RF chip version number determined by reading RFIC version</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioTXSettingsRead" psid="5089">
            <description_user>Read value from Tx settings, rfchip up to and including S620.</description_user>
            <description_internal> Read TX debug settings. </description_internal>
            <access_rights>read_only</access_rights>
            <table_name>unifiRadioTXSettingsTable</table_name>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibriceuint32get"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioTXSettingsReadV2" psid="5122">
            <description_user>Read value from Tx settings, rfchip S621 onwards.</description_user>
            <description_internal> Read TX debug settings. </description_internal>
            <access_rights>read_only</access_rights>
            <table_name>unifiRadioTXSettingsTableV2</table_name>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibriceuint32get"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioRXSettingsRead" psid="5096">
            <description_user>Read value from Rx settings.</description_user>
            <description_internal> Read RX debug settings. </description_internal>
            <access_rights>read_only</access_rights>
            <table_name>unifiRadioRXSettingsTable</table_name>
            <type>octet_string</type>
            <function_list>
                <function type="get" function_name="mibbmsgget"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioCCADebug" psid="5100">
            <description_user>Read values from Radio CCA settings.</description_user>
            <access_rights>read_only</access_rights>
            <table_name>unifiRadioCCADebugTable</table_name>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibriceuint32get"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiNarrowbandCCADebug" psid="5107">
            <description_user>Read values from Radio CCA settings.</description_user>
            <access_rights>read_only</access_rights>
            <table_name>unifiNarrowbandCCADebugTable</table_name>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibhalmacmodemnarrowbandcca"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioRxDcocDebug" psid="5112">
            <description_user>RX DCOC debug testing. Allows user to override LUT index IQ values in combination with unifiRadioRxDcocDebugIqValue. This MIB enables the feature.</description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false" ></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioRxDcocDebugIqValue" psid="5111">
            <description_user>RX DCOC debug testing. Allows user to override LUT index IQ values in combination with unifiRadioRxDcocDebug. This MIB sets IQ value that all LUT index Is and Qs get set to.</description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false" ></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiNannyRetrimDpdMod" psid="5113">
            <description_user>Bitmap to selectively enable nanny retrim of DPD per modulation. B0==OFDM0, B1==OFDM1, B2==CCK</description_user>
            <type>uint16</type>
            <default>2</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDisableDpdSubIteration" psid="5114">
            <description_user>For Engineering debug use only.</description_user>
            <description_internal>When set "true" this MIB disables the use of sub-iterations within the DPD trim. This "feature" is intended for debug purposes only, e.g. for stepping through code. In normal usage, sub-iterations should remain enabled. This is achieved by leaving this mib set to "false" (default state).</description_internal>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxPriEnergyDetThreshold" psid="5093">
            <description_user>OBSOLETE. Energy detection threshold for primary 20MHz channel.</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxSecEnergyDetThreshold" psid="5094">
            <description_user>OBSOLETE. Energy detection threshold for secondary 20MHz channel.</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTrafficThresholdToSetupBA" psid="2222">
           <description_user>Sets the default Threshold (as packet count) to setup BA agreement per TID.</description_user>
           <type>uint32</type>
           <default>100</default>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiModemSgiOffset" psid="5090">
            <description_user>Overwrite SGI sampling offset. Indexed by Band and Bandwidth. Defaults currently defined in fw.</description_user>
            <table_name>unifiModemSgiOffsetTable</table_name>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibhalmacmodemgenericset" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxRadioCsMode" psid="5092">
            <description_user>OBSOLETE. Configures RX Radio CS detection for 80MHz bandwidth.</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioTxPowerOverride" psid="5091">
            <description_user>Option in radio code to override the power requested by the upper layer</description_user>
            <access_rights>read_write</access_rights>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max>
            <table_name>unifiRadioTxPowerOverrideTable</table_name>
            <function_list>
              <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
              <function type="get" function_name="mibint16get" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDebugSVCModeStackHighWaterMark" psid="5010">
            <description_user>Read the SVC mode stack high water mark in bytes</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiAPFActivated" psid="2650">
            <description_user>It is used to enable or disable Android Packet Filter(APF).</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiAPFVersion" psid="2651">
           <description_user>APF version currently supported by the FW.</description_user>
           <type>uint16</type>
           <default>4</default>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiAPFMaxSize" psid="2652">
            <description_user>Max size in bytes supported by FW per VIF. Includes both program len and data len.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <default>1024</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiAPFActiveModeEnabled" psid="2653">
            <description_user>Indicates if APF is supported in host active mode. Applicable to only group addressed frames.</description_user>
            <type>uint16</type>
            <default>1</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSMPowerSaveMode" psid="2670">
            <description_user>Config SM Power Save mode capability
                Input:
                0 : Static
                1 : Dynamic
                2 : No Limit
                3 : Disabled
            </description_user>
            <type>uint16</type>
            <default>3</default>
            <range_min>0</range_min><range_max>3</range_max>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiNannyTrimNow" psid="5130">
            <description_user>Trigger Nanny retrim with next timer tick</description_user>
            <description_internal>Bitmask of trims to be recalibrated with nanny. For the list of trims see halradio_trim_type_mask.</description_internal>
            <type>uint32</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiMapRadioIdToMacId" psid="5131">
            <description_user>Convert radio_id to mac_id</description_user>
            <description_internal>Reading index radio_id+1 returns mac_id. Only valid when radio on. On error returns 2.</description_internal>
            <type>uint16</type>
            <table_name>unifiRadioIDTable</table_name>
            <function_list>
                <function type="get" function_name="mibhalmacmodemgenericget" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioTrimCount" psid="5134">
            <description_user>Radio trims since service start</description_user>
            <description_internal>Radio trims since service start. Special value of 0xffff ffff means radio operation in progress</description_internal>
            <type>uint32</type>
            <table_name>unifiRadioIDTable</table_name>
            <function_list>
                <function type="get" function_name="mibriceuint32get"></function>
            </function_list>
            <nature>software</nature>
        </config_element>

        <!-- ******************************************************************************************* -->
        <config_element name="unifiHtCapabilities5G" psid="2026">
            <description_user>Deprecated.</description_user><type>octet_string</type><access_rights>not_accessible</access_rights><nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiVhtCapabilities5G" psid="2027">
            <description_user>Deprecated.</description_user><type>octet_string</type><access_rights>not_accessible</access_rights><nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiRoamSoftRoamingEnabled" psid="2054">
            <description_user>Deprecated</description_user><type>boolean</type><nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanMaxNumberOfProbeSets" psid="2087">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanMaximumAge" psid="2014">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEAutonomousScanNoisy" psid="2016">
            <description_user>Deprecated</description_user><type>boolean</type><nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanProbeInterval" psid="2007">
            <description_user>Deprecated.</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiTdlsBasicHtMcsSet" psid="2563">
            <description_user>Deprecated</description_user><type>octet_string</type><nature>software</nature>
        </config_element>
        <config_element name="unifiTdlsBasicVhtMcsSet" psid="2564">
            <description_user>Deprecated</description_user><type>octet_string</type><nature>software</nature>
        </config_element>
        <config_element name="dot11TDLSChannelSwitchActivated" psid="2567">
            <description_user>Deprecated</description_user><type>boolean</type><nature>software</nature>
        </config_element>
        <config_element name="unifiTdlsDesignForTestMode" psid="2568">
            <description_user>Deprecated</description_user><type>uint32</type><nature>software</nature>
        </config_element>
        <config_element name="unifiTdlsMaximumRetry" psid="2561">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEConnectionTimeOut" psid="2000">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxNumberOfPeriodicScans" psid="2260">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxRSSISampleSize" psid="2261">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxHotlistAPs" psid="2262">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxSignificantWifiChangeAPs" psid="2263">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxBssidHistoryEntries" psid="2264">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiSetResponseRate" psid="2268">
            <description_user>Forces the response rate to the one of the selected or lower than rx frame
               A bitmask of following rates
                MAC_BASIC_RATE11A_06MBPS_MASK                                                    = 0x0001,
                MAC_BASIC_RATE11A_09MBPS_MASK                                                    = 0x0002,
                MAC_BASIC_RATE11A_12MBPS_MASK                                                    = 0x0004,
                MAC_BASIC_RATE11A_18MBPS_MASK                                                    = 0x0008,
                MAC_BASIC_RATE11A_24MBPS_MASK                                                    = 0x0010,
                MAC_BASIC_RATE11A_36MBPS_MASK                                                    = 0x0020,
                MAC_BASIC_RATE11A_48MBPS_MASK                                                    = 0x0040,
                MAC_BASIC_RATE11A_54MBPS_MASK                                                    = 0x0080,
                MAC_BASIC_RATE11B_01MBPS_MASK                                                    = 0x0100,
                MAC_BASIC_RATE11B_02MBPS_MASK                                                    = 0x0200,
                MAC_BASIC_RATE11B_5M5BPS_CCK_MASK                                                = 0x0400,
                MAC_BASIC_RATE11B_11MBPS_CCK_MASK                                                = 0x0800
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
               <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature><module>macrame</module>
        </config_element>
        <config_element name="unifiRsnCapabilities" psid="2034">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiFtmDefaultGapBeforeFirstBurstPerResponder" psid="5308">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature>
        </config_element>
        <config_element name="unifiOverrideEDCAParamBEEnable" psid="5024">
            <description_user>Deprecated</description_user><type>boolean</type><nature>software</nature>
        </config_element>
        <config_element name="unifiOverrideEDCAParamBE" psid="5023">
            <description_user>Deprecated</description_user><type>octet_string</type><nature>software</nature>
        </config_element>
        <config_element name="unifiFrameResponseCfmTxLifetimeTimeOut" psid="2084">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature><module>mlme</module>
        </config_element>
        <!-- ******************************************************************************************* -->
        <!-- Start of MIBs for 11AX (Range 2700 - 2750) -->
        <!-- ******************************************************************************************* -->
        <!-- Start of HE Activation Control Elements -->
        <config_element name="unifiHeActivated" psid="2700">
            <description_user>Enables HE mode.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiHeCapabilities" psid="2701">
            <description_user>HE capabilities of chip. This includes HE MAC capabilities information, HE PHY capabilities information, Supported HE-MCS and NSS set, PPE thresholds(optional) fields.see SC-XXXXXX-SP.</description_user>
            <type>octet_string</type>
            <range_min>28</range_min><range_max>28</range_max>
            <default>{ 0x03, 0x08, 0x88, 0x02, 0x00, 0x00, 0x26, 0x70, 0x42, 0x09, 0x0d, 0x01, 0xA4, 0x0a, 0x00, 0xbd, 0x00, 0xfa, 0xff, 0xfa, 0xff, 0x79, 0x1c, 0xc7, 0x71, 0x1c, 0xc7, 0x71 }</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- End of HE Activation Control Elements -->
        <!-- ******************************************************************************************* -->
        <!-- Start of mibs for LAA -->
        <config_element name="unifiRaaTxGIValue" psid="2702">
            <description_user> HE GI value set by Host".</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="true" ></function>
            </function_list>
            <range_min>0</range_min><range_max>255</range_max><default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRaaTxLTFValue" psid="2703">
            <description_user>HE LTF value set by host.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="true" ></function>
            </function_list>
            <range_min>0</range_min><range_max>255</range_max><default>1</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifi256MsduConfig" psid="2704">
            <description_user>256 MSDU support.
                <!--
                b0        = he_rx_256_buffer_support
                b1 - b9   = he_rx_buffer_size
                b10       = he_tx_256_buffer_support
                b11 - b19 = he_tx_buffer_size
                he_rx_256_buffer_support = (bool) BA_MIB_HE_RX_256_BUFFER_SUPPORT_MASK;
                he_rx_buffer_size        = (uint16) BA_MIB_HE_RX_256_BUFFER_SIZE_POS & BA_MIB_HE_RX_256_BUFFER_SIZE_MASK);
                he_tx_256_buffer_support = (bool) BA_MIB_HE_TX_256_BUFFER_SUPPORT_POS & BA_MIB_HE_TX_256_BUFFER_SUPPORT_MASK;
                he_tx_buffer_size        = (uint16) BA_MIB_HE_TX_256_BUFFER_SIZE_POS & BA_MIB_HE_TX_256_BUFFER_SIZE_MASK);
                -->
            </description_user>
            <access_rights>read_write</access_rights>
            <type>uint32</type>
            <table_name>unifiBaConfigTable</table_name>
            <default_list>
                <default index1="1">0x20200</default> <!-- AC_BK -->
                <default index1="2">0x20200</default> <!-- AC_BE -->
                <default index1="3">0x20200</default> <!-- AC_VI -->
                <default index1="4">0x20200</default> <!-- AC_VO -->
            </default_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- End of LAA Mib Elements -->
        <!-- ******************************************************************************************* -->
       <!-- Start of Radio mibs for 11ax -->
        <config_element name="unifiInitialFrequencyOffset" psid="5119">
          <description_user>Allows carrier frequency and sample clock offset initial value in trim to be non-zero.  Use to test Tx/Rx with a freq offset with significant freq offset or test convergence of freq tracking loop.  Relevant to chips with 11ax capability only.  Provided for test and characterisation only.  Should normally be zero.</description_user>
            <type>int16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibricechangefsmparams"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
       <!-- End of Radio mibs for 11ax -->
        <!-- ******************************************************************************************* -->
       <!-- Start of Multiple Bssid Control Elements -->
        <config_element name="unifiMbssidActivated" psid="2705">
            <description_user>Activate Multiple Bssid.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>

        <config_element name="unifiMbssidRoamingActivated" psid="2707">
            <description_user>Activate Multiple Bssid roaming.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>

        <config_element name="unifiMbssControlFrameRxSupported" psid="2724">
            <description_user>Activate support for control frames from MBSS AP.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>

        <!-- End of Multiple Bssid Control Elements -->
        <config_element name="unifiTxAmsduSupportOverride" psid="2706">
           <description_user>Param to override tx amsdu support </description_user>
           <type>boolean</type>
            <default>false</default>
           <nature>software</nature><module>mlme</module>
           </config_element>

        <config_element name="unifiHeDynamicSmpsEnable" psid="2708">
            <description_user>Enable/Disable HE dynamic SMPS</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>

        <config_element name="unifiHe1xltf08giWorkaround" psid="2709">
            <description_user>Param to disable workaround logic for station support of HE 1x ltf and 0.8us gi in its association request frame.
                Some APs send HE SU PPDUs at 1x ltf and 0.8us gi even though they do not support 1x ltf and 0.8us gi if peer advertises
                that it supports HE SU PPDUs at 1x ltf and 0.8us gi. If this param is set to true and if ap advertises that it does not
                support 1x ltf and 0.8us gi, station will disable support for 1x ltf and 0.8us gi in HE capabilities in its association
                request frame. If this param is set to false, station will advertise support for 1x ltf and 0.8us gi in HE capabilities
                in its association request frame based on its local capability only.
            </description_user>
           <type>boolean</type>
            <default>true</default>
           <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- ******************************************************************************************* -->
        <!-- Start of MU EDCA MIBs -->
        <config_element name="unifiOverrideMUEDCAParamACEnable" psid="2710">
            <description_user>override STA - AC MU-EDCA using the values in
                unifiOverrideMUEDCAParamAC MIB, useful for internal testing.

                Bit 0 - 0 means disable M-EDCA feature completely and
                        always use legacy EDCA parameters.

                Bit 1 - if set to 1 means ignore MUEDCA parameters
                        for BE that is being broadcasted by AP and
                        overwrite it with MU EDCA parameters for BE
                        specified in MIB variable unifiOverrideMUEDCAParamAC.

                Bit 2 - if set to 1 means ignore MUEDCA parameters
                        for BK that is being broadcasted by AP and
                        overwrite it with MU EDCA parameters for BK
                        specified in MIB variable unifiOverrideMUEDCAParamAC.

                Bit 3 - if set to 1 means ignore MUEDCA parameters
                        for VI that is being broadcasted by AP and
                        overwrite it with MU EDCA parameters for VI
                        specified in MIB variable unifiOverrideMUEDCAParamAC.

                Bit 4 - if set to 1 means ignore MUEDCA parameters
                        for VO that is being broadcasted by AP and
                        overwrite it with MU EDCA parameters for VO
                        specified in MIB variable unifiOverrideMUEDCAParamAC.
            </description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>31</range_max><default>1</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiOverrideMUEDCAParamAC" psid="2711">
            <description_user>Override the MU EDCA parameters.
                octet  0 - BE AIFS
                octet  1 - [7:4] ECW MAX [3:0] ECW MIN
                octet  2 - MU EDCA timer for BE in 8 TU units.
                octet  3 - BK AIFS
                octet  4 - [7:4] ECW MAX [3:0] ECW MIN
                octet  5 - MU EDCA timer for BK in 8 TU units.
                octet  6 - VI AIFS
                octet  7 - [7:4] ECW MAX [3:0] ECW MIN
                octet  8 - MU EDCA timer for VI in 8 TU units.
                octet  9 - VO AIFS
                octet 10 - [7:4] ECW MAX [3:0] ECW MIN
                octet 11 - MU EDCA timer for VO in 8 TU units.
            </description_user>
            <type>octet_string</type>
            <range_min>12</range_min><range_max>12</range_max>
            <default>{0x02, 0x33, 0x06, 0x02, 0xA4, 0x06, 0x02, 0x44, 0x06, 0x02, 0x32, 0x06}
            </default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiUserControlBaSession" psid="2799">
            <description_user>User control block ack session parameters
                octet  0 - action to be performed, tid and block ack session role
                           bit [2:0] : action to be performed.
                                       if set to 0: add a block ack session
                                       if set to 1: delete a block ack session
                                       if set to 2: force reject incoming block ack session
                                       if set to 3: can initiate a block ack session
                                       if set to 4: can accept an incoming block ack session
                           bit [7:3] : unused
                octet  1 - tid
                           bit [2:0] : tid
                                       if set to 0: tid 0
                                       if set to 1: tid 1
                                       if set to 2: tid 2
                                       if set to 3: tid 3
                                       if set to 4: tid 4
                                       if set to 5: tid 5
                                       if set to 6: tid 6
                                       if set to 7: tid 7
                           bit [7:3] : unused
                octet  2 - block ack session role
                           bit 0      : if set to 0: block ack initiator
                                        if set to 1: block ack responder
                           bit [7:1]  : unused
                octet  3-8 - peer MAC address
            </description_user>
            <type>octet_string</type>
            <range_min>9</range_min><range_max>9</range_max><default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}</default>
            <function_list>
                <function type="set" function_name="mibusersetcontrolbasessionparams" is_for_vif="true" ></function>
                <function type="get" function_name="mibusergetcontrolbasessionparams" is_for_vif="true" ></function>
            </function_list>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiMUEDCATimerUnit" psid="2712">
            <description_user> MU EDCA Timer Unit </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>8</default>
            <nature>software</nature>
        </config_element>
        <!-- End of MU EDCA MIBs -->
        <config_element name="unifiULMUDisableBitMap" psid="2713">
            <description_user>Disable UL MU in various modes.
                Input:
                1 (i.e. BIT0) : Disable UL MU if Bluetooth is on
                2 (i.e  BIT1) : Disable UL MU if Same band multi-vif detected
                4 (i.e. BIT2) : Disable UL MU if TDLS is active
                0: Enable by default
            </description_user>
            <type>uint16</type>
            <default>2</default>
            <range_min>0</range_min><range_max>255</range_max>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
     <config_element name="unifiHeErSuDisable" psid="2714">
         <description_user>Enable/Disable HE ER in SAP/P2P Go mode</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- ******************************************************************************************* -->
        <!-- Start of MIBs for Operating Mode Indication -->
        <config_element name="unifiOmTxNstsValue" psid="2715">
            <description_user> Tx NSTS value set by Host </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="true" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiOmRxNssValue" psid="2716">
            <description_user> Rx NSS value set by Host </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="true" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiOmChanBandwidthValue" psid="2717">
            <description_user> Operating channel bandwidth value set by Host </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="true" ></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiOmUlMuEnable" psid="2718">
            <description_user> UL MU/UL MU Data enable/disable </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="true" ></function>
            </function_list>
            <default>2</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiOpModeValue" psid="2719">
            <description_user> Operating Mode control param to add in OMI frame </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="true" ></function>
            </function_list>
            <default>0xDEAD</default>
            <nature>software</nature>
        </config_element>
        <!-- End of MIBs for Operating Mode Indication -->
        <!-- ******************************************************************************************* -->
        <!-- Start of MIBs for OFDMA feature -->
        <config_element name="unifiOfdmaNarrowBwRuDisableTime" psid="2720">
        <description_user>Minimum Time (3 Minute, 2929TU) that needs to pass since the reception of last beacon from OBSS AP that disable Narrow BW RU.</description_user>
        <type>uint16</type>
        <range_min>0</range_min><range_max>2929</range_max><default>2929</default>
        <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiUlMuMimoSupportOverride" psid="2721">
           <description_user>Param to override UL MU support </description_user>
           <type>boolean</type>
            <default>true</default>
           <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiDlMumimoNcWar" psid="2722">
           <description_user>Enable DL MUMIMO WAR for dynamic configuration of nc value</description_user>
           <type>boolean</type>
           <default>true</default>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiHeUlOfdmaRxDisabledSoftAp" psid="2723">
            <description_user>Enables uplink ofdma reception in softap mode.</description_user>
            <type>boolean</type>
            <default>false</default>
        </config_element>
        <config_element name="unifiPnCheck" psid="2725">
            <description_user>Changes the packet number to test PN check
                Input:
                input a positive or negitive value to offset PN value
            </description_user>
            <type>int16</type>
            <default>000</default>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiOfdmaSoftAPTxTriggerParams" psid="2726">
            <description_user> Configures interval for trigger transmissions and aid for which trigger has to be tx'd
                    Input:
                    Byte 0-1: Trigger Interval use bits 12
                    Byte 1  : ack policy use bits 4
                    Byte 2  : Aid of the STA for which trigger has to be tx'd
                    Byte 3  : Trigger Type
            </description_user>
            <type>uint32</type>
            <function_list>
                <function type="set" function_name="mibuint32set" is_for_vif="true" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>

        <!-- End of MIBs for OFDMA feature -->
        <!-- ******************************************************************************************* -->
        <!-- Start of MIBs for TWT feature -->
        <config_element name="unifiTWTActivated" psid="2731">
            <description_user>Enable TWT feature</description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTControlFlags" psid="2732">
            <description_user>Control flags for TWT
                Input:
                BIT0 : Broadcast TWT Support
                BIT1 : Responder TWT Support
                BIT2 : Enable TWT Service period skip if LCD OFF
                BIT3 : Enable aggressive TWT Service period powerdown
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <range_min>0</range_min><range_max>255</range_max>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTIndDefSessIdx" psid="2733">
            <description_user>Default individual TWT session index to be
                used from unifiTWTIndSessParamTable.
            </description_user>
            <type>uint16</type>
            <default>1</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTStartSession" psid="2734">
            <description_user>Start TWT session.
                Input:
                Byte 0: Session Idx
                Byte 1:
                    Value 0: Individual TWT
                    Value 1: Broadcast TWT
            </description_user>
            <type>uint16</type>
            <default>255</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTTeardownSession" psid="2735">
            <description_user>Teardown TWT session.
             Input:
                Byte 0: flow id(Individual TWT)/ BTWT ID (Broadcast TWT)
                Byte 1:
                    Value 0: Individual TWT
                    Value 1: Broadcast TWT
            </description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTIndSessParamTableIndex" psid="0">
            <description_user>Table index for unifiTwtIndSessParamTable</description_user>
            <type>integer</type>
            <range_min>1</range_min><range_max>3</range_max>
        </config_element>
        <config_element name="unifiTWTIndSessParam" psid="2736">
            <description_user>Individual TWT session parameters. Supports multiple sessions.
                Each row of the table contains session parameters for a individual TWT sessions.
                Entry has the following structure:
                    Octet 0: Control field
                                    bit 0: NDP paging indicator
                                    bit 1: Responder PM mode
                                    bit 2-3: Negotiation type
                                    bit 4: TWT information frame disabled.
                                    bit 5-7: Reserved
                    Octet 1:
                                    bit 0: TWT request
                                    bit 1: Trigger
                                    bit 2: Implicit
                                    bit 3: Flowtype
                                    bit 4: TWT protection
                                    bit 5-7: TWT Setup command
                    Octet 2:
                                    bit 0-4: TWT Wake Interval Exponent
                                    bit 5: TWT channel
                                    bit 6-7: Reserved
                    Octet 3: Nominal Minimum TWT wake duration
                    Octet 4-5: TWT Wake Interval Mantissa
                    Octet 6: TWT wake time offset from next beacon tbtt in milliseconds.
                Size of each entry is 7 Octets.
            </description_user>
            <access_rights>read_write</access_rights>
            <type>octet_string</type>
            <range_min>7</range_min><range_max>7</range_max>
            <table_name>unifiTWTIndSessParamTable</table_name>
            <default_list>
                <!-- Control field:0, TWT request:1, Trigger:1, Implicit:1, Flowtype:0, TWT Protection:0,
                 TWT Setup:1, TWT Wake Interval exponent:2, Mantissa:51200, Nominal TWT wake duration: 128 -->
                <default index1="1">{ 0x00, 0x27, 0x01, 0xC8, 0x00, 0xC8, 0xa}</default>
                <!--  TWT Host Suspend Mode Session Params -->
                <default index1="2">{ 0x00, 0x27, 0x03, 0x80, 0x00, 0xFA, 0x14}</default>
                <!--  TWT BT Coex Mode Session Params -->
                <default index1="3">{ 0x00, 0x27, 0x01, 0x80, 0x00, 0xC8, 0x00}</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTModeSupportBitMap" psid="2737">
            <description_user>TWT support in various modes.
                Input:
                1 (i.e. BIT0) : TWT Support in Active Mode
                2 (i.e  BIT1) : TWT Support in Host Suspend Mode
                4 (i.e. BIT2) : TWT Support in BT Coex Mode
                0: Disable
                TWT in Active Mode uses Row 1 params in unifiTWTIndSessParamTable
                TWT in Host Suspend Mode uses Row 2 params in unifiTWTIndSessParamTable and so on
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <range_min>0</range_min><range_max>255</range_max>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTHostSuspTWTTeardownDelay" psid="2738">
            <description_user>Teardown host suspend TWT session after this delay. Delay in msec</description_user>
            <type>uint16</type>
            <default>100</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTSPInactivityTime" psid="2739">
            <description_user>Inactivity time for terminating current service period in usec</description_user>
            <type>uint16</type>
            <default>10000</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTResumeDuration" psid="2740">
            <description_user>This value is in microseconds and is used to compute TWT information frame Next TWT subfield value</description_user>
            <type>uint32</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTOperation" psid="2741">
            <description_user>Set to 1 for TWT suspend and set to 2 for TWT resume</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2</range_max>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTInfoFrameTx" psid="2742">
            <description_user>Enable/disable transmission of TWT information frames</description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTWTBcastSessParamTableIndex" psid="0">
            <description_user>Table index for unifiTwtBcastSessParamTable</description_user>
            <type>integer</type>
            <range_min>1</range_min><range_max>2</range_max>
        </config_element>
        <config_element name="unifiTWTBcastSessParam" psid="2743">
            <description_user>Broadcast TWT session parameters. Supports multiple sessions.
                Each row of the table contains session parameters for a broadcast TWT sessions.
                Entry has the following structure:
                    Octet 0: Control field
                                    bit 0: NDP paging indicator
                                    bit 1: Responder PM mode
                                    bit 2-3: Negotiation type
                                    bit 4: TWT information frame disabled.
                                    bit 5-7: Reserved
                    Octet 1:
                                    bit 0: TWT request
                                    bit 1: Trigger
                                    bit 2: Last Broadcast Param set
                                    bit 3: Flowtype
                                    bit 4-6: TWT Setup command
                                    bit 7: Reserved
                    Octet 2:
                                    bit 0-4: TWT Wake Interval Exponent
                                    bit 5-7: Broadcast TWT Recommendation
                    Octet 3:        Nominal Minimum TWT wake duration
                    Octet 4-5:      TWT Wake Interval Mantissa
                    Octet 6-7:      Target Wake time
                    Octet 8:        Broadcast TWT Persistence
                    Octet 9:        bit 0-4: Broadcast TWT ID
                                    bit 5-7: Reserved
                Size of each entry is 10 Octets.
            </description_user>
            <access_rights>read_write</access_rights>
            <type>octet_string</type>
            <range_min>10</range_min><range_max>10</range_max>
            <table_name>unifiTWTBcastSessParamTable</table_name>
            <default_list>
                <!-- Control field:0, TWT request:1, Trigger:1, Last Broadcast Param set:1, Flowtype:0, TWT Protection:0,
                 TWT Setup:0, TWT Wake Interval exponent:1, Mantissa:51200, Nominal TWT wake duration: 128,
                 Target Wake time:0, Broadcast TWT Persistence:0, Broadcast TWT ID:0 -->
                <default index1="1">{ 0x0c, 0x07, 0x0a, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x01}</default>
                <default index1="2">{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <!-- End of MIBs for TWT feature -->
        <!-- Start of MIBs for SAP/P2P feature -->
        <config_element name="unifiHeCapabilitiesSoftAp" psid="2745">
            <description_user>HE capabilities of chip supported in softap mode.
                This includes
                    HE MAC capabilities information,
                    HE PHY capabilities information,
                    Supported HE-MCS and NSS set,
             </description_user>
            <type>octet_string</type>
            <range_min>28</range_min><range_max>28</range_max>
            <default>{ 0x01, 0x08, 0x00, 0x02, 0x00, 0x00, 0x26, 0x70, 0x02, 0x00, 0x00, 0x00, 0x80, 0x0a, 0x00, 0x8d, 0x00, 0xfa, 0xff, 0xfa, 0xff, 0x79, 0x1c, 0xc7, 0x71, 0x1c, 0xc7, 0x71 }</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiHeActivatedSoftAp" psid="2746">
            <description_user>Enables HE mode.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiHeActivatedP2p" psid="2747">
            <description_user>Enables HE mode for P2P.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>

        <!-- End of MIBs for SAP/P2P feature -->
        <config_element name="unifiHeEnableDynamicDurationBasedRtsThreshold" psid="2748">
            <description_user>Enables Dynamic Duration Based RTS Threshold.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiSoftApMUEDCAParamAC" psid="2749">
            <description_user>MU EDCA parameters for SoftAP to advertise
                in beacon, probe resp and asspc resp.
                octet  0 - BE AIFS
                octet  1 - [7:4] ECW MAX [3:0] ECW MIN
                octet  2 - MU EDCA timer for BE in 8 TU units.
                octet  3 - BK AIFS
                octet  4 - [7:4] ECW MAX [3:0] ECW MIN
                octet  5 - MU EDCA timer for BK in 8 TU units.
                octet  6 - VI AIFS
                octet  7 - [7:4] ECW MAX [3:0] ECW MIN
                octet  8 - MU EDCA timer for VI in 8 TU units.
                octet  9 - VO AIFS
                octet 10 - [7:4] ECW MAX [3:0] ECW MIN
                octet 11 - MU EDCA timer for VO in 8 TU units.
            </description_user>
            <type>octet_string</type>
            <range_min>12</range_min><range_max>12</range_max>
            <default>{0x02, 0x33, 0x06, 0x02, 0xA4, 0x06, 0x02, 0x44, 0x06, 0x02, 0x32, 0x06}
            </default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- ******************************************************************************************* -->
        <!-- End of MIBs for 11AX (Range 2700 - 2750) -->
        <!-- ******************************************************************************************* -->
        <!-- ******************************************************************************************* -->
        <!-- Start of MIBs for 6G band (Range 2751 - 2770) -->
        <!-- ******************************************************************************************* -->
        <config_element name="unifi6GhzEnabled" psid="2751">
            <description_user>Enables 6G band operations.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifi6GRNRMaxCacheCount" psid="2752">
            <description_user>Maximum RNR entries per channel</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>15</range_max><default>10</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifi6GScanAccTimeoutDur" psid="2753">
            <description_user>Scan Accelerator Timeout duration in TUs</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>40</range_max><default>20</default>
        </config_element>
        <config_element name="unifi6GPrescanConcurrentMacs" psid="2754">
            <description_user>Indicates number of concurrent macs to be used for scan accelerator</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2</range_max><default>1</default>
        </config_element>
        <config_element name="unifi6GEnablePrescan" psid="2755">
            <description_user>Enables prescan of 6 GHz channels using scan accelerator.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <config_element name="unifiHe6GHzBandCapabilities" psid="2756">
            <description_user>HE 6 GHz band capabilities of chip.</description_user>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>2</range_max>
            <default>{ 0x7d, 0x06 }</default>
            <nature>software</nature><module>mlme</module>
        </config_element>
        <!-- ******************************************************************************************* -->
        <!-- End of MIBs for 6G band (Range 2751 - 2770) -->
        <!-- ******************************************************************************************* -->
        <config_element name="unifiPLM689WorkaroundTriggerARPCount" psid="2048">
            <description_user>Deprecated</description_user><type>uint16</type><nature>software</nature><module>mlme</module>
        </config_element>
        <config_table table_name="unifiQueueStatsIdTable" num_indices="1">
            <description_user>Conceptual table for timing of queue transfers HOST-SW-HW</description_user>
            <index1 name="unifiQueueStatsIndex" />
        </config_table>
        <config_table table_name="unifiRateStatsTable" num_indices="1">
            <description_user>Conceptual table for transmit/receive rate statistics.</description_user>
            <index1 name="unifiRateStatsIndex" />
        </config_table>
        <config_table table_name="unifiThroughputDebugTable" num_indices="1">
            <description_user>Conceptual table for throughput diagnostics counters.</description_user>
            <index1 name="unifiThroughputDebugIndex" />
        </config_table>
        <config_table table_name="unifiReadRegTable" num_indices="1">
            <description_user>Conceptual table for reading registers.</description_user>
            <index1 name="unifiReadHardwareCounterIndex" />
        </config_table>
        <config_table table_name="unifiRadioTXSettingsTable" num_indices="2">
            <description_user>Conceptual table for tx settings.</description_user>
            <index1 name="unifiMacInstanceIndex" />
            <index2 name="unifiRadioTXSettingsIndex" />
        </config_table>
        <config_table table_name="unifiRadioTXSettingsTableV2" num_indices="3">
            <description_user>Conceptual table for tx settings.</description_user>
            <index1 name="unifiRadioInstanceIndex" />
            <index2 name="unifiRadioTxSettingsRowIndex" />
            <index3 name="unifiRadioTXSettingsIndexV2" />
        </config_table>
        <config_table table_name="unifiRadioRXSettingsTable" num_indices="2">
            <description_user>Conceptual table for rx settings.</description_user>
            <index1 name="unifiRadioInstanceIndex" />
            <index2 name="unifiRadioRXSettingsIndex" />
        </config_table>
        <config_table table_name="unifiRadioCCADebugTable" num_indices="2">
            <description_user>Conceptual table for radio CCA settings.</description_user>
            <index1 name="unifiRadioInstanceIndex" />
            <index2 name="unifiRadioCCADebugTableIndex" />
        </config_table>
        <config_table table_name="unifiNarrowbandCCADebugTable" num_indices="2">
            <description_user>Conceptual table for narrowband CCA settings.</description_user>
            <index1 name="unifiMacInstanceIndex" />
            <index2 name="unifiNarrowbandCCADebugTableIndex" />
        </config_table>
        <config_table table_name="unifiReadHardwareCounterTable" num_indices="2">
            <description_user>Conceptual table for reading hardware packet counters. First index is the radio_id, second index is the counter to be read.</description_user>
            <index1 name="unifiRadioInstanceIndex" />
            <index2 name="unifiReadHardwareCounterIndex" />
        </config_table>
        <config_table table_name="unifiLoadDpdLutTable" num_indices="2">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiLoadDpdLutGroupIndex" />
            <index2 name="unifiLoadDpdLutTemperatureIndex" />
        </config_table>
        <config_table table_name="unifiLoadDpdLutTablePerRadio" num_indices="3">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiLoadDpdLutRadioIndex" />
            <index2 name="unifiLoadDpdLutGroupIndex" />
            <index3 name="unifiLoadDpdLutTemperatureIndex" />
        </config_table>
        <config_table table_name="unifiRadioCCAThresholdsTable" num_indices="1">
            <description_user>This table contains hardware specific CCA Thresholds settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiRadioCCAThresholdsTableIndex" />
        </config_table>
        <config_table table_name="unifiRadioTxIqDelayTable" num_indices="1">
            <description_user>This table contains information for TX IQ differential path delays.</description_user>
            <index1 name="unifiRadioTxIqDelayTableIndex" />
        </config_table>
        <config_table table_name="unifiAgcThresholdsTable" num_indices="1">
            <description_user>This table contains hardware specific AGC Thresholds settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiAgcThresholdsTableIndex" />
        </config_table>
        <config_table table_name="unifiTxSettingsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiTxSettingsTableIndex" />
        </config_table>
        <config_table table_name="unifiTxGainSettingsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter gain settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiTxGainSettingsTableIndex" />
        </config_table>
        <config_table table_name="unifiRadioTxPowerOverrideTable" num_indices="1">
            <description_user>Table for the power override settings via RICE</description_user>
            <index1 name="unifiRadioTXPowerOverrideTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPowerDetectorResponseTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table defines the response of the power detectors(2G5/5G) in the external FEM. The detectors are sampled via the BIST ADC. The reference temperature and frequencies for this table are implicitly defined by the related temperature and frequency compensation tables. </description_internal>
            <index1 name="unifiTxPowerDetectorResponseTableIndex" />
        </config_table>
        <config_table table_name="unifiTxDetectorTemperatureCompensationTable" num_indices="1">
            <description_user>Deprecated</description_user>
            <index1 name="unifiTxDetectorTemperatureCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxDetectorFrequencyCompensationTable" num_indices="1">
            <description_user>Deprecated</description_user>
            <index1 name="unifiTxDetectorTemperatureCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxOpenLoopTemperatureCompensationTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to open-loop compensate forward path gains for self-heating between transmit power calibrations. The reference temperature for temperature compensation is implicitly defined by the temperature at which the (interpolated) table values return zero correction.</description_internal>
            <index1 name="unifiTxOpenLoopTemperatureCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxOpenLoopFrequencyCompensationTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to open-loop compensate forward path gains across frequency between transmit power calibrations. The reference frequency for frequency compensation is implicitly defined by the frequency at which the (interpolated) table values return zero correction.</description_internal>
            <index1 name="unifiTxOpenLoopFrequencyCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPaGainDpdTemperatureCompensationTable" num_indices="1">
            <description_user>Deprecated</description_user>
            <index1 name="unifiTxPaGainDpdTemperatureCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPaGainDpdFrequencyCompensationTable" num_indices="1">
            <description_user>Deprecated</description_user>
            <index1 name="unifiTxPaGainDpdFrequencyCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxFtrimSettingsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to frequency compensate forward path.</description_internal>
            <index1 name="unifiTxFtrimSettingsTableIndex" />
        </config_table>
        <config_table table_name="unifiTxDigGainTable" num_indices="1">
            <description_user>This table contains per modulation gain settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table contains per modulation gain settings.</description_internal>
            <index1 name="unifiTxDigGainTableIndex" />
        </config_table>
        <config_table table_name="unifiStaticDpdGainTable" num_indices="1">
            <description_user>This table contains hardware specific digital gain settings for use with static dpd. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table contains hardware specific digital gain settings for use with static dpd.</description_internal>
            <index1 name="unifiStaticDpdGainTableIndex" />
        </config_table>
        <config_table table_name="unifiTxGainStepSettingsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to set the gain steps (v2i, mix, drv, pa) of the forward path.</description_internal>
            <index1 name="unifiTxGainStepSettingsTableIndex" />
        </config_table>
        <config_table table_name="unifiDpdPredistortGainsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal>This table is used to set DPD digital pre-distort gains of the forward path.</description_internal>
            <index1 name="unifiDpdPredistortGainsTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPowerTrimConfigTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to set psat, biases and adjustment ranges of the forward path during power trim.</description_internal>
            <index1 name="unifiTxPowerTrimConfigTableIndex" />
        </config_table>
        <config_table table_name="unifiTxAntennaConnectionLossTable" num_indices="1">
            <description_user>The table giving the frequency-dependent connection loss value, which is used as conversion factors for raw tx power at connector</description_user>
            <index1 name="unifiTxAntennaConnectionLossTableIndex" />
        </config_table>
        <config_table table_name="unifiTxAntennaMaxGainTable" num_indices="1">
            <description_user>The table giving the frequency-dependent antenna max gain value, which is used as conversion factors for raw tx power at connector</description_user>
            <index1 name="unifiTxAntennaMaxGainTableIndex" />
        </config_table>
        <config_table table_name="unifiRxExternalGainTable" num_indices="1">
            <description_user>The table giving frequency-dependent RSSI offset value</description_user>
            <index1 name="unifiRxExternalGainTableIndex" />
        </config_table>
        <config_table table_name="unifiRxRssiNbHwGainTable" num_indices="1">
            <description_user>The table giving narrowband Hardware RSSI gain values</description_user>
            <index1 name="unifiRxRssiNbHwGainTableIndex" />
        </config_table>
        <config_table table_name="unifiRxRssiNbFmOffsetTable" num_indices="1">
            <description_user>The table giving narrowband Fleximac RSSI gain offset values</description_user>
            <index1 name="unifiRxRssiNbFmOffsetTableIndex" />
        </config_table>
        <config_table table_name="unifiRxRssiBandCompensationTable" num_indices="1">
            <description_user>The table giving RSSI band compensation adjustment values</description_user>
            <index1 name="unifiRxRssiBandCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxOOBConstraintTable" num_indices="1">
            <description_user>Table containing settings necessary to ensure the IC observes transmit out-of-band regulatory constraints when operating near band edges.</description_user>
            <index1 name="unifiTxOOBConstraintTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPowerAdjustTable" num_indices="1">
            <description_user>This table allows you to adjust absolute transmit power in a frequency and/or temperature dependant manner. The table allows you to specify datapoints in quarter dB based on frequency and temperature. The firmware will then perform a 2D interpolation to perform the right adjustment for the current frequency and temperature.</description_user>
            <index1 name="unifiTxPowerAdjustTableIndex" />
        </config_table>
        <config_table table_name="unifiDebugControlTable" num_indices="1">
            <description_user>The table is used to control various debug settings on a per module basis</description_user>
            <index1 name="unifiDebugControlTableIndex" />
        </config_table>
        <config_table table_name="unifiRegulatoryTable" num_indices="1">
            <description_user>This table holds the regulatory information for all countries.</description_user>
            <index1 name="unifiRegulatoryTableIndex" />
        </config_table>
        <config_table table_name="unifiPeerIdTable" num_indices="1">
            <description_user>Conceptual table for peer information at disconnect (Bandwith, Nss, RSSI, Tx data rate), index by Pid.</description_user>
            <index1 name="unifiPeerid" />
        </config_table>
        <config_table table_name="unifiOperatingClassTable" num_indices="1">
            <description_user>Operating Class table</description_user>
            <index1 name="unifiOperatingClassTableIndex" />
        </config_table>
        <config_table table_name="unifiScanParametersPublicTable" num_indices="2">
            <description_user>Scan Parameters Public table</description_user>
            <index1 name="unifiScanParametersTableIndex" />
            <index2 name="unifiScanParametersPublicTableIndex" />
        </config_table>
        <config_table table_name="unifiScanParametersPrivateTable" num_indices="2">
            <description_user>Scan Parameters Private table</description_user>
            <index1 name="unifiScanParametersTableIndex" />
            <index2 name="unifiScanParametersPrivateTableIndex" />
        </config_table>
        <config_table table_name="unifiSarBackoffTable" num_indices="2">
            <description_user>Sar Power Cap Parameters table</description_user>
            <index1 name="unifiSarModeTableIndex" />
            <index2 name="unifiBandTableIndex" />
        </config_table>
        <config_table table_name="unifiCCACSThreshTable" num_indices="1">
            <description_user>CCA CS threshold parameters table</description_user>
            <index1 name="unifiSisoMimoTableIndex" />
        </config_table>
        <config_table table_name="unifiDpdDebugTable" num_indices="1">
            <description_user>DPD Debug MIBS</description_user>
            <index1 name="unifiDpdDebugTableIndex" />
        </config_table>
        <config_table table_name="unifiMacBusyTimeTable" num_indices="2">
            <description_user>unifiMacBusyTime table</description_user>
            <index1 name="unifiMacBusyTimeTableIndex" />
        </config_table>
        <config_table table_name="unifiModemSgiOffsetTable" num_indices="2">
            <description_user>SGI sample offset parameters table</description_user>
            <index1 name="unifiBandTableIndex" />
            <index2 name="unifiBWTableIndex" />
        </config_table>
        <config_table table_name="unifiNoCellTable" num_indices="1">
        <description_user>NoCell Power Cap Parameters table</description_user>
            <index1 name="unifiConnectionTypeTableIndex" />
        </config_table>
        <config_table table_name="unifiAcTxConfirmTable" num_indices="1">
            <description_user>Conceptual table for requesting Tx confirm, index by Access Class.</description_user>
            <index1 name="unifiAccessClassIndex" />
        </config_table>
        <config_table table_name="unifiDefaultCountryTable" num_indices="1">
            <description_user>Table of country codes.</description_user>
            <index1 name="unifiDefaultCountryIndex" />
        </config_table>
        <config_table table_name="unifiDebugConfigTable" num_indices="1">
            <description_user>Debug modules table</description_user>
            <index1 name="unifiDebugModulesIndex" />
        </config_table>
        <config_table table_name="unifiFaultConfigTable" num_indices="1">
            <description_user>Subsystems' Fault config table</description_user>
            <index1 name="unifiSubSystemsIndex" />
        </config_table>
        <config_table table_name="unifiPanicConfigTable" num_indices="1">
            <description_user>Subsystems' Panic config table</description_user>
            <index1 name="unifiSubSystemsIndex" />
        </config_table>
        <config_table table_name="unifiRSSICURoamScanTriggerTable" num_indices="1">
            <description_user>Table indexed by frequency band</description_user>
            <index1 name="unifiBandTableIndex" />
        </config_table>
        <config_table table_name="unifiRoamCUScanTriggerTable" num_indices="1">
            <description_user>Table indexed by frequency band</description_user>
            <index1 name="unifiBandTableIndex" />
        </config_table>
        <config_table table_name="unifiRoamRssiFactorTable" num_indices="1">
            <description_user>Table allocating RSSIfactor to RSSI values range</description_user>
            <index1 name="unifiBandTableIndex" />
            <index2 name="unifiRoamRssiFactorTableIndex" />
        </config_table>
        <config_table table_name="unifiRoamRssiFactorFixedMultiplierTable" num_indices="1">
            <description_user>Table allocating fixed multiplier for RSSIfactor to RSSI values range</description_user>
            <index1 name="unifiBandTableIndex" />
            <index2 name="unifiRoamRssiFactorTableIndex" />
        </config_table>
        <config_table table_name="unifiFtmLegacyCalibrationTable" num_indices="1">
            <description_user>Table allocating FTM legacy calibration values</description_user>
            <index1 name="unifiBWTableIndex" />
        </config_table>
        <config_table table_name="unifiFtmHtVhtCalibrationTable" num_indices="1">
            <description_user>Table allocating FTM HT/VHT calibration values</description_user>
            <index1 name="unifiBWTableIndex" />
        </config_table>
        <config_table table_name="unifiRoamCUFactorTable" num_indices="1">
            <description_user>Table allocating CUfactor to Channel Utilization values range.</description_user>
            <index1 name="unifiBandTableIndex" />
            <index2 name="unifiRoamCUFactorTableIndex" />
        </config_table>
        <config_table table_name="unifiRoamRSSIBoostTable" num_indices="1">
            <description_user>Table allocating a RSSI boost to each band</description_user>
            <index1 name="unifiBandTableIndex" />
        </config_table>
        <config_table table_name="unifiRadioIDTable" num_indices="1">
            <description_user>Table indexed by radio ID</description_user>
            <index1 name="unifiRadioIndex" />
        </config_table>
        <config_table table_name="unifiOverrideEDCAParamTable" num_indices="1">
            <description_user>Conceptual table for overriding EDCA Parameters broadcast by the AP, index by Access Class.</description_user>
            <index1 name="unifiAccessClassIndex"/>
        </config_table>
        <config_table table_name="unifiNANDefaultEDCAParamTable" num_indices="1">
            <description_user>Conceptual table for default EDCA Parameters to be used in NAN, index by Access Class.</description_user>
            <index1 name="unifiAccessClassIndex"/>
        </config_table>
        <config_table table_name="unifiRxRssiAdjustmentsTable" num_indices="2">
            <description_user>Table for rssi adjustments. First index is the radio_id, second index is band.</description_user>
            <index1 name="unifiRadioIndex" />
            <index2 name="unifiBandTableIndex" />
        </config_table>
        <config_table table_name="unifiNANDefaultScheduleTable" num_indices="2">
            <description_user>NAN default schedule table</description_user>
            <index1 name="uunifiNANDefaultScheduleTableIndex" />
            <index2 name="unifiNANSchedulePreferenceIndex" />
        </config_table>
        <config_table table_name="unifiNANNMultiVIFSharedSlotsTable" num_indices="2">
            <description_user>NAN multi VIF shared slots table</description_user>
            <index1 name="unifiBandCombinationTableIndex" />
        </config_table>
        <config_table table_name="unifiTWTIndSessParamTable" num_indices="1">
            <description_user>Individual TWT Sessions parameter table.</description_user>
            <index1 name="unifiTWTIndSessParamTableIndex"/>
        </config_table>
        <config_table table_name="unifiBaConfigTable" num_indices="1">
            <description_user>Conceptual table for BlockAck configuration, index by Access Class.</description_user>
            <index1 name="unifiAccessClassIndex"/>
        </config_table>
        <config_table table_name="unifiRadioFecConfigTable" num_indices="1">
            <description_user>Table for Front End Control configuration.</description_user>
            <index1 name="unifiRadioFecConfigTableIndex" />
        </config_table>
        <config_table table_name="unifiRadioMiscPerBandTable" num_indices="1">
            <description_user>Table for miscellaneous per band radio settings.</description_user>
            <index1 name="unifiRadioMiscPerBandTableIndex" />
        </config_table>
        <config_table table_name="unifiLnaControlRssiThresholdTable" num_indices="1">
            <description_user>Table for eLNA contol based on association type,bandwidth,band and rssi values </description_user>
            <index1 name="unifiLnaControlRssiThresholdTableIndex" />
        </config_table>
        <config_table table_name="unifiTWTBcastSessParamTable" num_indices="1">
            <description_user>Broadcast TWT Sessions parameter table.</description_user>
            <index1 name="unifiTWTBcastSessParamTableIndex"/>
        </config_table>
        <!-- ******************************************************************************************* -->
        <config_table table_name="hutsReadWriteTableInt16IdTable" num_indices="1">
            <description_user>Specific table for uint16</description_user>
            <index1 name="hutsReadWriteTableInt16" />
        </config_table>
        <config_table table_name="hutsReadWriteTableOctetStringTable" num_indices="1">
            <description_user>Specific table for octet string</description_user>
            <index1 name="hutsReadWriteTableOctetString" />
        </config_table>
        <config_table table_name="hutsReadWriteRPCTableOctetStringTable" num_indices="2">
            <description_user>Specific table for RPC of octet string</description_user>
            <index1 name="hutsReadWriteRPCTableOctetStringTableIndex0" />
            <index2 name="hutsReadWriteRPCTableOctetStringTableIndex1" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIFixedSizeTable" num_indices="1">
            <description_user>Specific table of fixed size for internal API test</description_user>
            <index1 name="hutsReadWriteInternalAPIFixedSizeTableIndex" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIVarSizeTable" num_indices="1">
            <description_user>Specific table of variable size for internal API test</description_user>
            <index1 name="hutsReadWriteInternalAPIVarSizeTableindex" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIFixSizeTableKeys" num_indices="1">
            <description_user>Conceptual table for timing of queue transfers HOST-SW-HW</description_user>
            <index1 name="hutsReadWriteInternalAPIFixSizeTableKeysindex" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIFixVarSizeTableKeys" num_indices="1">
            <description_user>Table of integers for use by patches.</description_user>
            <index1 name="hutsReadWriteInternalAPIFixVarSizeTableKeysIndex" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIFixSizeTableKeyRowTable" num_indices="2">
            <description_user>xxxxxxxx</description_user>
            <index1 name="hutsReadWriteInternalAPIFixSizeTableKeyIndex1" />
            <index2 name="hutsReadWriteInternalAPIFixSizeTableKeyIndex2" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIVarSizeTableKeyTable" num_indices="2">
            <description_user>xxxxxxxx</description_user>
            <index1 name="hutsReadWriteInternalAPIVarSizeTableKeyIndex1" />
            <index2 name="hutsReadWriteInternalAPIVarSizeTableKeyIndex2" />
        </config_table>
        <config_table table_name="unifiFrameTXCountersTable" num_indices="1">
            <description_user> This table contains TX Counters.</description_user>
            <index1 name="unifiFrameTXCountersTableIndex" />
        </config_table>
        <config_table table_name="unifiFrameRXCountersTable" num_indices="1">
            <description_user> This table contains RX Counters.</description_user>
            <index1 name="unifiFrameRXCountersTableIndex" />
         </config_table>
        <!-- ******************************************************************************************* -->
    </metadata>
</metadata_list>
