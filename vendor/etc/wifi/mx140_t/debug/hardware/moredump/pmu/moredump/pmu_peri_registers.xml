<?xml version="1.0" encoding="utf-8"?>

<!--
(c) SCSC 2015-2016 autogenerated by moredump.py as part of 'drun prep'.
  Changes made to this file may cause incorrect behaviour and will be lost if it is regenerated.

  XML file defining registers for pmu_peri subsystem moredump
  Chip hash: 0147


-->

<subsystem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.samsung.com ../Registers.xsd"
  name="pmu_peri">
  <block name="mildred_sfr_core" comment="Mildred 8051 special function registers">
    <register addr="0000fe84" rw_flags="RW" width="1" name="MILDRED_SP" comment="Stack pointer"/>
    <register addr="0000fe88" rw_flags="RW" width="1" name="MILDRED_DPL" comment="Data pointer low byte"/>
    <register addr="0000fe8c" rw_flags="RW" width="1" name="MILDRED_DPH" comment="Data pointer high byte"/>
    <register addr="0000fe90" rw_flags="RW" width="1" name="MILDRED_CONTROL" comment="Control Mildred"/>
    <register addr="0000fe94" rw_flags="RW" width="1" name="MILDRED_SET_PC_LO" comment="Set Mildred's PC - lower half"/>
    <register addr="0000fe98" rw_flags="RW" width="1" name="MILDRED_SET_PC_HI" comment="Set Mildred's PC - upper half. Setting this register causes the update to occur if Mildred is stopped."/>
    <register addr="0000fe9c" rw_flags="RW" width="1" name="MILDRED_PCON" comment="Power control"/>
    <register addr="0000fea0" rw_flags="RW" width="1" name="MILDRED_TCON" comment="Timer control"/>
    <register addr="0000fea4" rw_flags="RW" width="1" name="MILDRED_TMOD" comment="Timer mode"/>
    <register addr="0000fea8" rw_flags="RW" width="1" name="MILDRED_TL0" comment="Timer low 0"/>
    <register addr="0000feac" rw_flags="RW" width="1" name="MILDRED_TL1" comment="Timer low 1"/>
    <register addr="0000feb0" rw_flags="RW" width="1" name="MILDRED_TH0" comment="Timer high 0"/>
    <register addr="0000feb4" rw_flags="RW" width="1" name="MILDRED_TH1" comment="Timer high 1"/>
    <register addr="0000fee0" rw_flags="RW" width="1" name="MILDRED_SCON" comment="Serial interface unit (SIU) control."/>
    <register addr="0000fee4" rw_flags="RW" width="1" name="MILDRED_SBUF" comment="Serial data buffer"/>
    <register addr="0000ff04" rw_flags="RW" width="1" name="MILDRED_TIMER_COUNTER_PRESCALE_INT" comment="Set the integer part of the timer/counter prescaler"/>
    <register addr="0000ff08" rw_flags="RW" width="1" name="MILDRED_TIMER_COUNTER_PRESCALE_FRAC" comment="Set the fractional part of the timer/counter prescaler"/>
    <register addr="0000ff14" rw_flags="R" width="1" name="MILDRED_PROGRAM_COUNTER_LO" comment="Register view of the Mildred program counter"/>
    <register addr="0000ff18" rw_flags="R" width="1" name="MILDRED_PROGRAM_COUNTER_HI" comment="Register view of the Mildred program counter"/>
    <register addr="0000ff1c" rw_flags="RW" width="1" name="MILDRED_READ_WRITE_INTERNAL_INT_STATE" comment="Clear Mildred's internal interrupt status flops. This is a bitfield register."/>
    <register addr="0000ff20" rw_flags="RW" width="1" name="MILDRED_IE" comment="Interrupt enable"/>
    <register addr="0000ff60" rw_flags="RW" width="1" name="MILDRED_IP" comment="Interrupt priority"/>
    <register addr="0000ffc0" rw_flags="RW" width="1" name="MILDRED_PSW" comment="Program and status word"/>
    <register addr="00010000" rw_flags="RW" width="1" name="MILDRED_ACC" comment="Accumulator"/>
    <register addr="00010004" rw_flags="RW" width="1" name="MILDRED_SIU_SDIV" comment="Control the SDIV input to the serial interface unit"/>
    <register addr="00010040" rw_flags="RW" width="1" name="MILDRED_B" comment="B register"/>
  </block>
  <block name="mildred_sfr_pmu" comment="Mildred 8051 special function registers">
    <register addr="0000fe80" rw_flags="RW" width="1" name="MILDRED_P0" comment="PIO 0-7 config/status"/>
    <register addr="0000feb8" rw_flags="R" width="1" name="CFG_AP_MAILBOX_FROM_AP" comment="AP-accessible mailbox register. Read-only from PMU."/>
    <register addr="0000febc" rw_flags="RW" width="1" name="CFG_AP_MAILBOX_TO_AP" comment="AP-accessible mailbox register. Read-only from AP."/>
    <register addr="0000fec0" rw_flags="RW" width="1" name="MILDRED_P1" comment="PIO 8-15 config/status"/>
    <register addr="0000fec4" rw_flags="RW" width="1" name="ALIVE_RESET" comment="Resets for main MXL140 clock generator, WLBT toplevel, ALIVE_PD Zippy longhops (no other registers were convenient)"/>
    <register addr="0000fec8" rw_flags="RW" width="1" name="ALIVE_CLOCK_ENABLE" comment="Enables for ALIVE clock generator"/>
    <register addr="0000fecc" rw_flags="RW" width="1" name="WLAN_CLOCK_ENABLE" comment="Enables for main clock generator"/>
    <register addr="0000fed0" rw_flags="RW" width="1" name="QREQ_OFF_OVR" comment="Q-channel request overrides. These are actually clock gate enables to bypass the Q-channel managers."/>
    <register addr="0000fed4" rw_flags="RW" width="1" name="MILDRED_RFIC_STATUS" comment="Identifies the cause of the RFIC_EVENT interrupt. Each one can be selectively enabled by the MASK registers "/>
    <register addr="0000fed8" rw_flags="RW" width="1" name="RAM_POWER_CONTROL" comment="The RAM retention controls for the WLAN PD and WPAN PD processor platforms."/>
    <register addr="0000fedc" rw_flags="RW" width="1" name="PIO_ALV" comment="These control the FEMCTRL output pins if PIO_ALV_EN is set to PIO_ALIVE_EN_PMU."/>
    <register addr="0000fee8" rw_flags="RW" width="1" name="WPLL_FVALUE_3124" comment="PLL F controls"/>
    <register addr="0000feec" rw_flags="RW" width="1" name="WPLL_FVALUE_2316" comment="PLL F controls"/>
    <register addr="0000fef0" rw_flags="RW" width="1" name="WPLL_FVALUE_1508" comment="PLL F controls"/>
    <register addr="0000fef4" rw_flags="RW" width="1" name="WPLL_FVALUE_0700" comment="PLL F controls"/>
    <register addr="0000fef8" rw_flags="RW" width="1" name="ALIVE_CLOCK_ENABLE2" comment="Enables for ALIVE clock generator"/>
    <register addr="0000fefc" rw_flags="RW" width="1" name="CS_DEBUG" comment="Register-controllable CoreSight debug authentication bits."/>
    <register addr="0000ff00" rw_flags="RW" width="1" name="MILDRED_RESOURCE_REQ" comment="Outgoing resource requests from WLBT to AP/CP. Leave the requests asserted until no longer required."/>
    <register addr="0000ff0c" rw_flags="RW" width="1" name="MILDRED_TIMER_COUNTER_MUX_SEL" comment="Choose the source for timer/counter 0 and 1. 0-15 = PIO[15:0]."/>
    <register addr="0000ff10" rw_flags="RW" width="1" name="QCH_FORCE_EN" comment="Q-channel manager force clock enable"/>
    <register addr="0000ff24" rw_flags="RW" width="1" name="PMU_IPC" comment="IPC comms with WLAN and WPAN."/>
    <register addr="0000ff28" rw_flags="RW" width="1" name="CLK_GATE_OVR" comment="Clock Gate overrides. Set to '1' to enable the clocks for each of the specified blocks."/>
    <register addr="0000ff2c" rw_flags="R" width="1" name="WPLL_STATUS" comment=""/>
    <register addr="0000ff30" rw_flags="RW" width="1" name="PCH_REQ" comment="P-channel manager power down request. Set to '1' to request power down and '0' to power up. Handily inverted logic."/>
    <register addr="0000ff34" rw_flags="R" width="1" name="PCH_ACK" comment="P-channel manager power down acknowledge. 1 = powered-down, 0 = powered-up."/>
    <register addr="0000ff38" rw_flags="RW" width="1" name="WPAN_SLEEPDEEP" comment=""/>
    <register addr="0000ff3c" rw_flags="RW" width="1" name="MILDRED_EXT_RESET_REQUEST" comment="Requests and status out of WLBT"/>
    <register addr="0000ff40" rw_flags="R" width="1" name="MILDRED_RESOURCE_ACK" comment="Outgoing resource request status/acknowledgement"/>
    <register addr="0000ff44" rw_flags="RW" width="1" name="SWEEPER_CONTROL" comment="Controls the Sweeper modules in WLBT. Set to 1 to start a sweeper clean. Return to 0 once the ACK for that sweeper is set."/>
    <register addr="0000ff48" rw_flags="R" width="1" name="SWEEPER_STATUS" comment="Status from the Sweeper modules in WLBT. '1' in a field indicates Sweeper completion."/>
    <register addr="0000ff4c" rw_flags="R" width="1" name="MILDRED_AP2WB_REQ" comment="Incoming requests from AP to WLBT."/>
    <register addr="0000ff50" rw_flags="RW" width="1" name="MILDRED_WB2AP_ACK" comment="Outgoing acknowledgement from WLBT to AP."/>
    <register addr="0000ff54" rw_flags="RW" width="1" name="CLK_GATE_OVR2" comment="Clock Gate overrides. Set to '1' to enable the clocks for each of the specified blocks."/>
    <register addr="0000ff58" rw_flags="RW" width="1" name="WATCHDOG_ENABLE" comment="Writing '1' enables the watchdog regardless of its previous state and resets its state machine to WATCHDOG_STATUS_FSM_ENABLED."/>
    <register addr="0000ff5c" rw_flags="RW" width="1" name="WATCHDOG_DISABLE" comment="Writing the 3 disable codes in sequence to this register will disable the watchdog. Writing WATCHDOG_DEBUG_CODE3 instead of WATCHDOG_DISABLE_CODE3 will set the watchdog into debug mode. Each correct code written will advance the WATCHDOG_STATUS by 1 until it reaches 3. A status of 3 indicates that the watchdog has been disabled A status of 4 indicates that the watchdog is in debug mode. If an incorrect code is written at any time, the status will revert to 0 (enabled). The watchdog will not stop counting down until all three codes have been written correctly."/>
    <register addr="0000ff64" rw_flags="RW" width="1" name="WATCHDOG_KICK" comment="Writing to this register causes the countdown value to be reset to the value stored in WATCHDOG_DELAY. WATCHDOG_DELAY is captured into the slow clock domain after a cycle or two. The register fields WATCHDOG_STATUS_KICK_PENDING and WATCHDOG_STATUS_SLOW_KICK_PENDING indicate if this register has already been written and an update is currently pending. Writing this register toggles a flag inside the watchdog logic so writing it a second time before the first has successfully propagated will clear the toggle and cancel the kick."/>
    <register addr="0000ff68" rw_flags="R" width="1" name="WATCHDOG_STATUS" comment="Watchdog status compound register."/>
    <register addr="0000ff6c" rw_flags="RW" width="1" name="ZIPPY_LH_STATUS" comment="Current status of useful longhop bus bits."/>
    <register addr="0000ff74" rw_flags="RW" width="1" name="MILDRED_INT_EN" comment="Interrupt enable."/>
    <register addr="0000ff78" rw_flags="RW" width="1" name="DRCG" comment="Dynamic Root Clock gating feature of SLSI blocks. Set to '1' to enable block clock gating. Otherwise the clocks will run all the time."/>
    <register addr="0000ff7c" rw_flags="RW" width="1" name="MILDRED_INT_VECTOR_HI" comment="Interrupt vector top 8 bits."/>
    <register addr="0000ff80" rw_flags="RW" width="1" name="MILDRED_INT_STATUS" comment="Interrupt status. Write to clear."/>
    <register addr="0000ff84" rw_flags="RW" width="1" name="WPLL_CONTROLS_0" comment="PLL controls"/>
    <register addr="0000ff88" rw_flags="RW" width="1" name="WPLL_CONTROLS_1" comment="PLL controls"/>
    <register addr="0000ff8c" rw_flags="RW" width="1" name="WPLL_CONTROLS_2" comment="PLL controls"/>
    <register addr="0000ff90" rw_flags="RW" width="1" name="WPLL_CONTROLS_3" comment="PLL controls"/>
    <register addr="0000ff94" rw_flags="RW" width="1" name="WPLL_CONTROLS_4" comment="PLL controls"/>
    <register addr="0000ff98" rw_flags="RW" width="1" name="WPLL_CONTROLS_5" comment="PLL controls"/>
    <register addr="0000ff9c" rw_flags="RW" width="1" name="WPLL_CONTROLS_6" comment="PLL controls"/>
    <register addr="0000ffa0" rw_flags="RW" width="1" name="MILDRED_INT_PRIORITIES" comment="Interrupt source priorities."/>
    <register addr="0000ffa4" rw_flags="RW" width="1" name="WPLL_KVALUE_3124" comment="PLL K controls"/>
    <register addr="0000ffa8" rw_flags="RW" width="1" name="WPLL_KVALUE_2316" comment="PLL K controls"/>
    <register addr="0000ffac" rw_flags="RW" width="1" name="WPLL_KVALUE_1508" comment="PLL K controls"/>
    <register addr="0000ffb0" rw_flags="RW" width="1" name="WPLL_KVALUE_0700" comment="PLL K controls"/>
    <register addr="0000ffb4" rw_flags="RW" width="1" name="PD_CONTROL_WPAN" comment="Controls the state of switches, isolation and reset in WPAN power domain"/>
    <register addr="0000ffb8" rw_flags="RW" width="1" name="PD_CONTROL_WLAN" comment="Controls the state of switches, isolation and reset in WLAN power domain"/>
    <register addr="0000ffbc" rw_flags="R" width="1" name="PD_STATUS" comment="Indicates the status of the switches in each power domain"/>
    <register addr="0000ffc4" rw_flags="RW" width="1" name="WPLL_CONTROLS_7" comment="PLL controls"/>
    <register addr="0000ffc8" rw_flags="RW" width="1" name="WPLL_CONTROLS_8" comment="PLL controls"/>
    <register addr="0000ffcc" rw_flags="RW" width="1" name="WPLL_CONTROLS_9" comment="PLL controls"/>
    <register addr="0000ffd0" rw_flags="RW" width="1" name="WPLL_CONTROLS_10" comment="PLL controls"/>
    <register addr="0000ffd4" rw_flags="RW" width="1" name="WPLL_CONTROLS_11" comment="PLL controls"/>
    <register addr="0000ffd8" rw_flags="RW" width="1" name="MILDRED_INT_SOURCES2_EN" comment="Interrupt sources enable."/>
    <register addr="0000ffdc" rw_flags="RW" width="1" name="MILDRED_INT_PRIORITIES2" comment="Interrupt source priorities."/>
    <register addr="0000ffe0" rw_flags="RW" width="1" name="MILDRED_INT_SOURCES_EN" comment="Interrupt sources enable."/>
    <register addr="0000ffe4" rw_flags="RW" width="1" name="PMU_RFIC_CTRL_ORIDE" comment="RFIC control registers"/>
    <register addr="0000ffe8" rw_flags="RW" width="1" name="MILDRED_RFIC_MASK" comment="Allows RFIC_CTRL inputs to be enabled to generate an RFIC_EVENT interrupt"/>
    <register addr="0000ffec" rw_flags="R" width="1" name="SLOW_CLK_TIMER_STATUS_3124" comment="A free-running slow clock counter - bits 31-24"/>
    <register addr="0000fff0" rw_flags="R" width="1" name="SLOW_CLK_TIMER_STATUS_2316" comment="A free-running slow clock counter - bits 23-16"/>
    <register addr="0000fff4" rw_flags="R" width="1" name="SLOW_CLK_TIMER_STATUS_1508" comment="A free-running slow clock counter - bits 15-8"/>
    <register addr="0000fff8" rw_flags="R" width="1" name="SLOW_CLK_TIMER_STATUS_0700" comment="A free-running slow clock counter - bits 7-0"/>
    <register addr="0000fffc" rw_flags="RW" width="1" name="WPLL_CONTROLS_12" comment="PLL controls"/>
    <register addr="00010008" rw_flags="RW" width="1" name="PMU_SEMAPHORE" comment="Shared semaphore."/>
    <register addr="0001000c" rw_flags="RW" width="1" name="WATCHDOG_DELAY_3124" comment="This is the reset value for the watchdog countdown. The reset value is 0xFFFF which allows a countdown period of 2 seconds. The maximum value of 0xFFFFFFFF allows for a sleep time of around 37 hours"/>
    <register addr="00010010" rw_flags="RW" width="1" name="WATCHDOG_DELAY_2316" comment="This is the reset value for the watchdog countdown. The reset value is 0xFFFF which allows a countdown period of 2 seconds. The maximum value of 0xFFFFFFFF allows for a sleep time of around 37 hours"/>
    <register addr="00010014" rw_flags="RW" width="1" name="WATCHDOG_DELAY_1508" comment="This is the reset value for the watchdog countdown. The reset value is 0xFFFF which allows a countdown period of 2 seconds. The maximum value of 0xFFFFFFFF allows for a sleep time of around 37 hours"/>
    <register addr="00010018" rw_flags="RW" width="1" name="WATCHDOG_DELAY_0700" comment="This is the reset value for the watchdog countdown. The reset value is 0xFFFF which allows a countdown period of 2 seconds. The maximum value of 0xFFFFFFFF allows for a sleep time of around 37 hours"/>
    <register addr="0001001c" rw_flags="RW" width="1" name="WPLL_CONTROLS_13" comment="PLL controls"/>
    <register addr="00010020" rw_flags="RW" width="1" name="MILDRED_PIO_0700_DRIVE_ENABLE" comment="Bits [ 7: 0] of PIO drive enable bus. These 8 PIO drive enable bits are bit-addressable to allow convenient switching for use with e.g. I2C."/>
    <register addr="00010024" rw_flags="RW" width="1" name="TCKR_OFFSET0" comment="Set the offset to apply to the 32-bit ticker. Word 0."/>
    <register addr="00010028" rw_flags="RW" width="1" name="TCKR_OFFSET1" comment="Set the offset to apply to the 32-bit ticker. Word 1."/>
    <register addr="0001002c" rw_flags="RW" width="1" name="TCKR_OFFSET2" comment="Set the offset to apply to the 32-bit ticker. Word 2."/>
    <register addr="00010030" rw_flags="RW" width="1" name="TCKR_OFFSET3" comment="Set the offset to apply to the 32-bit ticker. Word 3."/>
    <register addr="00010034" rw_flags="RW" width="1" name="MILDRED_INT_STATUS2" comment="Interrupt status. Write to clear."/>
    <register addr="00010038" rw_flags="RW" width="1" name="RTC_IRQ_EN" comment="RTC Interrupt enable. Any writes to this register also clear any RTC interrupt."/>
    <register addr="0001003c" rw_flags="RW" width="1" name="DEEP_SLEEP_CMD" comment="This register is used to trigger events in the sleep block"/>
    <register addr="00010044" rw_flags="RW" width="1" name="DEEP_SLEEP_WAKEUP_ENABLES0" comment="This register controls the sources which can cause deep sleep wakeup. Functions are enabled by setting individual bits. Bits are enumerated  as DEEP_SLEEP_WAKEUP.  "/>
    <register addr="00010048" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS0" comment="This register indicates the currently-active deep sleep wakeup sources."/>
    <register addr="0001004c" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS_STICKY0" comment="This register returns a sticky version of DEEP_SLEEP_STATUS, recording all wakeup events since it was last cleared. Bits are enumerated  as DEEP_SLEEP_WAKEUP.  "/>
    <register addr="00010050" rw_flags="RW" width="1" name="DEEP_SLEEP_WAKEUP_ENABLES1" comment="This register controls the sources which can cause deep sleep wakeup. Functions are enabled by setting individual bits. Bits are enumerated  as DEEP_SLEEP_WAKEUP. "/>
    <register addr="00010054" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS1" comment="This register indicates the currently-active deep sleep wakeup sources."/>
    <register addr="00010058" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS_STICKY1" comment="This register returns a sticky version of DEEP_SLEEP_STATUS, recording all wakeup events since it was last cleared.  "/>
    <register addr="0001005c" rw_flags="RW" width="1" name="PROC_CONFIG" comment="WLAN/WPAN PD processor platform configuration"/>
    <register addr="00010060" rw_flags="RW" width="1" name="MILDRED_PIO_1508_DRIVE_ENABLE" comment="Bits [15: 8] of PIO drive enable bus. These 8 PIO drive enable bits are bit-addressable to allow convenient switching for use with e.g. I2C."/>
    <register addr="00010064" rw_flags="RW" width="1" name="MILDRED_MISC_CONTROL" comment="Miscellaneous control signals"/>
    <register addr="00010068" rw_flags="RW" width="1" name="SLOW_CLK_TIMER_EVENT_3124" comment="When the timer matches this count a deep sleep wakeup event will be triggered - bits 31-24"/>
    <register addr="0001006c" rw_flags="RW" width="1" name="SLOW_CLK_TIMER_EVENT_2316" comment="When the timer matches this count a deep sleep wakeup event will be triggered - bits 23-16"/>
    <register addr="00010070" rw_flags="RW" width="1" name="SLOW_CLK_TIMER_EVENT_1508" comment="When the timer matches this count a deep sleep wakeup event will be triggered - bits 15-8"/>
    <register addr="00010074" rw_flags="RW" width="1" name="SLOW_CLK_TIMER_EVENT_0700" comment="When the timer matches this count a deep sleep wakeup event will be triggered - bits 7-0"/>
    <register addr="00010078" rw_flags="RW" width="1" name="PAD_RETENTION" comment="Pad retention controls."/>
    <register addr="0001007c" rw_flags="RW" width="1" name="DEBUG_SOURCE_SELECT" comment="Select the ouput on DEBUG_OUT[15:0] on the PMU"/>
  </block>
</subsystem>
