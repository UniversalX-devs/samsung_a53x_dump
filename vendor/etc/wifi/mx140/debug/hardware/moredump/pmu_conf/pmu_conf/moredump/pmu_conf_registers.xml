<?xml version="1.0" encoding="utf-8"?>

<!--
(c) SCSC 2015-2016 autogenerated by moredump.py as part of 'drun prep'.
  Changes made to this file may cause incorrect behaviour and will be lost if it is regenerated.

  XML file defining registers for pmu_conf subsystem moredump
  Chip hash: 0147


-->

<subsystem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.samsung.com ../Registers.xsd"
  name="pmu_conf">
  <block name="apm_baaw" comment="APM Base Address remapper and Access Window (BAAW) configuration registers. Not instanced in the RTL.">
    <register addr="14430000" rw_flags="RW" width="4" name="APM_BAAW_START0" comment="24 MSbits for the 36-bit address corresponding to the start of range 0(WLBT CPU programmer's view)"/>
    <register addr="14430004" rw_flags="RW" width="4" name="APM_BAAW_END0" comment="24 MSbits for the 36-bit address corresponding to the end of range 0(WLBT CPU programmer's view)"/>
    <register addr="14430008" rw_flags="RW" width="4" name="APM_BAAW_REMAP0" comment="24 MSbits for the 36-bit address corresponding to the start of the range 0(AP CPU programmer's view)"/>
    <register addr="1443000c" rw_flags="RW" width="4" name="APM_BAAW_ENABLE_DONE0" comment="Control bits for range 0"/>
    <register addr="14430010" rw_flags="RW" width="4" name="APM_BAAW_START1" comment="24 MSbits for the 36-bit address corresponding to the start of range 1(WLBT CPU programmer's view)"/>
    <register addr="14430014" rw_flags="RW" width="4" name="APM_BAAW_END1" comment="24 MSbits for the 36-bit address corresponding to the end of range 1(WLBT CPU programmer's view)"/>
    <register addr="14430018" rw_flags="RW" width="4" name="APM_BAAW_REMAP1" comment="24 MSbits for the 36-bit address corresponding to the start of the range 1(AP CPU programmer's view)"/>
    <register addr="1443001c" rw_flags="RW" width="4" name="APM_BAAW_ENABLE_DONE1" comment="Control bits for range 1"/>
    <register addr="14430020" rw_flags="RW" width="4" name="APM_BAAW_START2" comment="24 MSbits for the 36-bit address corresponding to the start of range 2(WLBT CPU programmer's view)"/>
    <register addr="14430024" rw_flags="RW" width="4" name="APM_BAAW_END2" comment="24 MSbits for the 36-bit address corresponding to the end of range 2(WLBT CPU programmer's view)"/>
    <register addr="14430028" rw_flags="RW" width="4" name="APM_BAAW_REMAP2" comment="24 MSbits for the 36-bit address corresponding to the start of the range 2(AP CPU programmer's view)"/>
    <register addr="1443002c" rw_flags="RW" width="4" name="APM_BAAW_ENABLE_DONE2" comment="Control bits for range 2"/>
    <register addr="14430030" rw_flags="RW" width="4" name="APM_BAAW_START3" comment="24 MSbits for the 36-bit address corresponding to the start of range 3(WLBT CPU programmer's view)"/>
    <register addr="14430034" rw_flags="RW" width="4" name="APM_BAAW_END3" comment="24 MSbits for the 36-bit address corresponding to the end of range 3(WLBT CPU programmer's view)"/>
    <register addr="14430038" rw_flags="RW" width="4" name="APM_BAAW_REMAP3" comment="24 MSbits for the 36-bit address corresponding to the start of the range 3(AP CPU programmer's view)"/>
    <register addr="1443003c" rw_flags="RW" width="4" name="APM_BAAW_ENABLE_DONE3" comment="Control bits for range 3"/>
    <register addr="14430040" rw_flags="RW" width="4" name="APM_BAAW_START4" comment="24 MSbits for the 36-bit address corresponding to the start of range 4(WLBT CPU programmer's view)"/>
    <register addr="14430044" rw_flags="RW" width="4" name="APM_BAAW_END4" comment="24 MSbits for the 36-bit address corresponding to the end of range 4(WLBT CPU programmer's view)"/>
    <register addr="14430048" rw_flags="RW" width="4" name="APM_BAAW_REMAP4" comment="24 MSbits for the 36-bit address corresponding to the start of the range 4(AP CPU programmer's view)"/>
    <register addr="1443004c" rw_flags="RW" width="4" name="APM_BAAW_ENABLE_DONE4" comment="Control bits for range 4"/>
    <register addr="14430050" rw_flags="RW" width="4" name="APM_BAAW_START5" comment="24 MSbits for the 36-bit address corresponding to the start of range 5(WLBT CPU programmer's view)"/>
    <register addr="14430054" rw_flags="RW" width="4" name="APM_BAAW_END5" comment="24 MSbits for the 36-bit address corresponding to the end of range 5(WLBT CPU programmer's view)"/>
    <register addr="14430058" rw_flags="RW" width="4" name="APM_BAAW_REMAP5" comment="24 MSbits for the 36-bit address corresponding to the start of the range 5(AP CPU programmer's view)"/>
    <register addr="1443005c" rw_flags="RW" width="4" name="APM_BAAW_ENABLE_DONE5" comment="Control bits for range 5"/>
    <register addr="14430060" rw_flags="RW" width="4" name="APM_BAAW_START6" comment="24 MSbits for the 36-bit address corresponding to the start of range 6(WLBT CPU programmer's view)"/>
    <register addr="14430064" rw_flags="RW" width="4" name="APM_BAAW_END6" comment="24 MSbits for the 36-bit address corresponding to the end of range 6(WLBT CPU programmer's view)"/>
    <register addr="14430068" rw_flags="RW" width="4" name="APM_BAAW_REMAP6" comment="24 MSbits for the 36-bit address corresponding to the start of the range 6(AP CPU programmer's view)"/>
    <register addr="1443006c" rw_flags="RW" width="4" name="APM_BAAW_ENABLE_DONE6" comment="Control bits for range 6"/>
    <register addr="14430070" rw_flags="RW" width="4" name="APM_BAAW_START7" comment="24 MSbits for the 36-bit address corresponding to the start of range 7(WLBT CPU programmer's view)"/>
    <register addr="14430074" rw_flags="RW" width="4" name="APM_BAAW_END7" comment="24 MSbits for the 36-bit address corresponding to the end of range 7(WLBT CPU programmer's view)"/>
    <register addr="14430078" rw_flags="RW" width="4" name="APM_BAAW_REMAP7" comment="24 MSbits for the 36-bit address corresponding to the start of the range 7(AP CPU programmer's view)"/>
    <register addr="1443007c" rw_flags="RW" width="4" name="APM_BAAW_ENABLE_DONE7" comment="Control bits for range 7"/>
    <register addr="14430080" rw_flags="RW" width="4" name="APM_BAAW_START8" comment="24 MSbits for the 36-bit address corresponding to the start of range 8(WLBT CPU programmer's view)"/>
    <register addr="14430084" rw_flags="RW" width="4" name="APM_BAAW_END8" comment="24 MSbits for the 36-bit address corresponding to the end of range 8(WLBT CPU programmer's view)"/>
    <register addr="14430088" rw_flags="RW" width="4" name="APM_BAAW_REMAP8" comment="24 MSbits for the 36-bit address corresponding to the start of the range 8(AP CPU programmer's view)"/>
    <register addr="1443008c" rw_flags="RW" width="4" name="APM_BAAW_ENABLE_DONE8" comment="Control bits for range 8"/>
  </block>
  <block name="mif_baaw" comment="MIF Base Address remapper and Access Window (BAAW) configuration registers. Not instanced in the RTL.">
    <register addr="14420000" rw_flags="RW" width="4" name="MIF_BAAW_START0" comment="24 MSbits for the 36-bit address corresponding to the start of range 0(WLBT CPU programmer's view)"/>
    <register addr="14420004" rw_flags="RW" width="4" name="MIF_BAAW_END0" comment="24 MSbits for the 36-bit address corresponding to the end of range 0(WLBT CPU programmer's view)"/>
    <register addr="14420008" rw_flags="RW" width="4" name="MIF_BAAW_REMAP0" comment="24 MSbits for the 36-bit address corresponding to the start of the range 0(AP CPU programmer's view)"/>
    <register addr="1442000c" rw_flags="RW" width="4" name="MIF_BAAW_ENABLE_DONE0" comment="Control bits for range 0"/>
    <register addr="14420010" rw_flags="RW" width="4" name="MIF_BAAW_START1" comment="24 MSbits for the 36-bit address corresponding to the start of range 1(WLBT CPU programmer's view)"/>
    <register addr="14420014" rw_flags="RW" width="4" name="MIF_BAAW_END1" comment="24 MSbits for the 36-bit address corresponding to the end of range 1(WLBT CPU programmer's view)"/>
    <register addr="14420018" rw_flags="RW" width="4" name="MIF_BAAW_REMAP1" comment="24 MSbits for the 36-bit address corresponding to the start of the range 1(AP CPU programmer's view)"/>
    <register addr="1442001c" rw_flags="RW" width="4" name="MIF_BAAW_ENABLE_DONE1" comment="Control bits for range 1"/>
    <register addr="14420020" rw_flags="RW" width="4" name="MIF_BAAW_START2" comment="24 MSbits for the 36-bit address corresponding to the start of range 2(WLBT CPU programmer's view)"/>
    <register addr="14420024" rw_flags="RW" width="4" name="MIF_BAAW_END2" comment="24 MSbits for the 36-bit address corresponding to the end of range 2(WLBT CPU programmer's view)"/>
    <register addr="14420028" rw_flags="RW" width="4" name="MIF_BAAW_REMAP2" comment="24 MSbits for the 36-bit address corresponding to the start of the range 2(AP CPU programmer's view)"/>
    <register addr="1442002c" rw_flags="RW" width="4" name="MIF_BAAW_ENABLE_DONE2" comment="Control bits for range 2"/>
    <register addr="14420030" rw_flags="RW" width="4" name="MIF_BAAW_START3" comment="24 MSbits for the 36-bit address corresponding to the start of range 3(WLBT CPU programmer's view)"/>
    <register addr="14420034" rw_flags="RW" width="4" name="MIF_BAAW_END3" comment="24 MSbits for the 36-bit address corresponding to the end of range 3(WLBT CPU programmer's view)"/>
    <register addr="14420038" rw_flags="RW" width="4" name="MIF_BAAW_REMAP3" comment="24 MSbits for the 36-bit address corresponding to the start of the range 3(AP CPU programmer's view)"/>
    <register addr="1442003c" rw_flags="RW" width="4" name="MIF_BAAW_ENABLE_DONE3" comment="Control bits for range 3"/>
    <register addr="14420040" rw_flags="RW" width="4" name="MIF_BAAW_START4" comment="24 MSbits for the 36-bit address corresponding to the start of range 4(WLBT CPU programmer's view)"/>
    <register addr="14420044" rw_flags="RW" width="4" name="MIF_BAAW_END4" comment="24 MSbits for the 36-bit address corresponding to the end of range 4(WLBT CPU programmer's view)"/>
    <register addr="14420048" rw_flags="RW" width="4" name="MIF_BAAW_REMAP4" comment="24 MSbits for the 36-bit address corresponding to the start of the range 4(AP CPU programmer's view)"/>
    <register addr="1442004c" rw_flags="RW" width="4" name="MIF_BAAW_ENABLE_DONE4" comment="Control bits for range 4"/>
  </block>
  <block name="pmu_boot" comment="Boot source">
    <register addr="14460000" rw_flags="RW" width="1" name="BOOT_SOURCE" comment="KA RAM access source."/>
    <register addr="14460004" rw_flags="RW" width="1" name="BOOT_CFG_ACK" comment="Configuration ACK"/>
    <register addr="14460008" rw_flags="RW" width="1" name="AP2WB_MAILBOX" comment="AP-accessible mailbox register. Writing to this generates an interrupt."/>
    <register addr="1446000c" rw_flags="R" width="1" name="WB2AP_MAILBOX" comment="AP-accessible mailbox register. Read-only status from PMU return register."/>
  </block>
  <block name="pmu_sysreg" comment="SYSREG configuration. The generated RTL from this XML file is not instantiated. The G2 SYSREG output is used. This XML file is just for software.">
    <register addr="14450000" rw_flags="R" width="4" name="USER_REG0" comment="Spare Register"/>
    <register addr="14450004" rw_flags="RW" width="4" name="USER_REG1" comment="Spare Register"/>
    <register addr="14450008" rw_flags="RW" width="4" name="USER_REG2" comment="Spare Register"/>
    <register addr="1445000c" rw_flags="RW" width="4" name="USER_REG3" comment="Spare Register"/>
    <register addr="14450010" rw_flags="RW" width="4" name="USER_REG4" comment="Spare Register"/>
    <register addr="14450100" rw_flags="RW" width="1" name="SFR_APB" comment="0= Disable the timeout of SFR APBIF 1= Enable the timeout of SFR APBIF"/>
    <register addr="14450104" rw_flags="RW" width="1" name="BUS_COMPONENT_DRCG_EN" comment="0= Disable Dynamic Root Clock Gating 1= Enable Dynamic Root Clock Gating"/>
    <register addr="14450108" rw_flags="RW" width="1" name="MEMCLK_EN" comment="Memory Clock Enable"/>
    <register addr="14450300" rw_flags="RW" width="4" name="LPP_MCS" comment="RAM Margin controls"/>
    <register addr="14450304" rw_flags="RW" width="2" name="LPP_MCSW" comment="RAM Margin controls"/>
    <register addr="14450308" rw_flags="RW" width="1" name="LPP_MCSRD" comment="RAM Margin controls"/>
    <register addr="1445030c" rw_flags="RW" width="1" name="LPP_MCSWR" comment="RAM Margin controls"/>
    <register addr="14450310" rw_flags="RW" width="1" name="LPP_KCS" comment="RAM Margin controls"/>
    <register addr="14450314" rw_flags="RW" width="4" name="LPP_ADME" comment="RAM Margin controls"/>
    <register addr="14450318" rw_flags="RW" width="1" name="LPP_WRME" comment="RAM Margin controls"/>
    <register addr="1445031c" rw_flags="RW" width="2" name="EMA_STATUS" comment="RAM Margin control-status"/>
    <register addr="14450400" rw_flags="RW" width="4" name="PROC_RMP_BOOT_ADDR" comment="Remapping boot address for WLAN PD CPU"/>
    <register addr="14450404" rw_flags="RW" width="4" name="WPAN_RMP_BOOT_ADDR" comment="Remapping boot address for WPAN PD CPU"/>
    <register addr="14450408" rw_flags="RW" width="1" name="SWEEPER_DBUS_BYPASS" comment="Bypass DBUS Sweeper"/>
    <register addr="1445040c" rw_flags="RW" width="1" name="SWEEPER_PBUS_BYPASS" comment="Bypass PBUS Sweeper"/>
    <register addr="14450410" rw_flags="RW" width="1" name="BPS_SEL_RESP" comment="BPS clear request AXI response"/>
    <register addr="14450414" rw_flags="R" width="4" name="CHIP_VERSION_ID" comment="Chip version IDs"/>
  </block>
  <block name="pmu_tzpc" comment="TrustZone configuration. This is not instanced in the RTL. A TrustZone register block from G2 is used. This is just for software.">
    <register addr="14410200" rw_flags="R" width="4" name="TZPC_PROT0STAT" comment="TrustZone status for register banks, aliased to 0x200"/>
    <register addr="14410204" rw_flags="W" width="4" name="TZPC_PROT0SET" comment="TrustZone set for register banks, aliased to 0x204"/>
    <register addr="14410208" rw_flags="W" width="4" name="TZPC_PROT0CLR" comment="TrustZone clear for register banks, aliased to 0x208"/>
    <register addr="14410210" rw_flags="R" width="4" name="TZPC_PROT1STAT" comment="TrustZone status for register banks, aliased to 0x210"/>
    <register addr="14410214" rw_flags="W" width="4" name="TZPC_PROT1SET" comment="TrustZone set for register banks, aliased to 0x214"/>
    <register addr="14410218" rw_flags="W" width="4" name="TZPC_PROT1CLR" comment="TrustZone clear for register banks, aliased to 0x218"/>
    <register addr="14410220" rw_flags="RW" width="2" name="TZPC_R0SIZE" comment="TrustZone size register aliased to 0x220"/>
  </block>
</subsystem>
